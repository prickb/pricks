{"ast":null,"code":"import _objectSpread from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as _getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n      if (me._request) {\n        return;\n      }\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n        me._request = null;\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          me._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          me._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      me._lastDate = date;\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n      if (me._active) {\n        me._notify(false);\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n      if (!me._active) {\n        me._target[prop] = to;\n        me._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me._dataCheck();\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n      me._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      me._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n        data = me._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = me._getOtherScale(scale);\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, value, parsed, otherValue;\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(me._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        me.parse(0, count);\n      }\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n      me.parse(start, count);\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._sync(['_removeElements', start, count]);\n      this._sync(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var index = me.index,\n        vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = me._getRuler();\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n        vScale = _me$_cachedMeta.vScale,\n        _stacked = _me$_cachedMeta._stacked,\n        _me$options = me.options,\n        baseValue = _me$options.base,\n        minBarLength = _me$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (me.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n        _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n        xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n        _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n        yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n        data = _this$_cachedMeta.data,\n        _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n        iScale = _me$_cachedMeta2.iScale,\n        vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        me.updateElement(point, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n    _classCallCheck(this, DoughnutController);\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n      var chartWeight = me._getRingWeight(me.index);\n      var _me$_getRotationExten = me._getRotationExtents(),\n        circumference = _me$_getRotationExten.circumference,\n        rotation = _me$_getRotationExten.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var circumference = me._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var startAngle = me._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            if (controller !== me) {\n              controller.configure();\n            }\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      me._drawStart = start;\n      me._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._datasetIndex = me.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n        iScale = _me$_cachedMeta3.iScale,\n        vScale = _me$_cachedMeta3.vScale,\n        _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n    _classCallCheck(this, PolarAreaController);\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(ScatterController);\n}(LineController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n      index = _metasets$i2.index,\n      data = _metasets$i2.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator4 = _createForOfIteratorHelper(layouts),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var wrap = _step4.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator5 = _createForOfIteratorHelper(boxes),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var layout = _step5.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n    x = _getRelativePosition$.x,\n    y = _getRelativePosition$.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return me;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this4;\n    _classCallCheck(this, Scale);\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n      var _me$getUserBounds = me.getUserBounds(),\n        min = _me$getUserBounds.min,\n        max = _me$getUserBounds.max,\n        minDefined = _me$getUserBounds.minDefined,\n        maxDefined = _me$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = me.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = me._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n        _me$options2 = me.options,\n        tickOpts = _me$options2.ticks,\n        titleOpts = _me$options2.title,\n        gridOpts = _me$options2.grid;\n      var display = me._isVisible();\n      var isHorizontal = me.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n            first = _me$_getLabelSizes.first,\n            last = _me$_getLabelSizes.last,\n            widest = _me$_getLabelSizes.widest,\n            highest = _me$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n      me._handleMargins();\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n        _me$options3$ticks = _me$options3.ticks,\n        align = _me$options3$ticks.align,\n        padding = _me$options3$ticks.padding,\n        position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n        axis = _this$options.axis,\n        position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = me._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = me.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = me._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n        position = _me$options4.position,\n        ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n        position = _me$options5.position,\n        _me$options5$ticks = _me$options5.ticks,\n        crossAlign = _me$options5$ticks.crossAlign,\n        mirror = _me$options5$ticks.mirror,\n        padding = _me$options5$ticks.padding;\n      var labelSizes = me._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = me.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = me.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = me.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = me.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n      if (me.options.ticks.mirror) {\n        return;\n      }\n      var chart = me.chart;\n      var position = me.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n        ctx = me.ctx,\n        grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = me.ctx;\n      var area = me._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options2 = this.options,\n        position = _this$options2.position,\n        title = _this$options2.title,\n        reverse = _this$options2.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n      if (!me._isVisible()) {\n        return;\n      }\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n        me._notify(me._init, chart, 'install');\n      }\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n      var result = me._notify(descriptors, chart, hook, args);\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n        me._notify(me._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator6 = _createForOfIteratorHelper(descriptors),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var descriptor = _step6.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator7 = _createForOfIteratorHelper(names),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var prop = _step7.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator8 = _createForOfIteratorHelper(names),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var prop = _step8.value;\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n  return false;\n}\nvar version = \"3.5.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this5 = this;\n    _classCallCheck(this, Chart);\n    var me = this;\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n        aspectRatio = _this$options3.aspectRatio,\n        maintainAspectRatio = _this$options3.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n        datasets = me.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n      me._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n          meta = me.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      me._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n      me._plugins.invalidate();\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n          controller = _me$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      me._minPadding = minPadding;\n      me._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      me._updateDatasets(mode);\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      me._layers.sort(compare2Level('z', '_idx'));\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n          width = _me$_resizeBeforeDraw.width,\n          height = _me$_resizeBeforeDraw.height;\n        me._resize(width, height);\n        me._resizeBeforeDraw = null;\n      }\n      me.clear();\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = me._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = me.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? me.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        me.update();\n      } else {\n        me.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        me.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n        ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      me.config.clearCache();\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        me._eventHandler(e);\n      };\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n          index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = me._handleEvent(e, replay);\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        me.render();\n      }\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n        lastActive = _me$_active === void 0 ? [] : _me$_active,\n        options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n      me._lastEvent = null;\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n      changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this7;\n    _classCallCheck(this, ArcElement);\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n    return _this7;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint.angle,\n        distance = _getAngleFromPoint.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options4 = this.options,\n        offset = _this$options4.offset,\n        spacing = _this$options4.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n        circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset, spacing);\n      drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref2 = params || {},\n    _ref2$move = _ref2.move,\n    move = _ref2$move === void 0 ? true : _ref2$move,\n    reverse = _ref2.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref3 = params || {},\n    _ref3$move = _ref3.move,\n    move = _ref3$move === void 0 ? true : _ref3$move,\n    reverse = _ref3.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator9 = _createForOfIteratorHelper(segments),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var segment = _step9.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this8;\n    _classCallCheck(this, LineElement);\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n    _this8._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n    return _this8;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n      var segmentMethod = _getSegmentMethod(me);\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      var _iterator10 = _createForOfIteratorHelper(segments),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var segment = _step10.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n      ctx.save();\n      _draw(ctx, me, start, count);\n      ctx.restore();\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this9;\n    _classCallCheck(this, PointElement);\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n    return _this9;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var me = this;\n      var options = me.options;\n      if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this10;\n    _classCallCheck(this, BarElement);\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n    return _this10;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      var inflateAmount = 0.33;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n    min = _iScale$getUserBounds2.min,\n    max = _iScale$getUserBounds2.max,\n    minDefined = _iScale$getUserBounds2.minDefined,\n    maxDefined = _iScale$getUserBounds2.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var target = null;\n  var horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n    _ref4$x = _ref4.x,\n    x = _ref4$x === void 0 ? null : _ref4$x,\n    _ref4$y = _ref4.y,\n    y = _ref4$y === void 0 ? null : _ref4$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref5) {\n    var start = _ref5.start,\n      end = _ref5.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  var chart = source.chart,\n    scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nfunction getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator11 = _createForOfIteratorHelper(segments),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var segment = _step11.value;\n      var start = segment.start,\n        end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator12 = _createForOfIteratorHelper(targetSegments),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var tgt = _step12.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator13 = _createForOfIteratorHelper(fillSources),\n            _step13;\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var fillSource = _step13.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref6 = bounds || {},\n    property = _ref6.property,\n    start = _ref6.start,\n    end = _ref6.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator14 = _createForOfIteratorHelper(segments),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var _step14$value = _step14.value,\n        src = _step14$value.source,\n        tgt = _step14$value.target,\n        start = _step14$value.start,\n        end = _step14$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref7 = fillOption || {},\n    _ref7$above = _ref7.above,\n    above = _ref7$above === void 0 ? color : _ref7$above,\n    _ref7$below = _ref7.below,\n    below = _ref7$below === void 0 ? color : _ref7$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this11;\n    _classCallCheck(this, Legend);\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = me._margins.left;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = me._margins.top;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n        ctx = me.ctx;\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = me._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxWidth = me.maxWidth,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxHeight = me.maxHeight,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n      if (!me.options.display) {\n        return;\n      }\n      var titleHeight = me._computeTitleHeight();\n      var hitboxes = me.legendHitBoxes,\n        _me$options6 = me.options,\n        align = _me$options6.align,\n        padding = _me$options6.labels.padding,\n        rtl = _me$options6.rtl;\n      var rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        var _iterator15 = _createForOfIteratorHelper(hitboxes),\n          _step15;\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var hitbox = _step15.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        var _iterator16 = _createForOfIteratorHelper(hitboxes),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var _hitbox = _step16.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n        me._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n        columnSizes = me.columnSizes,\n        lineWidths = me.lineWidths,\n        ctx = me.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = me.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n        me._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this12;\n    _classCallCheck(this, Title);\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n      var _me$_drawArgs = me._drawArgs(offset),\n        titleX = _me$_drawArgs.titleX,\n        titleY = _me$_drawArgs.titleY,\n        maxWidth = _me$_drawArgs.maxWidth,\n        rotation = _me$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this13;\n    _classCallCheck(this, Tooltip);\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n        caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n      if (!opacity) {\n        return;\n      }\n      me._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref8) {\n        var datasetIndex = _ref8.datasetIndex,\n          index = _ref8.index;\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = me._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n      var positionChanged = me._positionChanged(active, e);\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        me._active = active;\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this14;\n    _classCallCheck(this, CategoryScale);\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getUserBounds2 = me.getUserBounds(),\n        minDefined = _me$getUserBounds2.minDefined,\n        maxDefined = _me$getUserBounds2.maxDefined;\n      var _me$getMinMax = me.getMinMax(true),\n        min = _me$getMinMax.min,\n        max = _me$getMinMax.max;\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref9) {\n  var horizontal = _ref9.horizontal,\n    minRotation = _ref9.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this15;\n    _classCallCheck(this, LinearScaleBase);\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n      var _me$getUserBounds3 = me.getUserBounds(),\n        minDefined = _me$getUserBounds3.minDefined,\n        maxDefined = _me$getUserBounds3.maxDefined;\n      var min = me.min,\n        max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax2 = me.getMinMax(true),\n        min = _me$getMinMax2.min,\n        max = _me$getMinMax2.max;\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = me._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this16;\n    _classCallCheck(this, LogarithmicScale);\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax3 = me.getMinMax(true),\n        min = _me$getMinMax3.min,\n        max = _me$getMinMax3.max;\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$getUserBounds4 = me.getUserBounds(),\n        minDefined = _me$getUserBounds4.minDefined,\n        maxDefined = _me$getUserBounds4.maxDefined;\n      var min = me.min;\n      var max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale.getLabels().length;\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (var i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    var angle = toDegrees(scale.getIndexAngle(i));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this17;\n    _classCallCheck(this, RadialLinearScale);\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax4 = me.getMinMax(false),\n        min = _me$getMinMax4.min,\n        max = _me$getMinMax4.max;\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var me = this;\n      var pointLabels = me._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(me.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n        backgroundColor = _me$options7.backgroundColor,\n        circular = _me$options7.grid.circular;\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this18;\n    _classCallCheck(this, TimeScale);\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n      var _me$getUserBounds5 = me.getUserBounds(),\n        min = _me$getUserBounds5.min,\n        max = _me$getUserBounds5.max,\n        minDefined = _me$getUserBounds5.minDefined,\n        maxDefined = _me$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = me.min;\n      var max = me.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n      var size = me._getLabelSize(exampleLabel);\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = me.getMatchingVisibleMetas();\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = me.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this19;\n    _classCallCheck(this, TimeSeriesScale);\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._minPos = undefined;\n    _this19._tableRange = undefined;\n    return _this19;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n      var timestamps = me._getTimestampsForTable();\n      var table = me._table = me.buildLookupTable(timestamps);\n      me._minPos = interpolate(table, me.min);\n      me._tableRange = interpolate(table, me.max) - me._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_me$_cachedMeta","_me$options","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","_this$_parsing3","_this$_parsing3$xAxis","_this$_parsing3$yAxis","_this$_cachedMeta","points","_me$_cachedMeta2","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_super3","_this","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_me$_getRotationExten","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_me$_cachedMeta3","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","_iScale$getUserBounds","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_DatasetController5","_super5","_this2","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","_LineController","_super8","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","_metasets$i","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","_metasets$i2","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator4","_step4","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator5","_step5","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition$","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","_super10","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","_this$getProps","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_Element","_super11","_this4","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_me$getUserBounds","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_me$options2","titleOpts","gridOpts","titleHeight","_me$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_me$options3","_me$options3$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_me$options4","_me$options5","_me$options5$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options2","_titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_iterator6","_step6","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator7","_step7","descriptorDefaults","_getResolver2","resolverCache","_descriptors2","isScriptable","isIndexable","_iterator8","_step8","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","_this5","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","_this$options3","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_me$getDatasetMeta","_updateLayout","_updateDatasets","_eventHandler","noArea","_me$_layers","_idx","_updateDataset","_me$_resizeBeforeDraw","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_this6","eventFilter","_handleEvent","_me$_active","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","_Element2","_super12","_this7","_assertThisInitialized","chartX","chartY","_getAngleFromPoint","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options4","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref2","_ref2$move","fastPathSegment","_pathVars2","_ref3","_ref3$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator9","_step9","usePath2D","LineElement","_Element3","_super13","_this8","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator10","_step10","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this9","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","_Element5","_super15","_this10","_boundingRects","addRectPath","inflateAmount","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","_iScale$getUserBounds2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi2","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","_source$scale","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","_ref4","_ref4$x","_ref4$y","linePoints","_ref5","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","_iterator11","_step11","targetSegments","_iterator12","_step12","tgt","subBounds","fillSources","_iterator13","_step13","fillSource","clipBounds","_scale$chart$chartAre","_ref6","interpolatedLineTo","interpolatedPoint","_fill","_iterator14","_step14","_step14$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","_ref7","_ref7$above","_ref7$below","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_Element6","_super16","_this11","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_me$options6","rtl","rtlHelper","_iterator15","_step15","hitbox","leftForLtr","_iterator16","_step16","_draw","defaultColor","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_super17","_this12","_padding","textSize","_drawArgs","fontOpts","_me$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_super18","_this13","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref8","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_super19","_this14","_startValue","_valueRange","isFinite","_me$getUserBounds2","_me$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref9","rad","LinearScaleBase","_Scale2","_super20","_this15","_endValue","handleTickRangeOptions","_me$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_super21","_me$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this16","_zero","_me$getMinMax3","_me$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_super23","_this17","_me$getMinMax4","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_me$options7","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this18","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_me$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this19","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/adhiraj/Desktop/PRICKLY NEW/frontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,MAAK,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,mBAAmB,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,GAAG,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,EAAE,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,qBAAqB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,eAAc,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,4BAA4B,EAAEC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,kBAAkB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,SAAS,EAAEC,EAAE,IAAIC,KAAK,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,UAAU,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,GAAG,EAAEC,EAAE,IAAIC,QAAQ,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,0BAA0B,EAAEC,EAAE,IAAIC,gBAAgB,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,IAAI,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,OAAO,QAAQ,6BAA6B;AAC54D,SAAS3L,CAAC,IAAIC,QAAQ,QAAQ,6BAA6B;AAAC,IAEtD2L,QAAQ;EACZ,SAAAA,SAAA,EAAc;IAAAC,eAAA,OAAAD,QAAA;IACZ,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAGC,SAAS;EAC5B;EAACC,YAAA,CAAAR,QAAA;IAAAS,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;MAChC,IAAMC,SAAS,GAAGH,KAAK,CAACI,SAAS,CAACF,IAAI,CAAC;MACvC,IAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAQ;MAC/BH,SAAS,CAACI,OAAO,CAAC,UAAAC,EAAE;QAAA,OAAIA,EAAE,CAAC;UACzBT,KAAK,EAALA,KAAK;UACLU,OAAO,EAAET,KAAK,CAACS,OAAO;UACtBJ,QAAQ,EAARA,QAAQ;UACRK,WAAW,EAAEC,IAAI,CAACC,GAAG,CAACX,IAAI,GAAGD,KAAK,CAACa,KAAK,EAAER,QAAQ;QACpD,CAAC,CAAC;MAAA,EAAC;IACL;EAAC;IAAAT,GAAA;IAAAC,KAAA,EACD,SAAAiB,SAAA,EAAW;MACT,IAAMC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC1B,QAAQ,EAAE;QACf;MACF;MACA0B,EAAE,CAACvB,QAAQ,GAAG,IAAI;MAClBuB,EAAE,CAAC1B,QAAQ,GAAGrM,gBAAgB,CAACgO,IAAI,CAACC,MAAM,EAAE,YAAM;QAChDF,EAAE,CAACG,OAAO,CAAC,CAAC;QACZH,EAAE,CAAC1B,QAAQ,GAAG,IAAI;QAClB,IAAI0B,EAAE,CAACvB,QAAQ,EAAE;UACfuB,EAAE,CAACD,QAAQ,CAAC,CAAC;QACf;MACF,CAAC,CAAC;IACJ;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EACD,SAAAqB,QAAA,EAA2B;MAAA,IAAnBjB,IAAI,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAGE,IAAI,CAACC,GAAG,CAAC,CAAC;MACvB,IAAMP,EAAE,GAAG,IAAI;MACf,IAAIQ,SAAS,GAAG,CAAC;MACjBR,EAAE,CAACzB,OAAO,CAACiB,OAAO,CAAC,UAACP,KAAK,EAAED,KAAK,EAAK;QACnC,IAAI,CAACC,KAAK,CAACwB,OAAO,IAAI,CAACxB,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;UACzC;QACF;QACA,IAAMK,KAAK,GAAGzB,KAAK,CAACyB,KAAK;QACzB,IAAIhO,CAAC,GAAGgO,KAAK,CAACL,MAAM,GAAG,CAAC;QACxB,IAAIM,IAAI,GAAG,KAAK;QAChB,IAAIC,IAAI;QACR,OAAOlO,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAClBkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;UACf,IAAIkO,IAAI,CAACC,OAAO,EAAE;YAChB,IAAID,IAAI,CAACE,MAAM,GAAG7B,KAAK,CAACM,QAAQ,EAAE;cAChCN,KAAK,CAACM,QAAQ,GAAGqB,IAAI,CAACE,MAAM;YAC9B;YACAF,IAAI,CAACG,IAAI,CAAC7B,IAAI,CAAC;YACfyB,IAAI,GAAG,IAAI;UACb,CAAC,MAAM;YACLD,KAAK,CAAChO,CAAC,CAAC,GAAGgO,KAAK,CAACA,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC;YAClCK,KAAK,CAACM,GAAG,CAAC,CAAC;UACb;QACF;QACA,IAAIL,IAAI,EAAE;UACR3B,KAAK,CAAC2B,IAAI,CAAC,CAAC;UACZX,EAAE,CAACjB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;QAC5C;QACA,IAAI,CAACwB,KAAK,CAACL,MAAM,EAAE;UACjBpB,KAAK,CAACwB,OAAO,GAAG,KAAK;UACrBT,EAAE,CAACjB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;UAC1CD,KAAK,CAACS,OAAO,GAAG,KAAK;QACvB;QACAc,SAAS,IAAIE,KAAK,CAACL,MAAM;MAC3B,CAAC,CAAC;MACFL,EAAE,CAACtB,SAAS,GAAGQ,IAAI;MACnB,IAAIsB,SAAS,KAAK,CAAC,EAAE;QACnBR,EAAE,CAACvB,QAAQ,GAAG,KAAK;MACrB;IACF;EAAC;IAAAI,GAAA;IAAAC,KAAA,EACD,SAAAmC,UAAUjC,KAAK,EAAE;MACf,IAAMkC,MAAM,GAAG,IAAI,CAAC3C,OAAO;MAC3B,IAAIU,KAAK,GAAGiC,MAAM,CAACC,GAAG,CAACnC,KAAK,CAAC;MAC7B,IAAI,CAACC,KAAK,EAAE;QACVA,KAAK,GAAG;UACNwB,OAAO,EAAE,KAAK;UACdf,OAAO,EAAE,IAAI;UACbgB,KAAK,EAAE,EAAE;UACTrB,SAAS,EAAE;YACT+B,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE;UACZ;QACF,CAAC;QACDH,MAAM,CAACI,GAAG,CAACtC,KAAK,EAAEC,KAAK,CAAC;MAC1B;MACA,OAAOA,KAAK;IACd;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAyC,OAAOvC,KAAK,EAAEwC,KAAK,EAAEC,EAAE,EAAE;MACvB,IAAI,CAACR,SAAS,CAACjC,KAAK,CAAC,CAACK,SAAS,CAACmC,KAAK,CAAC,CAACE,IAAI,CAACD,EAAE,CAAC;IACjD;EAAC;IAAA5C,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAI3C,KAAK,EAAE0B,KAAK,EAAE;MAAA,IAAAkB,qBAAA;MAChB,IAAI,CAAClB,KAAK,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;QAC3B;MACF;MACA,CAAAuB,qBAAA,OAAI,CAACX,SAAS,CAACjC,KAAK,CAAC,CAAC0B,KAAK,EAACgB,IAAI,CAAAG,KAAA,CAAAD,qBAAA,EAAAE,kBAAA,CAAIpB,KAAK,EAAC;IAC5C;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAAiD,IAAI/C,KAAK,EAAE;MACT,OAAO,IAAI,CAACiC,SAAS,CAACjC,KAAK,CAAC,CAAC0B,KAAK,CAACL,MAAM,GAAG,CAAC;IAC/C;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAgB,MAAMd,KAAK,EAAE;MACX,IAAMC,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,EAAE;QACV;MACF;MACAA,KAAK,CAACwB,OAAO,GAAG,IAAI;MACpBxB,KAAK,CAACa,KAAK,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC;MACxBtB,KAAK,CAACM,QAAQ,GAAGN,KAAK,CAACyB,KAAK,CAACsB,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;QAAA,OAAKtC,IAAI,CAACuC,GAAG,CAACF,GAAG,EAAEC,GAAG,CAACE,SAAS,CAAC;MAAA,GAAE,CAAC,CAAC;MAClF,IAAI,CAACrC,QAAQ,CAAC,CAAC;IACjB;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EACD,SAAA2B,QAAQzB,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;QAClB,OAAO,KAAK;MACd;MACA,IAAMQ,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACwB,OAAO,IAAI,CAACxB,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;QACnD,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAuD,KAAKrD,KAAK,EAAE;MACV,IAAMC,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;QACjC;MACF;MACA,IAAMK,KAAK,GAAGzB,KAAK,CAACyB,KAAK;MACzB,IAAIhO,CAAC,GAAGgO,KAAK,CAACL,MAAM,GAAG,CAAC;MACxB,OAAO3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAClBgO,KAAK,CAAChO,CAAC,CAAC,CAAC4P,MAAM,CAAC,CAAC;MACnB;MACArD,KAAK,CAACyB,KAAK,GAAG,EAAE;MAChB,IAAI,CAAC3B,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEqB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;IACpD;EAAC;IAAA1B,GAAA;IAAAC,KAAA,EACD,SAAAyD,OAAOvD,KAAK,EAAE;MACZ,OAAO,IAAI,CAACT,OAAO,CAACiE,MAAM,CAACxD,KAAK,CAAC;IACnC;EAAC;EAAA,OAAAZ,QAAA;AAAA;AAEH,IAAIqE,QAAQ,GAAG,IAAIrE,QAAQ,CAAC,CAAC;AAE7B,IAAMsE,WAAW,GAAG,aAAa;AACjC,IAAMC,aAAa,GAAG;EACpBC,OAAO,WAAAA,QAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACxB,OAAOA,MAAM,GAAG,GAAG,GAAGD,EAAE,GAAGD,IAAI;EACjC,CAAC;EACDtQ,KAAK,WAAAA,MAACsQ,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACtB,IAAMC,EAAE,GAAGzQ,MAAK,CAACsQ,IAAI,IAAIH,WAAW,CAAC;IACrC,IAAMO,EAAE,GAAGD,EAAE,CAACE,KAAK,IAAI3Q,MAAK,CAACuQ,EAAE,IAAIJ,WAAW,CAAC;IAC/C,OAAOO,EAAE,IAAIA,EAAE,CAACC,KAAK,GACjBD,EAAE,CAACE,GAAG,CAACH,EAAE,EAAED,MAAM,CAAC,CAACK,SAAS,CAAC,CAAC,GAC9BN,EAAE;EACR,CAAC;EACDO,MAAM,WAAAA,OAACR,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACvB,OAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAI,IAAIE,MAAM;EACpC;AACF,CAAC;AAAC,IACIO,SAAS;EACb,SAAAA,UAAYC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEX,EAAE,EAAE;IAAAzE,eAAA,OAAAiF,SAAA;IACjC,IAAMI,YAAY,GAAGF,MAAM,CAACC,IAAI,CAAC;IACjCX,EAAE,GAAG3Q,OAAO,CAAC,CAACoR,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;IAClD,IAAMA,IAAI,GAAG1Q,OAAO,CAAC,CAACoR,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD,IAAI,CAACjC,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC8C,GAAG,GAAGJ,GAAG,CAAC9D,EAAE,IAAIkD,aAAa,CAACY,GAAG,CAACpE,IAAI,IAAI,OAAO0D,IAAI,CAAC;IAC3D,IAAI,CAACe,OAAO,GAAGvR,OAAO,CAACkR,GAAG,CAACM,MAAM,CAAC,IAAIxR,OAAO,CAACyR,MAAM;IACpD,IAAI,CAACC,MAAM,GAAGnE,IAAI,CAACoE,KAAK,CAAC1D,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIgD,GAAG,CAACU,KAAK,IAAI,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAACtB,MAAM,GAAGlB,IAAI,CAACoE,KAAK,CAACT,GAAG,CAAChE,QAAQ,CAAC;IACvD,IAAI,CAAC2E,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;IACvB,IAAI,CAACC,OAAO,GAAGZ,MAAM;IACrB,IAAI,CAACa,KAAK,GAAGZ,IAAI;IACjB,IAAI,CAACa,KAAK,GAAGzB,IAAI;IACjB,IAAI,CAAC0B,GAAG,GAAGzB,EAAE;IACb,IAAI,CAAC0B,SAAS,GAAG7F,SAAS;EAC5B;EAACC,YAAA,CAAA0E,SAAA;IAAAzE,GAAA;IAAAC,KAAA,EACD,SAAA2F,OAAA,EAAS;MACP,OAAO,IAAI,CAAC5D,OAAO;IACrB;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOnB,GAAG,EAAET,EAAE,EAAE5D,IAAI,EAAE;MACpB,IAAMc,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACa,OAAO,EAAE;QACdb,EAAE,CAACjB,OAAO,CAAC,KAAK,CAAC;QACjB,IAAM2E,YAAY,GAAG1D,EAAE,CAACoE,OAAO,CAACpE,EAAE,CAACqE,KAAK,CAAC;QACzC,IAAMM,OAAO,GAAGzF,IAAI,GAAGc,EAAE,CAAC+D,MAAM;QAChC,IAAMa,MAAM,GAAG5E,EAAE,CAACoC,SAAS,GAAGuC,OAAO;QACrC3E,EAAE,CAAC+D,MAAM,GAAG7E,IAAI;QAChBc,EAAE,CAACoC,SAAS,GAAGxC,IAAI,CAACoE,KAAK,CAACpE,IAAI,CAACuC,GAAG,CAACyC,MAAM,EAAErB,GAAG,CAAChE,QAAQ,CAAC,CAAC;QACzDS,EAAE,CAACc,MAAM,IAAI6D,OAAO;QACpB3E,EAAE,CAACkE,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;QACrBnE,EAAE,CAACuE,GAAG,GAAGpS,OAAO,CAAC,CAACoR,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;QACtD7C,EAAE,CAACsE,KAAK,GAAGnS,OAAO,CAAC,CAACoR,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;MAClD;IACF;EAAC;IAAAjE,GAAA;IAAAC,KAAA,EACD,SAAAwD,OAAA,EAAS;MACP,IAAMtC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACa,OAAO,EAAE;QACdb,EAAE,CAACe,IAAI,CAACT,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QACnBP,EAAE,CAACa,OAAO,GAAG,KAAK;QAClBb,EAAE,CAACjB,OAAO,CAAC,KAAK,CAAC;MACnB;IACF;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAiC,KAAK7B,IAAI,EAAE;MACT,IAAMc,EAAE,GAAG,IAAI;MACf,IAAM2E,OAAO,GAAGzF,IAAI,GAAGc,EAAE,CAAC+D,MAAM;MAChC,IAAMxE,QAAQ,GAAGS,EAAE,CAACoC,SAAS;MAC7B,IAAMqB,IAAI,GAAGzD,EAAE,CAACqE,KAAK;MACrB,IAAMxB,IAAI,GAAG7C,EAAE,CAACsE,KAAK;MACrB,IAAMH,IAAI,GAAGnE,EAAE,CAACkE,KAAK;MACrB,IAAMpB,EAAE,GAAG9C,EAAE,CAACuE,GAAG;MACjB,IAAIxB,MAAM;MACV/C,EAAE,CAACa,OAAO,GAAGgC,IAAI,KAAKC,EAAE,KAAKqB,IAAI,IAAKQ,OAAO,GAAGpF,QAAS,CAAC;MAC1D,IAAI,CAACS,EAAE,CAACa,OAAO,EAAE;QACfb,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGX,EAAE;QACrB9C,EAAE,CAACjB,OAAO,CAAC,IAAI,CAAC;QAChB;MACF;MACA,IAAI4F,OAAO,GAAG,CAAC,EAAE;QACf3E,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGZ,IAAI;QACvB;MACF;MACAE,MAAM,GAAI4B,OAAO,GAAGpF,QAAQ,GAAI,CAAC;MACjCwD,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAGA,MAAM;MACjDA,MAAM,GAAG/C,EAAE,CAAC4D,OAAO,CAAChE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEY,MAAM,CAAC,CAAC,CAAC;MACrD/C,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGzD,EAAE,CAAC2D,GAAG,CAACd,IAAI,EAAEC,EAAE,EAAEC,MAAM,CAAC;IAC7C;EAAC;IAAAlE,GAAA;IAAAC,KAAA,EACD,SAAA+F,KAAA,EAAO;MACL,IAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAC;MACxD,OAAO,IAAIO,OAAO,CAAC,UAACC,GAAG,EAAEC,GAAG,EAAK;QAC/BH,QAAQ,CAACpD,IAAI,CAAC;UAACsD,GAAG,EAAHA,GAAG;UAAEC,GAAG,EAAHA;QAAG,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ;EAAC;IAAApG,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQmG,QAAQ,EAAE;MAChB,IAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAK,GAAG,KAAK;MACvC,IAAMJ,QAAQ,GAAG,IAAI,CAACN,SAAS,IAAI,EAAE;MACrC,KAAK,IAAI9R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoS,QAAQ,CAACzE,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACxCoS,QAAQ,CAACpS,CAAC,CAAC,CAACyS,MAAM,CAAC,CAAC,CAAC;MACvB;IACF;EAAC;EAAA,OAAA7B,SAAA;AAAA;AAGH,IAAM8B,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC9D,IAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;AAC1D5S,QAAQ,CAAC6O,GAAG,CAAC,WAAW,EAAE;EACxB2C,KAAK,EAAEtF,SAAS;EAChBY,QAAQ,EAAE,IAAI;EACdsE,MAAM,EAAE,cAAc;EACtBpE,EAAE,EAAEd,SAAS;EACbkE,IAAI,EAAElE,SAAS;EACfwF,IAAI,EAAExF,SAAS;EACfmE,EAAE,EAAEnE,SAAS;EACbQ,IAAI,EAAER;AACR,CAAC,CAAC;AACF,IAAM2G,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAAC/S,QAAQ,CAACgT,SAAS,CAAC;AACxDhT,QAAQ,CAACiT,QAAQ,CAAC,WAAW,EAAE;EAC7BC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,IAAI;EAAA;AACxF,CAAC,CAAC;AACFrT,QAAQ,CAAC6O,GAAG,CAAC,YAAY,EAAE;EACzB+D,MAAM,EAAE;IACNlG,IAAI,EAAE,OAAO;IACb4G,UAAU,EAAEV;EACd,CAAC;EACDD,OAAO,EAAE;IACPjG,IAAI,EAAE,QAAQ;IACd4G,UAAU,EAAEX;EACd;AACF,CAAC,CAAC;AACF3S,QAAQ,CAACiT,QAAQ,CAAC,YAAY,EAAE;EAC9BC,SAAS,EAAE;AACb,CAAC,CAAC;AACFlT,QAAQ,CAAC6O,GAAG,CAAC,aAAa,EAAE;EAC1BmD,MAAM,EAAE;IACNgB,SAAS,EAAE;MACTlG,QAAQ,EAAE;IACZ;EACF,CAAC;EACDyG,MAAM,EAAE;IACNP,SAAS,EAAE;MACTlG,QAAQ,EAAE;IACZ;EACF,CAAC;EACD0G,IAAI,EAAE;IACJC,UAAU,EAAE;MACVb,MAAM,EAAE;QACNxC,IAAI,EAAE;MACR,CAAC;MACDsD,OAAO,EAAE;QACPhH,IAAI,EAAE,SAAS;QACfI,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACD6G,IAAI,EAAE;IACJF,UAAU,EAAE;MACVb,MAAM,EAAE;QACNvC,EAAE,EAAE;MACN,CAAC;MACDqD,OAAO,EAAE;QACPhH,IAAI,EAAE,SAAS;QACf0E,MAAM,EAAE,QAAQ;QAChBpE,EAAE,EAAE,SAAAA,GAAA3M,CAAC;UAAA,OAAIA,CAAC,GAAG,CAAC;QAAA;MAChB;IACF;EACF;AACF,CAAC,CAAC;AAAC,IACGuT,UAAU;EACd,SAAAA,WAAYrH,KAAK,EAAEsH,MAAM,EAAE;IAAAjI,eAAA,OAAAgI,UAAA;IACzB,IAAI,CAACE,MAAM,GAAGvH,KAAK;IACnB,IAAI,CAACwH,WAAW,GAAG,IAAIhI,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACiI,SAAS,CAACH,MAAM,CAAC;EACxB;EAAC1H,YAAA,CAAAyH,UAAA;IAAAxH,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAUH,MAAM,EAAE;MAChB,IAAI,CAAC3T,QAAQ,CAAC2T,MAAM,CAAC,EAAE;QACrB;MACF;MACA,IAAMI,aAAa,GAAG,IAAI,CAACF,WAAW;MACtCjB,MAAM,CAACoB,mBAAmB,CAACL,MAAM,CAAC,CAAC9G,OAAO,CAAC,UAAAX,GAAG,EAAI;QAChD,IAAM0E,GAAG,GAAG+C,MAAM,CAACzH,GAAG,CAAC;QACvB,IAAI,CAAClM,QAAQ,CAAC4Q,GAAG,CAAC,EAAE;UAClB;QACF;QACA,IAAM2B,QAAQ,GAAG,CAAC,CAAC;QACnB,SAAA0B,EAAA,MAAAC,iBAAA,GAAqBvB,gBAAgB,EAAAsB,EAAA,GAAAC,iBAAA,CAAAxG,MAAA,EAAAuG,EAAA,IAAE;UAAlC,IAAME,MAAM,GAAAD,iBAAA,CAAAD,EAAA;UACf1B,QAAQ,CAAC4B,MAAM,CAAC,GAAGvD,GAAG,CAACuD,MAAM,CAAC;QAChC;QACA,CAACjU,OAAO,CAAC0Q,GAAG,CAACwC,UAAU,CAAC,IAAIxC,GAAG,CAACwC,UAAU,IAAI,CAAClH,GAAG,CAAC,EAAEW,OAAO,CAAC,UAACiE,IAAI,EAAK;UACrE,IAAIA,IAAI,KAAK5E,GAAG,IAAI,CAAC6H,aAAa,CAAC3E,GAAG,CAAC0B,IAAI,CAAC,EAAE;YAC5CiD,aAAa,CAACpF,GAAG,CAACmC,IAAI,EAAEyB,QAAQ,CAAC;UACnC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EAAC;IAAArG,GAAA;IAAAC,KAAA,EACD,SAAAiI,gBAAgBvD,MAAM,EAAEwD,MAAM,EAAE;MAC9B,IAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,IAAMA,OAAO,GAAGC,oBAAoB,CAAC3D,MAAM,EAAEyD,UAAU,CAAC;MACxD,IAAI,CAACC,OAAO,EAAE;QACZ,OAAO,EAAE;MACX;MACA,IAAMhB,UAAU,GAAG,IAAI,CAACkB,iBAAiB,CAACF,OAAO,EAAED,UAAU,CAAC;MAC9D,IAAIA,UAAU,CAACI,OAAO,EAAE;QACtBC,QAAQ,CAAC9D,MAAM,CAAC0D,OAAO,CAACK,WAAW,EAAEN,UAAU,CAAC,CAACO,IAAI,CAAC,YAAM;UAC1DhE,MAAM,CAAC0D,OAAO,GAAGD,UAAU;QAC7B,CAAC,EAAE,YAAM,CACT,CAAC,CAAC;MACJ;MACA,OAAOf,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAsI,kBAAkB5D,MAAM,EAAEwD,MAAM,EAAE;MAChC,IAAMN,aAAa,GAAG,IAAI,CAACF,WAAW;MACtC,IAAMN,UAAU,GAAG,EAAE;MACrB,IAAMzF,OAAO,GAAG+C,MAAM,CAAC+D,WAAW,KAAK/D,MAAM,CAAC+D,WAAW,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAME,KAAK,GAAGlC,MAAM,CAACC,IAAI,CAACwB,MAAM,CAAC;MACjC,IAAM9H,IAAI,GAAGoB,IAAI,CAACC,GAAG,CAAC,CAAC;MACvB,IAAI7N,CAAC;MACL,KAAKA,CAAC,GAAG+U,KAAK,CAACpH,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACtC,IAAM+Q,IAAI,GAAGgE,KAAK,CAAC/U,CAAC,CAAC;QACrB,IAAI+Q,IAAI,CAACiE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B;QACF;QACA,IAAIjE,IAAI,KAAK,SAAS,EAAE;UACtByC,UAAU,CAACxE,IAAI,CAAAG,KAAA,CAAfqE,UAAU,EAAApE,kBAAA,CAAS,IAAI,CAACiF,eAAe,CAACvD,MAAM,EAAEwD,MAAM,CAAC,EAAC;UACxD;QACF;QACA,IAAMlI,KAAK,GAAGkI,MAAM,CAACvD,IAAI,CAAC;QAC1B,IAAIgC,SAAS,GAAGhF,OAAO,CAACgD,IAAI,CAAC;QAC7B,IAAMF,GAAG,GAAGmD,aAAa,CAACvF,GAAG,CAACsC,IAAI,CAAC;QACnC,IAAIgC,SAAS,EAAE;UACb,IAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAM,CAAC,CAAC,EAAE;YAC7BgB,SAAS,CAACf,MAAM,CAACnB,GAAG,EAAEzE,KAAK,EAAEI,IAAI,CAAC;YAClC;UACF,CAAC,MAAM;YACLuG,SAAS,CAACnD,MAAM,CAAC,CAAC;UACpB;QACF;QACA,IAAI,CAACiB,GAAG,IAAI,CAACA,GAAG,CAAChE,QAAQ,EAAE;UACzBiE,MAAM,CAACC,IAAI,CAAC,GAAG3E,KAAK;UACpB;QACF;QACA2B,OAAO,CAACgD,IAAI,CAAC,GAAGgC,SAAS,GAAG,IAAInC,SAAS,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE3E,KAAK,CAAC;QACnEoH,UAAU,CAACxE,IAAI,CAAC+D,SAAS,CAAC;MAC5B;MACA,OAAOS,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOlB,MAAM,EAAEwD,MAAM,EAAE;MACrB,IAAI,IAAI,CAACR,WAAW,CAACmB,IAAI,KAAK,CAAC,EAAE;QAC/BpC,MAAM,CAACqC,MAAM,CAACpE,MAAM,EAAEwD,MAAM,CAAC;QAC7B;MACF;MACA,IAAMd,UAAU,GAAG,IAAI,CAACkB,iBAAiB,CAAC5D,MAAM,EAAEwD,MAAM,CAAC;MACzD,IAAId,UAAU,CAAC7F,MAAM,EAAE;QACrBoC,QAAQ,CAACd,GAAG,CAAC,IAAI,CAAC4E,MAAM,EAAEL,UAAU,CAAC;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAG,UAAA;AAAA;AAEH,SAASiB,QAAQA,CAACpB,UAAU,EAAEH,UAAU,EAAE;EACxC,IAAMtF,OAAO,GAAG,EAAE;EAClB,IAAM+E,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;EACpC,KAAK,IAAIrT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8S,IAAI,CAACnF,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACpC,IAAMmV,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAAC9S,CAAC,CAAC,CAAC;IAChC,IAAImV,IAAI,IAAIA,IAAI,CAACpD,MAAM,CAAC,CAAC,EAAE;MACzBhE,OAAO,CAACiB,IAAI,CAACmG,IAAI,CAAChD,IAAI,CAAC,CAAC,CAAC;IAC3B;EACF;EACA,OAAOE,OAAO,CAAC+C,GAAG,CAACrH,OAAO,CAAC;AAC7B;AACA,SAAS0G,oBAAoBA,CAAC3D,MAAM,EAAEyD,UAAU,EAAE;EAChD,IAAI,CAACA,UAAU,EAAE;IACf;EACF;EACA,IAAIC,OAAO,GAAG1D,MAAM,CAAC0D,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ1D,MAAM,CAAC0D,OAAO,GAAGD,UAAU;IAC3B;EACF;EACA,IAAIC,OAAO,CAACG,OAAO,EAAE;IACnB7D,MAAM,CAAC0D,OAAO,GAAGA,OAAO,GAAG3B,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEV,OAAO,EAAE;MAACG,OAAO,EAAE,KAAK;MAAEE,WAAW,EAAE,CAAC;IAAC,CAAC,CAAC;EAC1F;EACA,OAAOL,OAAO;AAChB;AAEA,SAASa,SAASA,CAACC,KAAK,EAAEC,eAAe,EAAE;EACzC,IAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACd,OAAO,IAAI,CAAC,CAAC;EACzC,IAAMiB,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC5B,IAAMtI,GAAG,GAAGqI,IAAI,CAACrI,GAAG,KAAKlB,SAAS,GAAGsJ,eAAe,GAAG,CAAC;EACxD,IAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAG,KAAKxD,SAAS,GAAGsJ,eAAe,GAAG,CAAC;EACxD,OAAO;IACLnI,KAAK,EAAEqI,OAAO,GAAGhG,GAAG,GAAGtC,GAAG;IAC1BuI,GAAG,EAAED,OAAO,GAAGtI,GAAG,GAAGsC;EACvB,CAAC;AACH;AACA,SAASkG,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;EACpD,IAAIA,eAAe,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;EACd;EACA,IAAM3S,CAAC,GAAGyS,SAAS,CAACO,MAAM,EAAEL,eAAe,CAAC;EAC5C,IAAMzS,CAAC,GAAGuS,SAAS,CAACQ,MAAM,EAAEN,eAAe,CAAC;EAC5C,OAAO;IACLO,GAAG,EAAEhT,CAAC,CAAC4S,GAAG;IACVK,KAAK,EAAEnT,CAAC,CAAC8S,GAAG;IACZM,MAAM,EAAElT,CAAC,CAACsK,KAAK;IACf6I,IAAI,EAAErT,CAAC,CAACwK;EACV,CAAC;AACH;AACA,SAAS8I,MAAMA,CAAC9J,KAAK,EAAE;EACrB,IAAI9K,CAAC,EAAEhC,CAAC,EAAEY,CAAC,EAAEM,CAAC;EACd,IAAIP,QAAQ,CAACmM,KAAK,CAAC,EAAE;IACnB9K,CAAC,GAAG8K,KAAK,CAAC0J,GAAG;IACbxW,CAAC,GAAG8M,KAAK,CAAC2J,KAAK;IACf7V,CAAC,GAAGkM,KAAK,CAAC4J,MAAM;IAChBxV,CAAC,GAAG4L,KAAK,CAAC6J,IAAI;EAChB,CAAC,MAAM;IACL3U,CAAC,GAAGhC,CAAC,GAAGY,CAAC,GAAGM,CAAC,GAAG4L,KAAK;EACvB;EACA,OAAO;IACL0J,GAAG,EAAExU,CAAC;IACNyU,KAAK,EAAEzW,CAAC;IACR0W,MAAM,EAAE9V,CAAC;IACT+V,IAAI,EAAEzV,CAAC;IACP2V,QAAQ,EAAE/J,KAAK,KAAK;EACtB,CAAC;AACH;AACA,SAASgK,uBAAuBA,CAAC9J,KAAK,EAAE+J,aAAa,EAAE;EACrD,IAAMvD,IAAI,GAAG,EAAE;EACf,IAAMwD,QAAQ,GAAGhK,KAAK,CAACiK,sBAAsB,CAACF,aAAa,CAAC;EAC5D,IAAIrW,CAAC,EAAEwW,IAAI;EACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACjD8S,IAAI,CAAC9D,IAAI,CAACsH,QAAQ,CAACtW,CAAC,CAAC,CAACyW,KAAK,CAAC;EAC9B;EACA,OAAO3D,IAAI;AACb;AACA,SAAS4D,WAAUA,CAACC,KAAK,EAAEvK,KAAK,EAAEwK,OAAO,EAAEpC,OAAO,EAAE;EAClD,IAAM1B,IAAI,GAAG6D,KAAK,CAAC7D,IAAI;EACvB,IAAM+D,UAAU,GAAGrC,OAAO,CAACsC,IAAI,KAAK,QAAQ;EAC5C,IAAI9W,CAAC,EAAEwW,IAAI,EAAEO,YAAY,EAAEC,UAAU;EACrC,IAAI5K,KAAK,KAAK,IAAI,EAAE;IAClB;EACF;EACA,KAAKpM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG1D,IAAI,CAACnF,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7C+W,YAAY,GAAG,CAACjE,IAAI,CAAC9S,CAAC,CAAC;IACvB,IAAI+W,YAAY,KAAKH,OAAO,EAAE;MAC5B,IAAIpC,OAAO,CAACY,GAAG,EAAE;QACf;MACF;MACA;IACF;IACA4B,UAAU,GAAGL,KAAK,CAACrC,MAAM,CAACyC,YAAY,CAAC;IACvC,IAAIlW,cAAc,CAACmW,UAAU,CAAC,KAAKH,UAAU,IAAKzK,KAAK,KAAK,CAAC,IAAInL,IAAI,CAACmL,KAAK,CAAC,KAAKnL,IAAI,CAAC+V,UAAU,CAAE,CAAC,EAAE;MACnG5K,KAAK,IAAI4K,UAAU;IACrB;EACF;EACA,OAAO5K,KAAK;AACd;AACA,SAAS6K,wBAAwBA,CAACC,IAAI,EAAE;EACtC,IAAMpE,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACoE,IAAI,CAAC;EAC9B,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACtE,IAAI,CAACnF,MAAM,CAAC;EACpC,IAAI3N,CAAC,EAAEwW,IAAI,EAAErK,GAAG;EAChB,KAAKnM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG1D,IAAI,CAACnF,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7CmM,GAAG,GAAG2G,IAAI,CAAC9S,CAAC,CAAC;IACbmX,KAAK,CAACnX,CAAC,CAAC,GAAG;MACT4C,CAAC,EAAEuJ,GAAG;MACNrJ,CAAC,EAAEoU,IAAI,CAAC/K,GAAG;IACb,CAAC;EACH;EACA,OAAOgL,KAAK;AACd;AACA,SAASE,SAASA,CAAC/B,KAAK,EAAEgC,IAAI,EAAE;EAC9B,IAAMC,OAAO,GAAGjC,KAAK,IAAIA,KAAK,CAACd,OAAO,CAAC+C,OAAO;EAC9C,OAAOA,OAAO,IAAKA,OAAO,KAAKtL,SAAS,IAAIqL,IAAI,CAACX,KAAK,KAAK1K,SAAU;AACvE;AACA,SAASuL,WAAWA,CAACC,UAAU,EAAEC,UAAU,EAAEJ,IAAI,EAAE;EACjD,UAAAK,MAAA,CAAUF,UAAU,CAACG,EAAE,OAAAD,MAAA,CAAID,UAAU,CAACE,EAAE,OAAAD,MAAA,CAAIL,IAAI,CAACX,KAAK,IAAIW,IAAI,CAAC7K,IAAI;AACrE;AACA,SAASoL,aAAaA,CAACvC,KAAK,EAAE;EAC5B,IAAAwC,oBAAA,GAA2CxC,KAAK,CAACuC,aAAa,CAAC,CAAC;IAAzD1K,GAAG,GAAA2K,oBAAA,CAAH3K,GAAG;IAAEsC,GAAG,GAAAqI,oBAAA,CAAHrI,GAAG;IAAEsI,UAAU,GAAAD,oBAAA,CAAVC,UAAU;IAAEC,UAAU,GAAAF,oBAAA,CAAVE,UAAU;EACvC,OAAO;IACL7K,GAAG,EAAE4K,UAAU,GAAG5K,GAAG,GAAG8K,MAAM,CAACC,iBAAiB;IAChDzI,GAAG,EAAEuI,UAAU,GAAGvI,GAAG,GAAGwI,MAAM,CAACE;EACjC,CAAC;AACH;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,IAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAQ,CAAC,KAAKD,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D,OAAOE,QAAQ,CAACD,UAAU,CAAC,KAAKC,QAAQ,CAACD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA,SAASE,mBAAmBA,CAAC9B,KAAK,EAAE+B,MAAM,EAAEC,QAAQ,EAAE;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACjCH,MAAM,CAACI,uBAAuB,CAAC,KAAK,CAAC,CAACrD,OAAO,CAAC,CAAC;IAAAsD,KAAA;EAAA;IAAlE,KAAAH,SAAA,CAAA5X,CAAA,MAAA+X,KAAA,GAAAH,SAAA,CAAA9W,CAAA,IAAAkX,IAAA,GAAoE;MAAA,IAAzD1B,IAAI,GAAAyB,KAAA,CAAA3M,KAAA;MACb,IAAMA,KAAK,GAAGuK,KAAK,CAACW,IAAI,CAACb,KAAK,CAAC;MAC/B,IAAKkC,QAAQ,IAAIvM,KAAK,GAAG,CAAC,IAAM,CAACuM,QAAQ,IAAIvM,KAAK,GAAG,CAAE,EAAE;QACvD,OAAOkL,IAAI,CAACb,KAAK;MACnB;IACF;EAAC,SAAAwC,GAAA;IAAAL,SAAA,CAAAlZ,CAAA,CAAAuZ,GAAA;EAAA;IAAAL,SAAA,CAAAlY,CAAA;EAAA;EACD,OAAO,IAAI;AACb;AACA,SAASwY,YAAYA,CAACC,UAAU,EAAEC,MAAM,EAAE;EACxC,IAAO9M,KAAK,GAAuB6M,UAAU,CAAtC7M,KAAK;IAAegL,IAAI,GAAI6B,UAAU,CAA/BE,WAAW;EACzB,IAAMhB,MAAM,GAAG/L,KAAK,CAACgN,OAAO,KAAKhN,KAAK,CAACgN,OAAO,GAAG,CAAC,CAAC,CAAC;EACpD,IAAOC,MAAM,GAAiCjC,IAAI,CAA3CiC,MAAM;IAAEb,MAAM,GAAyBpB,IAAI,CAAnCoB,MAAM;IAAS3B,YAAY,GAAIO,IAAI,CAA3Bb,KAAK;EAC5B,IAAM+C,KAAK,GAAGD,MAAM,CAACE,IAAI;EACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;EACzB,IAAMtN,GAAG,GAAGqL,WAAW,CAAC+B,MAAM,EAAEb,MAAM,EAAEpB,IAAI,CAAC;EAC7C,IAAMd,IAAI,GAAG4C,MAAM,CAACzL,MAAM;EAC1B,IAAIgJ,KAAK;EACT,KAAK,IAAI3W,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7B,IAAMkO,IAAI,GAAGkL,MAAM,CAACpZ,CAAC,CAAC;IACtB,IAAgByW,KAAK,GAAoBvI,IAAI,CAArCsL,KAAK;MAAmBpN,KAAK,GAAI8B,IAAI,CAArBwL,KAAK;IAC7B,IAAMC,UAAU,GAAGzL,IAAI,CAACoL,OAAO,KAAKpL,IAAI,CAACoL,OAAO,GAAG,CAAC,CAAC,CAAC;IACtD3C,KAAK,GAAGgD,UAAU,CAACD,KAAK,CAAC,GAAGtB,gBAAgB,CAACC,MAAM,EAAElM,GAAG,EAAEsK,KAAK,CAAC;IAChEE,KAAK,CAACI,YAAY,CAAC,GAAG3K,KAAK;IAC3BuK,KAAK,CAACiD,IAAI,GAAGnB,mBAAmB,CAAC9B,KAAK,EAAE+B,MAAM,EAAE,IAAI,CAAC;IACrD/B,KAAK,CAACkD,OAAO,GAAGpB,mBAAmB,CAAC9B,KAAK,EAAE+B,MAAM,EAAE,KAAK,CAAC;EAC3D;AACF;AACA,SAASoB,eAAeA,CAACxN,KAAK,EAAEmN,IAAI,EAAE;EACpC,IAAMM,MAAM,GAAGzN,KAAK,CAACyN,MAAM;EAC3B,OAAOlH,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACC,MAAM,CAAC,UAAA7N,GAAG;IAAA,OAAI4N,MAAM,CAAC5N,GAAG,CAAC,CAACsN,IAAI,KAAKA,IAAI;EAAA,EAAC,CAACQ,KAAK,CAAC,CAAC;AAC7E;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAE1D,KAAK,EAAE;EAC3C,OAAO5D,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EACxC;IACEpI,MAAM,EAAE,KAAK;IACbsI,OAAO,EAAEpO,SAAS;IAClB8K,YAAY,EAAEN,KAAK;IACnBA,KAAK,EAALA,KAAK;IACLK,IAAI,EAAE,SAAS;IACfrK,IAAI,EAAE;EACR,CACF,CAAC;AACH;AACA,SAAS6N,iBAAiBA,CAACH,MAAM,EAAE1D,KAAK,EAAE8D,OAAO,EAAE;EACjD,OAAO1H,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CpI,MAAM,EAAE,KAAK;IACbyI,SAAS,EAAE/D,KAAK;IAChB2C,MAAM,EAAEnN,SAAS;IACjBwO,GAAG,EAAExO,SAAS;IACdsO,OAAO,EAAPA,OAAO;IACP9D,KAAK,EAALA,KAAK;IACLK,IAAI,EAAE,SAAS;IACfrK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASiO,WAAWA,CAACpD,IAAI,EAAEtJ,KAAK,EAAE;EAChC,IAAM+I,YAAY,GAAGO,IAAI,CAAC6B,UAAU,CAAC1C,KAAK;EAC1C,IAAMgD,IAAI,GAAGnC,IAAI,CAACoB,MAAM,IAAIpB,IAAI,CAACoB,MAAM,CAACe,IAAI;EAC5C,IAAI,CAACA,IAAI,EAAE;IACT;EACF;EACAzL,KAAK,GAAGA,KAAK,IAAIsJ,IAAI,CAACqD,OAAO;EAAC,IAAAC,UAAA,GAAA/B,0BAAA,CACT7K,KAAK;IAAA6M,MAAA;EAAA;IAA1B,KAAAD,UAAA,CAAA5Z,CAAA,MAAA6Z,MAAA,GAAAD,UAAA,CAAA9Y,CAAA,IAAAkX,IAAA,GAA4B;MAAA,IAAjBI,MAAM,GAAAyB,MAAA,CAAAzO,KAAA;MACf,IAAMiM,MAAM,GAAGe,MAAM,CAACE,OAAO;MAC7B,IAAI,CAACjB,MAAM,IAAIA,MAAM,CAACoB,IAAI,CAAC,KAAKxN,SAAS,IAAIoM,MAAM,CAACoB,IAAI,CAAC,CAAC1C,YAAY,CAAC,KAAK9K,SAAS,EAAE;QACrF;MACF;MACA,OAAOoM,MAAM,CAACoB,IAAI,CAAC,CAAC1C,YAAY,CAAC;IACnC;EAAC,SAAAkC,GAAA;IAAA2B,UAAA,CAAAlb,CAAA,CAAAuZ,GAAA;EAAA;IAAA2B,UAAA,CAAAla,CAAA;EAAA;AACH;AACA,IAAMoa,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIhE,IAAI;EAAA,OAAKA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM;AAAA;AACxE,IAAMiE,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,MAAM,EAAEC,MAAM;EAAA,OAAKA,MAAM,GAAGD,MAAM,GAAGnI,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE8F,MAAM,CAAC;AAAA;AAAC,IACnFE,iBAAiB;EACrB,SAAAA,kBAAY5O,KAAK,EAAEyK,YAAY,EAAE;IAAApL,eAAA,OAAAuP,iBAAA;IAC/B,IAAI,CAAC5O,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6O,IAAI,GAAG7O,KAAK,CAAC8O,GAAG;IACrB,IAAI,CAAC3E,KAAK,GAAGM,YAAY;IACzB,IAAI,CAACsE,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAAChC,WAAW,GAAG,IAAI,CAACiC,OAAO,CAAC,CAAC;IACjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAClC,WAAW,CAAC5M,IAAI;IAClC,IAAI,CAAC+H,OAAO,GAAGvI,SAAS;IACxB,IAAI,CAACuP,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAGxP,SAAS;IACtB,IAAI,CAACyP,WAAW,GAAGzP,SAAS;IAC5B,IAAI,CAAC0P,cAAc,GAAG1P,SAAS;IAC/B,IAAI,CAAC2P,UAAU,GAAG3P,SAAS;IAC3B,IAAI,CAAC4P,UAAU,GAAG5P,SAAS;IAC3B,IAAI,CAAC6P,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAG9P,SAAS;IACzB,IAAI,CAAC+P,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB;EAAC/P,YAAA,CAAAgP,iBAAA;IAAA/O,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAA,EAAa;MACX,IAAM3O,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACyG,SAAS,CAAC,CAAC;MACdzG,EAAE,CAAC4O,UAAU,CAAC,CAAC;MACf5E,IAAI,CAAC6E,QAAQ,GAAG9E,SAAS,CAACC,IAAI,CAACoB,MAAM,EAAEpB,IAAI,CAAC;MAC5ChK,EAAE,CAAC8O,WAAW,CAAC,CAAC;IAClB;EAAC;IAAAjQ,GAAA;IAAAC,KAAA,EACD,SAAAiQ,YAAYtF,YAAY,EAAE;MACxB,IAAI,IAAI,CAACN,KAAK,KAAKM,YAAY,EAAE;QAC/B2D,WAAW,CAAC,IAAI,CAACrB,WAAW,CAAC;MAC/B;MACA,IAAI,CAAC5C,KAAK,GAAGM,YAAY;IAC3B;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAA8P,WAAA,EAAa;MACX,IAAM5O,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMgL,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAI9C,IAAI,EAAE7W,CAAC,EAAEE,CAAC,EAAExD,CAAC;QAAA,OAAKma,IAAI,KAAK,GAAG,GAAG7W,CAAC,GAAG6W,IAAI,KAAK,GAAG,GAAGna,CAAC,GAAGwD,CAAC;MAAA;MAC3E,IAAM0Z,GAAG,GAAGlF,IAAI,CAACmF,OAAO,GAAGpc,cAAc,CAACga,OAAO,CAACoC,OAAO,EAAE3C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMoQ,GAAG,GAAGpF,IAAI,CAACqF,OAAO,GAAGtc,cAAc,CAACga,OAAO,CAACsC,OAAO,EAAE7C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMsQ,GAAG,GAAGtF,IAAI,CAACuF,OAAO,GAAGxc,cAAc,CAACga,OAAO,CAACwC,OAAO,EAAE/C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMwQ,SAAS,GAAGxF,IAAI,CAACwF,SAAS;MAChC,IAAMC,GAAG,GAAGzF,IAAI,CAAC0F,OAAO,GAAGT,QAAQ,CAACO,SAAS,EAAEN,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;MAC7D,IAAMK,GAAG,GAAG3F,IAAI,CAAC4F,OAAO,GAAGX,QAAQ,CAACO,SAAS,EAAEJ,GAAG,EAAEF,GAAG,EAAEI,GAAG,CAAC;MAC7DtF,IAAI,CAAC1B,MAAM,GAAGtI,EAAE,CAAC6P,aAAa,CAACX,GAAG,CAAC;MACnClF,IAAI,CAACzB,MAAM,GAAGvI,EAAE,CAAC6P,aAAa,CAACT,GAAG,CAAC;MACnCpF,IAAI,CAAC8F,MAAM,GAAG9P,EAAE,CAAC6P,aAAa,CAACP,GAAG,CAAC;MACnCtF,IAAI,CAACiC,MAAM,GAAGjM,EAAE,CAAC6P,aAAa,CAACJ,GAAG,CAAC;MACnCzF,IAAI,CAACoB,MAAM,GAAGpL,EAAE,CAAC6P,aAAa,CAACF,GAAG,CAAC;IACrC;EAAC;IAAA9Q,GAAA;IAAAC,KAAA,EACD,SAAAkQ,WAAA,EAAa;MACX,OAAO,IAAI,CAAChQ,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC,IAAI,CAAC5G,KAAK,CAAC;IAC7C;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAkP,QAAA,EAAU;MACR,OAAO,IAAI,CAAChP,KAAK,CAACgR,cAAc,CAAC,IAAI,CAAC7G,KAAK,CAAC;IAC9C;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA+Q,cAAcI,OAAO,EAAE;MACrB,OAAO,IAAI,CAACjR,KAAK,CAACyN,MAAM,CAACwD,OAAO,CAAC;IACnC;EAAC;IAAApR,GAAA;IAAAC,KAAA,EACD,SAAAoR,eAAelI,KAAK,EAAE;MACpB,IAAMgC,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,OAAO/D,KAAK,KAAKgC,IAAI,CAACiC,MAAM,GACxBjC,IAAI,CAACoB,MAAM,GACXpB,IAAI,CAACiC,MAAM;IACjB;EAAC;IAAApN,GAAA;IAAAC,KAAA,EACD,SAAAqR,MAAA,EAAQ;MACN,IAAI,CAAChQ,OAAO,CAAC,OAAO,CAAC;IACvB;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EACD,SAAAsR,SAAA,EAAW;MACT,IAAMpG,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAI,IAAI,CAACoC,KAAK,EAAE;QACdlb,mBAAmB,CAAC,IAAI,CAACkb,KAAK,EAAE,IAAI,CAAC;MACvC;MACA,IAAInE,IAAI,CAAC6E,QAAQ,EAAE;QACjBzB,WAAW,CAACpD,IAAI,CAAC;MACnB;IACF;EAAC;IAAAnL,GAAA;IAAAC,KAAA,EACD,SAAAuR,WAAA,EAAa;MACX,IAAMrQ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAMpF,IAAI,GAAGmD,OAAO,CAACnD,IAAI,KAAKmD,OAAO,CAACnD,IAAI,GAAG,EAAE,CAAC;MAChD,IAAMuE,KAAK,GAAGnO,EAAE,CAACmO,KAAK;MACtB,IAAIxb,QAAQ,CAACiX,IAAI,CAAC,EAAE;QAClB5J,EAAE,CAACmO,KAAK,GAAGxE,wBAAwB,CAACC,IAAI,CAAC;MAC3C,CAAC,MAAM,IAAIuE,KAAK,KAAKvE,IAAI,EAAE;QACzB,IAAIuE,KAAK,EAAE;UACTlb,mBAAmB,CAACkb,KAAK,EAAEnO,EAAE,CAAC;UAC9B,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;UAC3BqB,WAAW,CAACpD,IAAI,CAAC;UACjBA,IAAI,CAACqD,OAAO,GAAG,EAAE;QACnB;QACA,IAAIzD,IAAI,IAAIrE,MAAM,CAAC+K,YAAY,CAAC1G,IAAI,CAAC,EAAE;UACrCzW,iBAAiB,CAACyW,IAAI,EAAE5J,EAAE,CAAC;QAC7B;QACAA,EAAE,CAAC0O,SAAS,GAAG,EAAE;QACjB1O,EAAE,CAACmO,KAAK,GAAGvE,IAAI;MACjB;IACF;EAAC;IAAA/K,GAAA;IAAAC,KAAA,EACD,SAAAgQ,YAAA,EAAc;MACZ,IAAM9O,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACqQ,UAAU,CAAC,CAAC;MACf,IAAIrQ,EAAE,CAACuQ,kBAAkB,EAAE;QACzBvG,IAAI,CAAC+C,OAAO,GAAG,IAAI/M,EAAE,CAACuQ,kBAAkB,CAAC,CAAC;MAC5C;IACF;EAAC;IAAA1R,GAAA;IAAAC,KAAA,EACD,SAAA0R,sBAAsBC,gBAAgB,EAAE;MACtC,IAAMzQ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAI0B,YAAY,GAAG,KAAK;MACxB1Q,EAAE,CAACqQ,UAAU,CAAC,CAAC;MACf,IAAMM,UAAU,GAAG3G,IAAI,CAAC6E,QAAQ;MAChC7E,IAAI,CAAC6E,QAAQ,GAAG9E,SAAS,CAACC,IAAI,CAACoB,MAAM,EAAEpB,IAAI,CAAC;MAC5C,IAAIA,IAAI,CAACX,KAAK,KAAK0D,OAAO,CAAC1D,KAAK,EAAE;QAChCqH,YAAY,GAAG,IAAI;QACnBtD,WAAW,CAACpD,IAAI,CAAC;QACjBA,IAAI,CAACX,KAAK,GAAG0D,OAAO,CAAC1D,KAAK;MAC5B;MACArJ,EAAE,CAAC4Q,eAAe,CAACH,gBAAgB,CAAC;MACpC,IAAIC,YAAY,IAAIC,UAAU,KAAK3G,IAAI,CAAC6E,QAAQ,EAAE;QAChDjD,YAAY,CAAC5L,EAAE,EAAEgK,IAAI,CAACqD,OAAO,CAAC;MAChC;IACF;EAAC;IAAAxO,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAMsG,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;MAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAACwK,gBAAgB,CAAC9Q,EAAE,CAACiO,KAAK,CAAC;MACnD,IAAM8C,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,CAAC,CAAC,EAAE6B,SAAS,EAAE,IAAI,CAAC;MACvE7Q,EAAE,CAACkH,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAE/Q,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MAC3DlR,EAAE,CAACkO,QAAQ,GAAGlO,EAAE,CAACkH,OAAO,CAACiK,OAAO;IAClC;EAAC;IAAAtS,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMtR,KAAK,EAAEuR,KAAK,EAAE;MAClB,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAoBgK,IAAI,GAAiBhK,EAAE,CAApC+L,WAAW;QAAenC,IAAI,GAAI5J,EAAE,CAAjBmO,KAAK;MAC/B,IAAOlC,MAAM,GAAcjC,IAAI,CAAxBiC,MAAM;QAAE4C,QAAQ,GAAI7E,IAAI,CAAhB6E,QAAQ;MACvB,IAAM3C,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAImF,MAAM,GAAGxR,KAAK,KAAK,CAAC,IAAIuR,KAAK,KAAKzH,IAAI,CAACvJ,MAAM,GAAG,IAAI,GAAG2J,IAAI,CAACuH,OAAO;MACvE,IAAIC,IAAI,GAAG1R,KAAK,GAAG,CAAC,IAAIkK,IAAI,CAACqD,OAAO,CAACvN,KAAK,GAAG,CAAC,CAAC;MAC/C,IAAIpN,CAAC,EAAEwP,GAAG,EAAE4J,MAAM;MAClB,IAAI9L,EAAE,CAACkO,QAAQ,KAAK,KAAK,EAAE;QACzBlE,IAAI,CAACqD,OAAO,GAAGzD,IAAI;QACnBI,IAAI,CAACuH,OAAO,GAAG,IAAI;QACnBzF,MAAM,GAAGlC,IAAI;MACf,CAAC,MAAM;QACL,IAAI/W,OAAO,CAAC+W,IAAI,CAAC9J,KAAK,CAAC,CAAC,EAAE;UACxBgM,MAAM,GAAG9L,EAAE,CAACyR,cAAc,CAACzH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QACtD,CAAC,MAAM,IAAI1e,QAAQ,CAACiX,IAAI,CAAC9J,KAAK,CAAC,CAAC,EAAE;UAChCgM,MAAM,GAAG9L,EAAE,CAAC0R,eAAe,CAAC1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QACvD,CAAC,MAAM;UACLvF,MAAM,GAAG9L,EAAE,CAAC2R,kBAAkB,CAAC3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QAC1D;QACA,IAAMO,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA;UAAA,OAAS1P,GAAG,CAACgK,KAAK,CAAC,KAAK,IAAI,IAAKsF,IAAI,IAAItP,GAAG,CAACgK,KAAK,CAAC,GAAGsF,IAAI,CAACtF,KAAK,CAAE;QAAA;QAClG,KAAKxZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;UAC1BsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,GAAGoN,KAAK,CAAC,GAAGoC,GAAG,GAAG4J,MAAM,CAACpZ,CAAC,CAAC;UACzC,IAAI4e,MAAM,EAAE;YACV,IAAIM,0BAA0B,CAAC,CAAC,EAAE;cAChCN,MAAM,GAAG,KAAK;YAChB;YACAE,IAAI,GAAGtP,GAAG;UACZ;QACF;QACA8H,IAAI,CAACuH,OAAO,GAAGD,MAAM;MACvB;MACA,IAAIzC,QAAQ,EAAE;QACZjD,YAAY,CAAC5L,EAAE,EAAE8L,MAAM,CAAC;MAC1B;IACF;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA6S,mBAAmB3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MAC3C,IAAOpF,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAMc,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,IAAM0F,MAAM,GAAG5F,MAAM,CAAC6F,SAAS,CAAC,CAAC;MACjC,IAAMC,WAAW,GAAG9F,MAAM,KAAKb,MAAM;MACrC,IAAMU,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK;MAClB,KAAKzW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAAA,IAAAsf,SAAA;QACvC7I,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBgM,MAAM,CAACpZ,CAAC,CAAC,IAAAsf,SAAA,OAAAC,eAAA,CAAAD,SAAA,EACN9F,KAAK,EAAG6F,WAAW,IAAI9F,MAAM,CAACmF,KAAK,CAACS,MAAM,CAAC1I,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAA8I,eAAA,CAAAD,SAAA,EACzD5F,KAAK,EAAGhB,MAAM,CAACgG,KAAK,CAACxH,IAAI,CAACT,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAA6I,SAAA,CAC1C;MACH;MACA,OAAOlG,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA2S,eAAezH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACvC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAMuD,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK,EAAEvI,IAAI;MACxB,KAAKlO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACvCyW,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBc,IAAI,GAAGgJ,IAAI,CAACT,KAAK,CAAC;QAClB2C,MAAM,CAACpZ,CAAC,CAAC,GAAG;UACV4C,CAAC,EAAEgT,MAAM,CAAC8I,KAAK,CAACxQ,IAAI,CAAC,CAAC,CAAC,EAAEuI,KAAK,CAAC;UAC/B3T,CAAC,EAAE+S,MAAM,CAAC6I,KAAK,CAACxQ,IAAI,CAAC,CAAC,CAAC,EAAEuI,KAAK;QAChC,CAAC;MACH;MACA,OAAO2C,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAA2J,cAAA,GAAyC,IAAI,CAAChE,QAAQ;QAAAiE,qBAAA,GAAAD,cAAA,CAA/CE,QAAQ;QAARA,QAAQ,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAE,qBAAA,GAAAH,cAAA,CAAEI,QAAQ;QAARA,QAAQ,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMvG,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK,EAAEvI,IAAI;MACxB,KAAKlO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACvCyW,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBc,IAAI,GAAGgJ,IAAI,CAACT,KAAK,CAAC;QAClB2C,MAAM,CAACpZ,CAAC,CAAC,GAAG;UACV4C,CAAC,EAAEgT,MAAM,CAAC8I,KAAK,CAAC/d,gBAAgB,CAACuN,IAAI,EAAEwR,QAAQ,CAAC,EAAEjJ,KAAK,CAAC;UACxD3T,CAAC,EAAE+S,MAAM,CAAC6I,KAAK,CAAC/d,gBAAgB,CAACuN,IAAI,EAAE0R,QAAQ,CAAC,EAAEnJ,KAAK;QACzD,CAAC;MACH;MACA,OAAO2C,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAAyT,UAAUpJ,KAAK,EAAE;MACf,OAAO,IAAI,CAAC4C,WAAW,CAACsB,OAAO,CAAClE,KAAK,CAAC;IACxC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA0T,eAAerJ,KAAK,EAAE;MACpB,OAAO,IAAI,CAAC4C,WAAW,CAACnC,IAAI,CAACT,KAAK,CAAC;IACrC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAsK,WAAWpB,KAAK,EAAE8D,MAAM,EAAEtC,IAAI,EAAE;MAC9B,IAAMxK,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMgL,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAMjN,KAAK,GAAGgN,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;MAChC,IAAM9C,KAAK,GAAG;QACZ7D,IAAI,EAAEsD,uBAAuB,CAAC9J,KAAK,EAAE,IAAI,CAAC;QAC1CgI,MAAM,EAAE8E,MAAM,CAACE,OAAO,CAAChE,KAAK,CAACmE,IAAI;MACnC,CAAC;MACD,OAAO/C,WAAU,CAACC,KAAK,EAAEvK,KAAK,EAAEkL,IAAI,CAACb,KAAK,EAAE;QAACK,IAAI,EAAJA;MAAI,CAAC,CAAC;IACrD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2T,sBAAsBC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,EAAE;MACjD,IAAMsJ,WAAW,GAAG7G,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;MACtC,IAAIrN,KAAK,GAAG6T,WAAW,KAAK,IAAI,GAAGC,GAAG,GAAGD,WAAW;MACpD,IAAM3L,MAAM,GAAGqC,KAAK,IAAIyC,MAAM,CAACE,OAAO,CAAChE,KAAK,CAACmE,IAAI,CAAC;MAClD,IAAI9C,KAAK,IAAIrC,MAAM,EAAE;QACnBqC,KAAK,CAACrC,MAAM,GAAGA,MAAM;QACrB0L,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAEf,KAAK,CAAC;QACtC4T,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAErD,KAAK,CAAC;QACtCA,KAAK,GAAGsK,WAAU,CAACC,KAAK,EAAEsJ,WAAW,EAAE,IAAI,CAAC5G,WAAW,CAAC5C,KAAK,EAAE;UAACrB,GAAG,EAAE;QAAI,CAAC,CAAC;MAC7E;MACA4K,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAEf,KAAK,CAAC;MACtC4T,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAErD,KAAK,CAAC;IACxC;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA+T,UAAU7K,KAAK,EAAE8K,QAAQ,EAAE;MACzB,IAAM9S,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMsB,OAAO,GAAGrD,IAAI,CAACqD,OAAO;MAC5B,IAAMiE,MAAM,GAAGtH,IAAI,CAACuH,OAAO,IAAIvJ,KAAK,KAAKgC,IAAI,CAACiC,MAAM;MACpD,IAAM/C,IAAI,GAAGmE,OAAO,CAAChN,MAAM;MAC3B,IAAM0S,UAAU,GAAG/S,EAAE,CAACkQ,cAAc,CAAClI,KAAK,CAAC;MAC3C,IAAMqB,KAAK,GAAGyJ,QAAQ,IAAI9I,IAAI,CAAC6E,QAAQ,IAAI;QAACrJ,IAAI,EAAEsD,uBAAuB,CAAC9I,EAAE,CAAChB,KAAK,EAAE,IAAI,CAAC;QAAEgI,MAAM,EAAE;MAAI,CAAC;MACxG,IAAM0L,KAAK,GAAG;QAAC7S,GAAG,EAAE8K,MAAM,CAACE,iBAAiB;QAAE1I,GAAG,EAAEwI,MAAM,CAACC;MAAiB,CAAC;MAC5E,IAAAoI,cAAA,GAAuCzI,aAAa,CAACwI,UAAU,CAAC;QAApDE,QAAQ,GAAAD,cAAA,CAAbnT,GAAG;QAAiBqT,QAAQ,GAAAF,cAAA,CAAb7Q,GAAG;MACzB,IAAIzP,CAAC,EAAEoM,KAAK,EAAEgN,MAAM,EAAEpC,UAAU;MAChC,SAASyJ,KAAKA,CAAA,EAAG;QACfrH,MAAM,GAAGuB,OAAO,CAAC3a,CAAC,CAAC;QACnBoM,KAAK,GAAGgN,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;QAC1BzC,UAAU,GAAGoC,MAAM,CAACiH,UAAU,CAAC5G,IAAI,CAAC;QACpC,OAAO,CAAC5Y,cAAc,CAACuL,KAAK,CAAC,IAAImU,QAAQ,GAAGvJ,UAAU,IAAIwJ,QAAQ,GAAGxJ,UAAU;MACjF;MACA,KAAKhX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzB,IAAIygB,KAAK,CAAC,CAAC,EAAE;UACX;QACF;QACAnT,EAAE,CAACyS,qBAAqB,CAACC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,CAAC;QACrD,IAAIiI,MAAM,EAAE;UACV;QACF;MACF;MACA,IAAIA,MAAM,EAAE;QACV,KAAK5e,CAAC,GAAGwW,IAAI,GAAG,CAAC,EAAExW,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAC9B,IAAIygB,KAAK,CAAC,CAAC,EAAE;YACX;UACF;UACAnT,EAAE,CAACyS,qBAAqB,CAACC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,CAAC;UACrD;QACF;MACF;MACA,OAAOqJ,KAAK;IACd;EAAC;IAAA7T,GAAA;IAAAC,KAAA,EACD,SAAAsU,mBAAmBpL,KAAK,EAAE;MACxB,IAAM8D,MAAM,GAAG,IAAI,CAACC,WAAW,CAACsB,OAAO;MACvC,IAAMrG,MAAM,GAAG,EAAE;MACjB,IAAItU,CAAC,EAAEwW,IAAI,EAAEpK,KAAK;MAClB,KAAKpM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG4C,MAAM,CAACzL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC/CoM,KAAK,GAAGgN,MAAM,CAACpZ,CAAC,CAAC,CAACsV,KAAK,CAACmE,IAAI,CAAC;QAC7B,IAAI5Y,cAAc,CAACuL,KAAK,CAAC,EAAE;UACzBkI,MAAM,CAACtF,IAAI,CAAC5C,KAAK,CAAC;QACpB;MACF;MACA,OAAOkI,MAAM;IACf;EAAC;IAAAnI,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,OAAO,KAAK;IACd;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAMb,MAAM,GAAGpB,IAAI,CAACoB,MAAM;MAC1B,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,OAAO;QACLoK,KAAK,EAAEtH,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACuH,gBAAgB,CAAC1H,MAAM,CAACG,MAAM,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE;QACtErN,KAAK,EAAEsM,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC,GAAG;MACtE,CAAC;IACH;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAAqB,QAAQqJ,IAAI,EAAE;MACZ,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACyG,SAAS,CAAC,CAAC;MACdzG,EAAE,CAAC+N,eAAe,GAAG,CAAC,CAAC;MACvB/N,EAAE,CAAC0E,MAAM,CAAC8E,IAAI,IAAI,SAAS,CAAC;MAC5BQ,IAAI,CAACyJ,KAAK,GAAG7K,MAAM,CAAC7V,cAAc,CAACiN,EAAE,CAACkH,OAAO,CAACwM,IAAI,EAAErL,WAAW,CAAC2B,IAAI,CAAC1B,MAAM,EAAE0B,IAAI,CAACzB,MAAM,EAAEvI,EAAE,CAACqT,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IAClH;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE,CAAC;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACf,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC6N,IAAI;MACnB,IAAM7O,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMgL,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM4H,QAAQ,GAAG3J,IAAI,CAACJ,IAAI,IAAI,EAAE;MAChC,IAAMgK,IAAI,GAAG5U,KAAK,CAAC6U,SAAS;MAC5B,IAAMpP,MAAM,GAAG,EAAE;MACjB,IAAM3E,KAAK,GAAGE,EAAE,CAACsO,UAAU,IAAI,CAAC;MAChC,IAAM+C,KAAK,GAAGrR,EAAE,CAACuO,UAAU,IAAKoF,QAAQ,CAACtT,MAAM,GAAGP,KAAM;MACxD,IAAIpN,CAAC;MACL,IAAIsX,IAAI,CAAC+C,OAAO,EAAE;QAChB/C,IAAI,CAAC+C,OAAO,CAACpM,IAAI,CAACmN,GAAG,EAAE8F,IAAI,EAAE9T,KAAK,EAAEuR,KAAK,CAAC;MAC5C;MACA,KAAK3e,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QACtC,IAAMua,OAAO,GAAG0G,QAAQ,CAACjhB,CAAC,CAAC;QAC3B,IAAIua,OAAO,CAAC6G,MAAM,EAAE;UAClB;QACF;QACA,IAAI7G,OAAO,CAACxI,MAAM,EAAE;UAClBA,MAAM,CAAC/C,IAAI,CAACuL,OAAO,CAAC;QACtB,CAAC,MAAM;UACLA,OAAO,CAACtM,IAAI,CAACmN,GAAG,EAAE8F,IAAI,CAAC;QACzB;MACF;MACA,KAAKlhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+R,MAAM,CAACpE,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAClC+R,MAAM,CAAC/R,CAAC,CAAC,CAACiO,IAAI,CAACmN,GAAG,EAAE8F,IAAI,CAAC;MAC3B;IACF;EAAC;IAAA/U,GAAA;IAAAC,KAAA,EACD,SAAAiV,SAAS5K,KAAK,EAAE1E,MAAM,EAAE;MACtB,IAAM+E,IAAI,GAAG/E,MAAM,GAAG,QAAQ,GAAG,SAAS;MAC1C,OAAO0E,KAAK,KAAKxK,SAAS,IAAI,IAAI,CAACoN,WAAW,CAACgB,OAAO,GAClD,IAAI,CAACiH,4BAA4B,CAACxK,IAAI,CAAC,GACvC,IAAI,CAACyK,yBAAyB,CAAC9K,KAAK,IAAI,CAAC,EAAEK,IAAI,CAAC;IACtD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAW/H,KAAK,EAAE1E,MAAM,EAAE+E,IAAI,EAAE;MAC9B,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAIkF,OAAO;MACX,IAAI/K,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGnJ,EAAE,CAAC+L,WAAW,CAACnC,IAAI,CAACvJ,MAAM,EAAE;QACpD,IAAM4M,OAAO,GAAGjN,EAAE,CAAC+L,WAAW,CAACnC,IAAI,CAACT,KAAK,CAAC;QAC1C+K,OAAO,GAAGjH,OAAO,CAACwB,QAAQ,KACvBxB,OAAO,CAACwB,QAAQ,GAAGzB,iBAAiB,CAAChN,EAAE,CAACkR,UAAU,CAAC,CAAC,EAAE/H,KAAK,EAAE8D,OAAO,CAAC,CAAC;QACzEiH,OAAO,CAACpI,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;QACpC+K,OAAO,CAAC/G,GAAG,GAAGJ,OAAO,CAACnD,IAAI,CAACT,KAAK,CAAC;QACjC+K,OAAO,CAAC/K,KAAK,GAAG+K,OAAO,CAAChH,SAAS,GAAG/D,KAAK;MAC3C,CAAC,MAAM;QACL+K,OAAO,GAAGlU,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAG7B,oBAAoB,CAAC5M,EAAE,CAAChB,KAAK,CAACkS,UAAU,CAAC,CAAC,EAAElR,EAAE,CAACmJ,KAAK,CAAC,CAAC;QACvE+K,OAAO,CAACnH,OAAO,GAAGA,OAAO;QACzBmH,OAAO,CAAC/K,KAAK,GAAG+K,OAAO,CAACzK,YAAY,GAAGzJ,EAAE,CAACmJ,KAAK;MACjD;MACA+K,OAAO,CAACzP,MAAM,GAAG,CAAC,CAACA,MAAM;MACzByP,OAAO,CAAC1K,IAAI,GAAGA,IAAI;MACnB,OAAO0K,OAAO;IAChB;EAAC;IAAArV,GAAA;IAAAC,KAAA,EACD,SAAAkV,6BAA6BxK,IAAI,EAAE;MACjC,OAAO,IAAI,CAAC2K,sBAAsB,CAAC,IAAI,CAAC5D,kBAAkB,CAACjG,EAAE,EAAEd,IAAI,CAAC;IACtE;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAmV,0BAA0B9K,KAAK,EAAEK,IAAI,EAAE;MACrC,OAAO,IAAI,CAAC2K,sBAAsB,CAAC,IAAI,CAACC,eAAe,CAAC9J,EAAE,EAAEd,IAAI,EAAEL,KAAK,CAAC;IAC1E;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAqV,uBAAuBE,WAAW,EAA2B;MAAA,IAAzB7K,IAAI,GAAApJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,SAAS;MAAA,IAAE+I,KAAK,GAAA/I,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAzB,SAAA;MACzD,IAAMqB,EAAE,GAAG,IAAI;MACf,IAAMyE,MAAM,GAAG+E,IAAI,KAAK,QAAQ;MAChC,IAAM8K,KAAK,GAAGtU,EAAE,CAAC+N,eAAe;MAChC,IAAMwG,QAAQ,GAAGF,WAAW,GAAG,GAAG,GAAG7K,IAAI;MACzC,IAAMkE,MAAM,GAAG4G,KAAK,CAACC,QAAQ,CAAC;MAC9B,IAAMC,OAAO,GAAGxU,EAAE,CAACwO,mBAAmB,IAAI/a,OAAO,CAAC0V,KAAK,CAAC;MACxD,IAAIuE,MAAM,EAAE;QACV,OAAOD,gBAAgB,CAACC,MAAM,EAAE8G,OAAO,CAAC;MAC1C;MACA,IAAMlO,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;MAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAACmO,uBAAuB,CAACzU,EAAE,CAACiO,KAAK,EAAEoG,WAAW,CAAC;MACvE,IAAMK,QAAQ,GAAGjQ,MAAM,GAAG,IAAA4F,MAAA,CAAIgK,WAAW,YAAS,OAAO,EAAEA,WAAW,EAAE,EAAE,CAAC,GAAG,CAACA,WAAW,EAAE,EAAE,CAAC;MAC/F,IAAMtD,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,CAAC,CAAC,EAAE6B,SAAS,CAAC;MACjE,IAAM8D,KAAK,GAAGpP,MAAM,CAACC,IAAI,CAAC/S,QAAQ,CAACkhB,QAAQ,CAACU,WAAW,CAAC,CAAC;MACzD,IAAMH,OAAO,GAAG,SAAVA,OAAOA,CAAA;QAAA,OAASlU,EAAE,CAACkR,UAAU,CAAC/H,KAAK,EAAE1E,MAAM,CAAC;MAAA;MAClD,IAAMuC,MAAM,GAAGV,MAAM,CAACsO,mBAAmB,CAAC7D,MAAM,EAAE4D,KAAK,EAAET,OAAO,EAAEQ,QAAQ,CAAC;MAC3E,IAAI1N,MAAM,CAACK,OAAO,EAAE;QAClBL,MAAM,CAACK,OAAO,GAAGmN,OAAO;QACxBF,KAAK,CAACC,QAAQ,CAAC,GAAGhP,MAAM,CAACsP,MAAM,CAACpH,gBAAgB,CAACzG,MAAM,EAAEwN,OAAO,CAAC,CAAC;MACpE;MACA,OAAOxN,MAAM;IACf;EAAC;IAAAnI,GAAA;IAAAC,KAAA,EACD,SAAAgW,mBAAmB3L,KAAK,EAAE4L,UAAU,EAAEtQ,MAAM,EAAE;MAC5C,IAAMzE,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMsV,KAAK,GAAGtU,EAAE,CAAC+N,eAAe;MAChC,IAAMwG,QAAQ,gBAAAlK,MAAA,CAAgB0K,UAAU,CAAE;MAC1C,IAAMrH,MAAM,GAAG4G,KAAK,CAACC,QAAQ,CAAC;MAC9B,IAAI7G,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAIxG,OAAO;MACX,IAAIlI,KAAK,CAACkI,OAAO,CAACzB,SAAS,KAAK,KAAK,EAAE;QACrC,IAAMa,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;QAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAAC0O,yBAAyB,CAAChV,EAAE,CAACiO,KAAK,EAAE8G,UAAU,CAAC;QACxE,IAAMhE,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,CAAC,CAAC,EAAE6B,SAAS,CAAC;QACjE3J,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAE/Q,EAAE,CAACkR,UAAU,CAAC/H,KAAK,EAAE1E,MAAM,EAAEsQ,UAAU,CAAC,CAAC;MACnF;MACA,IAAM7O,UAAU,GAAG,IAAIG,UAAU,CAACrH,KAAK,EAAEkI,OAAO,IAAIA,OAAO,CAAChB,UAAU,CAAC;MACvE,IAAIgB,OAAO,IAAIA,OAAO,CAAC+N,UAAU,EAAE;QACjCX,KAAK,CAACC,QAAQ,CAAC,GAAGhP,MAAM,CAACsP,MAAM,CAAC3O,UAAU,CAAC;MAC7C;MACA,OAAOA,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAoW,iBAAiBhO,OAAO,EAAE;MACxB,IAAI,CAACA,OAAO,CAACG,OAAO,EAAE;QACpB;MACF;MACA,OAAO,IAAI,CAACgH,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG9I,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEV,OAAO,CAAC,CAAC;IAClF;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAAqW,eAAe3L,IAAI,EAAE4L,aAAa,EAAE;MAClC,OAAO,CAACA,aAAa,IAAI5H,kBAAkB,CAAChE,IAAI,CAAC,IAAI,IAAI,CAACxK,KAAK,CAACqW,mBAAmB;IACrF;EAAC;IAAAxW,GAAA;IAAAC,KAAA,EACD,SAAAwW,cAAcrI,OAAO,EAAE9D,KAAK,EAAEpD,UAAU,EAAEyD,IAAI,EAAE;MAC9C,IAAIgE,kBAAkB,CAAChE,IAAI,CAAC,EAAE;QAC5BjE,MAAM,CAACqC,MAAM,CAACqF,OAAO,EAAElH,UAAU,CAAC;MACpC,CAAC,MAAM;QACL,IAAI,CAAC+O,kBAAkB,CAAC3L,KAAK,EAAEK,IAAI,CAAC,CAAC9E,MAAM,CAACuI,OAAO,EAAElH,UAAU,CAAC;MAClE;IACF;EAAC;IAAAlH,GAAA;IAAAC,KAAA,EACD,SAAAyW,oBAAoBH,aAAa,EAAE5L,IAAI,EAAEvC,UAAU,EAAE;MACnD,IAAImO,aAAa,IAAI,CAAC5H,kBAAkB,CAAChE,IAAI,CAAC,EAAE;QAC9C,IAAI,CAACsL,kBAAkB,CAACnW,SAAS,EAAE6K,IAAI,CAAC,CAAC9E,MAAM,CAAC0Q,aAAa,EAAEnO,UAAU,CAAC;MAC5E;IACF;EAAC;IAAApI,GAAA;IAAAC,KAAA,EACD,SAAA0W,UAAUvI,OAAO,EAAE9D,KAAK,EAAEK,IAAI,EAAE/E,MAAM,EAAE;MACtCwI,OAAO,CAACxI,MAAM,GAAGA,MAAM;MACvB,IAAMyC,OAAO,GAAG,IAAI,CAAC6M,QAAQ,CAAC5K,KAAK,EAAE1E,MAAM,CAAC;MAC5C,IAAI,CAACqQ,kBAAkB,CAAC3L,KAAK,EAAEK,IAAI,EAAE/E,MAAM,CAAC,CAACC,MAAM,CAACuI,OAAO,EAAE;QAC3D/F,OAAO,EAAG,CAACzC,MAAM,IAAI,IAAI,CAACyQ,gBAAgB,CAAChO,OAAO,CAAC,IAAKA;MAC1D,CAAC,CAAC;IACJ;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAA2W,iBAAiBxI,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;MAC7C,IAAI,CAACqM,SAAS,CAACvI,OAAO,EAAE9D,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;IACjD;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA4W,cAAczI,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;MAC1C,IAAI,CAACqM,SAAS,CAACvI,OAAO,EAAE9D,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;IAChD;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA6W,yBAAA,EAA2B;MACzB,IAAM1I,OAAO,GAAG,IAAI,CAAClB,WAAW,CAACgB,OAAO;MACxC,IAAIE,OAAO,EAAE;QACX,IAAI,CAACuI,SAAS,CAACvI,OAAO,EAAEtO,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;MACrD;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAA8W,sBAAA,EAAwB;MACtB,IAAM3I,OAAO,GAAG,IAAI,CAAClB,WAAW,CAACgB,OAAO;MACxC,IAAIE,OAAO,EAAE;QACX,IAAI,CAACuI,SAAS,CAACvI,OAAO,EAAEtO,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;MACpD;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAA8R,gBAAgBH,gBAAgB,EAAE;MAChC,IAAMzQ,EAAE,GAAG,IAAI;MACf,IAAM4J,IAAI,GAAG5J,EAAE,CAACmO,KAAK;MACrB,IAAMwF,QAAQ,GAAG3T,EAAE,CAAC+L,WAAW,CAACnC,IAAI;MAAC,IAAAiM,UAAA,GAAAtK,0BAAA,CACFvL,EAAE,CAAC0O,SAAS;QAAAoH,MAAA;MAAA;QAA/C,KAAAD,UAAA,CAAAniB,CAAA,MAAAoiB,MAAA,GAAAD,UAAA,CAAArhB,CAAA,IAAAkX,IAAA,GAAiD;UAAA,IAAAqK,YAAA,GAAAC,cAAA,CAAAF,MAAA,CAAAhX,KAAA;YAArCqG,MAAM,GAAA4Q,YAAA;YAAEE,IAAI,GAAAF,YAAA;YAAEG,IAAI,GAAAH,YAAA;UAC5B/V,EAAE,CAACmF,MAAM,CAAC,CAAC8Q,IAAI,EAAEC,IAAI,CAAC;QACxB;MAAC,SAAAvK,GAAA;QAAAkK,UAAA,CAAAzjB,CAAA,CAAAuZ,GAAA;MAAA;QAAAkK,UAAA,CAAAziB,CAAA;MAAA;MACD4M,EAAE,CAAC0O,SAAS,GAAG,EAAE;MACjB,IAAMyH,OAAO,GAAGxC,QAAQ,CAACtT,MAAM;MAC/B,IAAM+V,OAAO,GAAGxM,IAAI,CAACvJ,MAAM;MAC3B,IAAMgR,KAAK,GAAGzR,IAAI,CAACC,GAAG,CAACuW,OAAO,EAAED,OAAO,CAAC;MACxC,IAAI9E,KAAK,EAAE;QACTrR,EAAE,CAACoR,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC;MACpB;MACA,IAAI+E,OAAO,GAAGD,OAAO,EAAE;QACrBnW,EAAE,CAACqW,eAAe,CAACF,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAE1F,gBAAgB,CAAC;MAClE,CAAC,MAAM,IAAI2F,OAAO,GAAGD,OAAO,EAAE;QAC5BnW,EAAE,CAACsW,eAAe,CAACF,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAChD;IACF;EAAC;IAAAvX,GAAA;IAAAC,KAAA,EACD,SAAAuX,gBAAgBvW,KAAK,EAAEuR,KAAK,EAA2B;MAAA,IAAzBZ,gBAAgB,GAAArQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,IAAI;MACnD,IAAMJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMnC,IAAI,GAAGI,IAAI,CAACJ,IAAI;MACtB,IAAMxB,GAAG,GAAGtI,KAAK,GAAGuR,KAAK;MACzB,IAAI3e,CAAC;MACL,IAAM6jB,IAAI,GAAG,SAAPA,IAAIA,CAAIC,GAAG,EAAK;QACpBA,GAAG,CAACnW,MAAM,IAAIgR,KAAK;QACnB,KAAK3e,CAAC,GAAG8jB,GAAG,CAACnW,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI0V,GAAG,EAAE1V,CAAC,EAAE,EAAE;UACtC8jB,GAAG,CAAC9jB,CAAC,CAAC,GAAG8jB,GAAG,CAAC9jB,CAAC,GAAG2e,KAAK,CAAC;QACzB;MACF,CAAC;MACDkF,IAAI,CAAC3M,IAAI,CAAC;MACV,KAAKlX,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAG0V,GAAG,EAAE,EAAE1V,CAAC,EAAE;QAC5BkX,IAAI,CAAClX,CAAC,CAAC,GAAG,IAAIsN,EAAE,CAACoU,eAAe,CAAC,CAAC;MACpC;MACA,IAAIpU,EAAE,CAACkO,QAAQ,EAAE;QACfqI,IAAI,CAACvM,IAAI,CAACqD,OAAO,CAAC;MACpB;MACArN,EAAE,CAACoR,KAAK,CAACtR,KAAK,EAAEuR,KAAK,CAAC;MACtB,IAAIZ,gBAAgB,EAAE;QACpBzQ,EAAE,CAACyW,cAAc,CAAC7M,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE,OAAO,CAAC;MAChD;IACF;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAexJ,OAAO,EAAEnN,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE,CAAC;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EAC9C,SAAAwX,gBAAgBxW,KAAK,EAAEuR,KAAK,EAAE;MAC5B,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAI/L,EAAE,CAACkO,QAAQ,EAAE;QACf,IAAMwI,OAAO,GAAG1M,IAAI,CAACqD,OAAO,CAACsJ,MAAM,CAAC7W,KAAK,EAAEuR,KAAK,CAAC;QACjD,IAAIrH,IAAI,CAAC6E,QAAQ,EAAE;UACjBzB,WAAW,CAACpD,IAAI,EAAE0M,OAAO,CAAC;QAC5B;MACF;MACA1M,IAAI,CAACJ,IAAI,CAAC+M,MAAM,CAAC7W,KAAK,EAAEuR,KAAK,CAAC;IAChC;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA8X,MAAMC,IAAI,EAAE;MACV,IAAI,IAAI,CAAC3I,QAAQ,EAAE;QACjB,IAAI,CAACQ,SAAS,CAAChN,IAAI,CAACmV,IAAI,CAAC;MAC3B,CAAC,MAAM;QACL,IAAAC,MAAA,GAAAd,cAAA,CAA6Ba,IAAI;UAA1B1R,MAAM,GAAA2R,MAAA;UAAEb,IAAI,GAAAa,MAAA;UAAEZ,IAAI,GAAAY,MAAA;QACzB,IAAI,CAAC3R,MAAM,CAAC,CAAC8Q,IAAI,EAAEC,IAAI,CAAC;MAC1B;IACF;EAAC;IAAArX,GAAA;IAAAC,KAAA,EACD,SAAAiY,YAAA,EAAc;MACZ,IAAM1F,KAAK,GAAGjR,SAAS,CAACC,MAAM;MAC9B,IAAI,CAACuW,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC5H,UAAU,CAAC,CAAC,CAACpF,IAAI,CAACvJ,MAAM,GAAGgR,KAAK,EAAEA,KAAK,CAAC,CAAC;IAC/E;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAAkY,WAAA,EAAa;MACX,IAAI,CAACJ,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC7K,WAAW,CAACnC,IAAI,CAACvJ,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAmY,aAAA,EAAe;MACb,IAAI,CAACL,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC;EAAC;IAAA/X,GAAA;IAAAC,KAAA,EACD,SAAAoY,cAAcpX,KAAK,EAAEuR,KAAK,EAAE;MAC1B,IAAI,CAACuF,KAAK,CAAC,CAAC,iBAAiB,EAAE9W,KAAK,EAAEuR,KAAK,CAAC,CAAC;MAC7C,IAAI,CAACuF,KAAK,CAAC,CAAC,iBAAiB,EAAE9W,KAAK,EAAEM,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9D;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAqY,eAAA,EAAiB;MACf,IAAI,CAACP,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAExW,SAAS,CAACC,MAAM,CAAC,CAAC;IACtD;EAAC;EAAA,OAAAuN,iBAAA;AAAA;AAEHA,iBAAiB,CAACnb,QAAQ,GAAG,CAAC,CAAC;AAC/Bmb,iBAAiB,CAACwJ,SAAS,CAAC7G,kBAAkB,GAAG,IAAI;AACrD3C,iBAAiB,CAACwJ,SAAS,CAAChD,eAAe,GAAG,IAAI;AAElD,SAASiD,iBAAiBA,CAACrP,KAAK,EAAE;EAChC,IAAI,CAACA,KAAK,CAACsP,MAAM,CAACC,IAAI,EAAE;IACtB,IAAMC,KAAK,GAAGxP,KAAK,CAACwD,uBAAuB,CAAC,KAAK,CAAC;IAClD,IAAIxE,MAAM,GAAG,EAAE;IACf,KAAK,IAAItU,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGsO,KAAK,CAACnX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;MAClDsU,MAAM,GAAGA,MAAM,CAACqD,MAAM,CAACmN,KAAK,CAAC9kB,CAAC,CAAC,CAACmZ,UAAU,CAACuH,kBAAkB,CAACpL,KAAK,CAAC,CAAC;IACvE;IACAA,KAAK,CAACsP,MAAM,CAACC,IAAI,GAAGxjB,YAAY,CAACiT,MAAM,CAACyQ,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC;MAAA,OAAKV,CAAC,GAAGU,CAAC;IAAA,EAAC,CAAC;EAChE;EACA,OAAOoV,KAAK,CAACsP,MAAM,CAACC,IAAI;AAC1B;AACA,SAASG,oBAAoBA,CAAC1P,KAAK,EAAE;EACnC,IAAMhB,MAAM,GAAGqQ,iBAAiB,CAACrP,KAAK,CAAC;EACvC,IAAInI,GAAG,GAAGmI,KAAK,CAAC2P,OAAO;EACvB,IAAIjlB,CAAC,EAAEwW,IAAI,EAAE0O,IAAI,EAAEpG,IAAI;EACvB,IAAMqG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAID,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,CAAC,KAAK,EAAE;MACrC;IACF;IACA,IAAInkB,OAAO,CAAC+d,IAAI,CAAC,EAAE;MACjB3R,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAED,IAAI,CAACkY,GAAG,CAACF,IAAI,GAAGpG,IAAI,CAAC,IAAI3R,GAAG,CAAC;IACnD;IACA2R,IAAI,GAAGoG,IAAI;EACb,CAAC;EACD,KAAKllB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlC,MAAM,CAAC3G,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC/CklB,IAAI,GAAG5P,KAAK,CAAC+P,gBAAgB,CAAC/Q,MAAM,CAACtU,CAAC,CAAC,CAAC;IACxCmlB,gBAAgB,CAAC,CAAC;EACpB;EACArG,IAAI,GAAG7S,SAAS;EAChB,KAAKjM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlB,KAAK,CAACgQ,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACpDklB,IAAI,GAAG5P,KAAK,CAACiQ,eAAe,CAACvlB,CAAC,CAAC;IAC/BmlB,gBAAgB,CAAC,CAAC;EACpB;EACA,OAAOhY,GAAG;AACZ;AACA,SAASqY,wBAAwBA,CAAC/O,KAAK,EAAEgP,KAAK,EAAEjR,OAAO,EAAEkR,UAAU,EAAE;EACnE,IAAMC,SAAS,GAAGnR,OAAO,CAACoR,YAAY;EACtC,IAAI3Q,IAAI,EAAE4Q,KAAK;EACf,IAAI1kB,aAAa,CAACwkB,SAAS,CAAC,EAAE;IAC5B1Q,IAAI,GAAGwQ,KAAK,CAACtY,GAAG,GAAGqH,OAAO,CAACsR,kBAAkB;IAC7CD,KAAK,GAAGrR,OAAO,CAACuR,aAAa;EAC/B,CAAC,MAAM;IACL9Q,IAAI,GAAG0Q,SAAS,GAAGD,UAAU;IAC7BG,KAAK,GAAG,CAAC;EACX;EACA,OAAO;IACLG,KAAK,EAAE/Q,IAAI,GAAGyQ,UAAU;IACxBG,KAAK,EAALA,KAAK;IACLzY,KAAK,EAAEqY,KAAK,CAACQ,MAAM,CAACxP,KAAK,CAAC,GAAIxB,IAAI,GAAG;EACvC,CAAC;AACH;AACA,SAASiR,yBAAyBA,CAACzP,KAAK,EAAEgP,KAAK,EAAEjR,OAAO,EAAEkR,UAAU,EAAE;EACpE,IAAMO,MAAM,GAAGR,KAAK,CAACQ,MAAM;EAC3B,IAAMf,IAAI,GAAGe,MAAM,CAACxP,KAAK,CAAC;EAC1B,IAAIqI,IAAI,GAAGrI,KAAK,GAAG,CAAC,GAAGwP,MAAM,CAACxP,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/C,IAAI0P,IAAI,GAAG1P,KAAK,GAAGwP,MAAM,CAACtY,MAAM,GAAG,CAAC,GAAGsY,MAAM,CAACxP,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/D,IAAM2P,OAAO,GAAG5R,OAAO,CAACsR,kBAAkB;EAC1C,IAAIhH,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGoG,IAAI,IAAIiB,IAAI,KAAK,IAAI,GAAGV,KAAK,CAAC/P,GAAG,GAAG+P,KAAK,CAACrY,KAAK,GAAG+Y,IAAI,GAAGjB,IAAI,CAAC;EACvE;EACA,IAAIiB,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGjB,IAAI,GAAGA,IAAI,GAAGpG,IAAI;EAC3B;EACA,IAAM1R,KAAK,GAAG8X,IAAI,GAAG,CAACA,IAAI,GAAGhY,IAAI,CAACC,GAAG,CAAC2R,IAAI,EAAEqH,IAAI,CAAC,IAAI,CAAC,GAAGC,OAAO;EAChE,IAAMnR,IAAI,GAAG/H,IAAI,CAACkY,GAAG,CAACe,IAAI,GAAGrH,IAAI,CAAC,GAAG,CAAC,GAAGsH,OAAO;EAChD,OAAO;IACLJ,KAAK,EAAE/Q,IAAI,GAAGyQ,UAAU;IACxBG,KAAK,EAAErR,OAAO,CAACuR,aAAa;IAC5B3Y,KAAK,EAALA;EACF,CAAC;AACH;AACA,SAASiZ,aAAaA,CAACC,KAAK,EAAEpY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,EAAE;EAC7C,IAAMumB,UAAU,GAAG7N,MAAM,CAACgG,KAAK,CAAC4H,KAAK,CAAC,CAAC,CAAC,EAAEtmB,CAAC,CAAC;EAC5C,IAAMwmB,QAAQ,GAAG9N,MAAM,CAACgG,KAAK,CAAC4H,KAAK,CAAC,CAAC,CAAC,EAAEtmB,CAAC,CAAC;EAC1C,IAAMmN,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACoZ,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAM/W,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAAC8W,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAIC,QAAQ,GAAGtZ,GAAG;EAClB,IAAIuZ,MAAM,GAAGjX,GAAG;EAChB,IAAIvC,IAAI,CAACkY,GAAG,CAACjY,GAAG,CAAC,GAAGD,IAAI,CAACkY,GAAG,CAAC3V,GAAG,CAAC,EAAE;IACjCgX,QAAQ,GAAGhX,GAAG;IACdiX,MAAM,GAAGvZ,GAAG;EACd;EACAe,IAAI,CAACwK,MAAM,CAACe,IAAI,CAAC,GAAGiN,MAAM;EAC1BxY,IAAI,CAACyY,OAAO,GAAG;IACbF,QAAQ,EAARA,QAAQ;IACRC,MAAM,EAANA,MAAM;IACNtZ,KAAK,EAAEmZ,UAAU;IACjB7Q,GAAG,EAAE8Q,QAAQ;IACbrZ,GAAG,EAAHA,GAAG;IACHsC,GAAG,EAAHA;EACF,CAAC;AACH;AACA,SAASmX,UAAUA,CAACN,KAAK,EAAEpY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,EAAE;EAC1C,IAAIG,OAAO,CAACmmB,KAAK,CAAC,EAAE;IAClBD,aAAa,CAACC,KAAK,EAAEpY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC;EACvC,CAAC,MAAM;IACLkO,IAAI,CAACwK,MAAM,CAACe,IAAI,CAAC,GAAGf,MAAM,CAACgG,KAAK,CAAC4H,KAAK,EAAEtmB,CAAC,CAAC;EAC5C;EACA,OAAOkO,IAAI;AACb;AACA,SAAS2Y,qBAAqBA,CAACvP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;EACvD,IAAMpF,MAAM,GAAGjC,IAAI,CAACiC,MAAM;EAC1B,IAAMb,MAAM,GAAGpB,IAAI,CAACoB,MAAM;EAC1B,IAAMyG,MAAM,GAAG5F,MAAM,CAAC6F,SAAS,CAAC,CAAC;EACjC,IAAMC,WAAW,GAAG9F,MAAM,KAAKb,MAAM;EACrC,IAAMU,MAAM,GAAG,EAAE;EACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI,EAAEoY,KAAK;EACxB,KAAKtmB,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACnDsmB,KAAK,GAAGpP,IAAI,CAAClX,CAAC,CAAC;IACfkO,IAAI,GAAG,CAAC,CAAC;IACTA,IAAI,CAACqL,MAAM,CAACE,IAAI,CAAC,GAAG4F,WAAW,IAAI9F,MAAM,CAACmF,KAAK,CAACS,MAAM,CAACnf,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC7DoZ,MAAM,CAACpK,IAAI,CAAC4X,UAAU,CAACN,KAAK,EAAEpY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC,CAAC;EACjD;EACA,OAAOoZ,MAAM;AACf;AACA,SAAS0N,UAAUA,CAACC,MAAM,EAAE;EAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAQ,KAAKxa,SAAS,IAAI8a,MAAM,CAACL,MAAM,KAAKza,SAAS;AAC/E;AACA,SAAS+a,OAAOA,CAAC/R,IAAI,EAAEyD,MAAM,EAAEuO,UAAU,EAAE;EACzC,IAAIhS,IAAI,KAAK,CAAC,EAAE;IACd,OAAOhU,IAAI,CAACgU,IAAI,CAAC;EACnB;EACA,OAAO,CAACyD,MAAM,CAACwO,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAKxO,MAAM,CAACvL,GAAG,IAAI8Z,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/E;AACA,SAASE,WAAWA,CAAC9T,UAAU,EAAE;EAC/B,IAAIoC,OAAO,EAAErI,KAAK,EAAEsI,GAAG,EAAEI,GAAG,EAAEE,MAAM;EACpC,IAAI3C,UAAU,CAAC+T,UAAU,EAAE;IACzB3R,OAAO,GAAGpC,UAAU,CAACgU,IAAI,GAAGhU,UAAU,CAACzQ,CAAC;IACxCwK,KAAK,GAAG,MAAM;IACdsI,GAAG,GAAG,OAAO;EACf,CAAC,MAAM;IACLD,OAAO,GAAGpC,UAAU,CAACgU,IAAI,GAAGhU,UAAU,CAACvQ,CAAC;IACxCsK,KAAK,GAAG,QAAQ;IAChBsI,GAAG,GAAG,KAAK;EACb;EACA,IAAID,OAAO,EAAE;IACXK,GAAG,GAAG,KAAK;IACXE,MAAM,GAAG,OAAO;EAClB,CAAC,MAAM;IACLF,GAAG,GAAG,OAAO;IACbE,MAAM,GAAG,KAAK;EAChB;EACA,OAAO;IAAC5I,KAAK,EAALA,KAAK;IAAEsI,GAAG,EAAHA,GAAG;IAAED,OAAO,EAAPA,OAAO;IAAEK,GAAG,EAAHA,GAAG;IAAEE,MAAM,EAANA;EAAM,CAAC;AAC3C;AACA,SAASsR,gBAAgBA,CAACjU,UAAU,EAAEmB,OAAO,EAAEmC,KAAK,EAAEF,KAAK,EAAE;EAC3D,IAAI8Q,IAAI,GAAG/S,OAAO,CAACgT,aAAa;EAChC,IAAMlV,GAAG,GAAG,CAAC,CAAC;EACd,IAAI,CAACiV,IAAI,EAAE;IACTlU,UAAU,CAACmU,aAAa,GAAGlV,GAAG;IAC9B;EACF;EACA,IAAAmV,YAAA,GAA2CN,WAAW,CAAC9T,UAAU,CAAC;IAA3DjG,KAAK,GAAAqa,YAAA,CAALra,KAAK;IAAEsI,GAAG,GAAA+R,YAAA,CAAH/R,GAAG;IAAED,OAAO,GAAAgS,YAAA,CAAPhS,OAAO;IAAEK,GAAG,GAAA2R,YAAA,CAAH3R,GAAG;IAAEE,MAAM,GAAAyR,YAAA,CAANzR,MAAM;EACvC,IAAIuR,IAAI,KAAK,QAAQ,IAAI5Q,KAAK,EAAE;IAC9BtD,UAAU,CAACqU,kBAAkB,GAAG,IAAI;IACpC,IAAI,CAAC/Q,KAAK,CAACiD,IAAI,IAAI,CAAC,MAAMnD,KAAK,EAAE;MAC/B8Q,IAAI,GAAGzR,GAAG;IACZ,CAAC,MAAM,IAAI,CAACa,KAAK,CAACkD,OAAO,IAAI,CAAC,MAAMpD,KAAK,EAAE;MACzC8Q,IAAI,GAAGvR,MAAM;IACf,CAAC,MAAM;MACL1D,GAAG,CAACqV,SAAS,CAAC3R,MAAM,EAAE5I,KAAK,EAAEsI,GAAG,EAAED,OAAO,CAAC,CAAC,GAAG,IAAI;MAClD8R,IAAI,GAAGzR,GAAG;IACZ;EACF;EACAxD,GAAG,CAACqV,SAAS,CAACJ,IAAI,EAAEna,KAAK,EAAEsI,GAAG,EAAED,OAAO,CAAC,CAAC,GAAG,IAAI;EAChDpC,UAAU,CAACmU,aAAa,GAAGlV,GAAG;AAChC;AACA,SAASqV,SAASA,CAACJ,IAAI,EAAE/nB,CAAC,EAAEU,CAAC,EAAEuV,OAAO,EAAE;EACtC,IAAIA,OAAO,EAAE;IACX8R,IAAI,GAAGK,IAAI,CAACL,IAAI,EAAE/nB,CAAC,EAAEU,CAAC,CAAC;IACvBqnB,IAAI,GAAGM,QAAQ,CAACN,IAAI,EAAErnB,CAAC,EAAEV,CAAC,CAAC;EAC7B,CAAC,MAAM;IACL+nB,IAAI,GAAGM,QAAQ,CAACN,IAAI,EAAE/nB,CAAC,EAAEU,CAAC,CAAC;EAC7B;EACA,OAAOqnB,IAAI;AACb;AACA,SAASK,IAAIA,CAACE,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAE;EAC1B,OAAOF,IAAI,KAAKC,EAAE,GAAGC,EAAE,GAAGF,IAAI,KAAKE,EAAE,GAAGD,EAAE,GAAGD,IAAI;AACnD;AACA,SAASD,QAAQA,CAACznB,CAAC,EAAEgN,KAAK,EAAEsI,GAAG,EAAE;EAC/B,OAAOtV,CAAC,KAAK,OAAO,GAAGgN,KAAK,GAAGhN,CAAC,KAAK,KAAK,GAAGsV,GAAG,GAAGtV,CAAC;AACtD;AAAC,IACK6nB,aAAa,0BAAAC,kBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,kBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAAA,SAAAA,cAAA;IAAAtc,eAAA,OAAAsc,aAAA;IAAA,OAAAG,MAAA,CAAAjZ,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA+b,aAAA;IAAA9b,GAAA;IAAAC,KAAA,EACjB,SAAA6S,mBAAmB3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MAC3C,OAAOkI,qBAAqB,CAACvP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;IACxD;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA2S,eAAezH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACvC,OAAOkI,qBAAqB,CAACvP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;IACxD;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAOpF,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAA4P,eAAA,GAAyC,IAAI,CAAC9M,QAAQ;QAAA+M,qBAAA,GAAAD,eAAA,CAA/C5I,QAAQ;QAARA,QAAQ,GAAA6I,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,eAAA,CAAE1I,QAAQ;QAARA,QAAQ,GAAA4I,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMC,QAAQ,GAAGlP,MAAM,CAACE,IAAI,KAAK,GAAG,GAAGiG,QAAQ,GAAGE,QAAQ;MAC1D,IAAM8I,QAAQ,GAAGhQ,MAAM,CAACe,IAAI,KAAK,GAAG,GAAGiG,QAAQ,GAAGE,QAAQ;MAC1D,IAAMxG,MAAM,GAAG,EAAE;MACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI,EAAEya,GAAG;MACtB,KAAK3oB,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnD2oB,GAAG,GAAGzR,IAAI,CAAClX,CAAC,CAAC;QACbkO,IAAI,GAAG,CAAC,CAAC;QACTA,IAAI,CAACqL,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAACmF,KAAK,CAAC/d,gBAAgB,CAACgoB,GAAG,EAAEF,QAAQ,CAAC,EAAEzoB,CAAC,CAAC;QACpEoZ,MAAM,CAACpK,IAAI,CAAC4X,UAAU,CAACjmB,gBAAgB,CAACgoB,GAAG,EAAED,QAAQ,CAAC,EAAExa,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC,CAAC;MAC3E;MACA,OAAOoZ,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA2T,sBAAsBC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,EAAE;MACjDiS,IAAA,CAAAC,eAAA,CAAAZ,aAAA,CAAAvD,SAAA,kCAAAnX,IAAA,OAA4ByS,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK;MACvD,IAAMoQ,MAAM,GAAG3N,MAAM,CAACuN,OAAO;MAC7B,IAAII,MAAM,IAAIzR,KAAK,KAAK,IAAI,CAAC+D,WAAW,CAACX,MAAM,EAAE;QAC/CsH,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAE4Z,MAAM,CAAC5Z,GAAG,CAAC;QAC3C6S,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAEsX,MAAM,CAACtX,GAAG,CAAC;MAC7C;IACF;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,OAAO,CAAC;IACV;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAOE,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAMsQ,MAAM,GAAG3N,MAAM,CAACuN,OAAO;MAC7B,IAAMva,KAAK,GAAG0a,UAAU,CAACC,MAAM,CAAC,GAC5B,GAAG,GAAGA,MAAM,CAAC3Z,KAAK,GAAG,IAAI,GAAG2Z,MAAM,CAACrR,GAAG,GAAG,GAAG,GAC5C,EAAE,GAAGgD,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC;MACrD,OAAO;QACLoH,KAAK,EAAE,EAAE,GAAGtH,MAAM,CAACuH,gBAAgB,CAAC1H,MAAM,CAACG,MAAM,CAACE,IAAI,CAAC,CAAC;QACxDrN,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAA,EAAa;MACX,IAAM3O,EAAE,GAAG,IAAI;MACfA,EAAE,CAACwO,mBAAmB,GAAG,IAAI;MAC7B8M,IAAA,CAAAC,eAAA,CAAAZ,aAAA,CAAAvD,SAAA,uBAAAnX,IAAA;MACA,IAAM+J,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/B,IAAI,CAACX,KAAK,GAAGrJ,EAAE,CAACgP,UAAU,CAAC,CAAC,CAAC3F,KAAK;IACpC;EAAC;IAAAxK,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACyW,cAAc,CAACzM,IAAI,CAACJ,IAAI,EAAE,CAAC,EAAEI,IAAI,CAACJ,IAAI,CAACvJ,MAAM,EAAEmJ,IAAI,CAAC;IACzD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe+E,IAAI,EAAE1b,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAOL,KAAK,GAA2BnJ,EAAE,CAAlCmJ,KAAK;QAAgBiC,MAAM,GAAKpL,EAAE,CAA3B+L,WAAW,CAAGX,MAAM;MAClC,IAAM2O,IAAI,GAAG3O,MAAM,CAACqQ,YAAY,CAAC,CAAC;MAClC,IAAM3B,UAAU,GAAG1O,MAAM,CAACwO,YAAY,CAAC,CAAC;MACxC,IAAMzB,KAAK,GAAGnY,EAAE,CAAC0b,SAAS,CAAC,CAAC;MAC5B,IAAMC,SAAS,GAAG3b,EAAE,CAACiU,yBAAyB,CAACnU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM4L,aAAa,GAAGpV,EAAE,CAACkV,gBAAgB,CAACyG,SAAS,CAAC;MACpD,IAAMxG,cAAc,GAAGnV,EAAE,CAACmV,cAAc,CAAC3L,IAAI,EAAE4L,aAAa,CAAC;MAC7DpV,EAAE,CAACuV,mBAAmB,CAACH,aAAa,EAAE5L,IAAI,EAAEmS,SAAS,CAAC;MACtD,KAAK,IAAIjpB,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAMoZ,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QAC9B,IAAMkpB,OAAO,GAAGzL,KAAK,IAAItc,aAAa,CAACiY,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC,GAAG;UAAC4N,IAAI,EAAJA,IAAI;UAAE8B,IAAI,EAAE9B;QAAI,CAAC,GAAG/Z,EAAE,CAAC8b,wBAAwB,CAACppB,CAAC,CAAC;QACjH,IAAMqpB,OAAO,GAAG/b,EAAE,CAACgc,wBAAwB,CAACtpB,CAAC,EAAEylB,KAAK,CAAC;QACrD,IAAM9O,KAAK,GAAG,CAACyC,MAAM,CAACE,OAAO,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAACe,IAAI,CAAC;QACjD,IAAMpG,UAAU,GAAG;UACjB+T,UAAU,EAAVA,UAAU;UACVC,IAAI,EAAE6B,OAAO,CAAC7B,IAAI;UAClBK,kBAAkB,EAAE,CAAC/Q,KAAK,IAAImQ,UAAU,CAAC1N,MAAM,CAACuN,OAAO,CAAC,IAAKlQ,KAAK,KAAKE,KAAK,CAACiD,IAAI,IAAInD,KAAK,KAAKE,KAAK,CAACkD,OAAQ;UAC7GjX,CAAC,EAAEwkB,UAAU,GAAG8B,OAAO,CAACC,IAAI,GAAGE,OAAO,CAACE,MAAM;UAC7CzmB,CAAC,EAAEskB,UAAU,GAAGiC,OAAO,CAACE,MAAM,GAAGL,OAAO,CAACC,IAAI;UAC7CK,MAAM,EAAEpC,UAAU,GAAGiC,OAAO,CAACpU,IAAI,GAAG/H,IAAI,CAACkY,GAAG,CAAC8D,OAAO,CAACjU,IAAI,CAAC;UAC1DwU,KAAK,EAAErC,UAAU,GAAGla,IAAI,CAACkY,GAAG,CAAC8D,OAAO,CAACjU,IAAI,CAAC,GAAGoU,OAAO,CAACpU;QACvD,CAAC;QACD,IAAIwN,cAAc,EAAE;UAClBpP,UAAU,CAACmB,OAAO,GAAGkO,aAAa,IAAIpV,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAE8oB,IAAI,CAAC9oB,CAAC,CAAC,CAAC+R,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACzG;QACAwQ,gBAAgB,CAACjU,UAAU,EAAEA,UAAU,CAACmB,OAAO,IAAIsU,IAAI,CAAC9oB,CAAC,CAAC,CAACwU,OAAO,EAAEmC,KAAK,EAAEF,KAAK,CAAC;QACjFnJ,EAAE,CAACsV,aAAa,CAACkG,IAAI,CAAC9oB,CAAC,CAAC,EAAEA,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAChD;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAsd,WAAWC,IAAI,EAAEnP,SAAS,EAAE;MAC1B,IAAMlN,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAMjD,QAAQ,GAAGiD,MAAM,CAACT,uBAAuB,CAACxL,EAAE,CAACiO,KAAK,CAAC;MACzD,IAAMhE,OAAO,GAAGgC,MAAM,CAAC/E,OAAO,CAAC+C,OAAO;MACtC,IAAMf,IAAI,GAAGF,QAAQ,CAAC3I,MAAM;MAC5B,IAAM0K,MAAM,GAAG,EAAE;MACjB,IAAIrY,CAAC,EAAEkO,IAAI;MACX,KAAKlO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzBkO,IAAI,GAAGoI,QAAQ,CAACtW,CAAC,CAAC;QAClB,IAAI,CAACkO,IAAI,CAACiL,UAAU,CAAC3E,OAAO,CAACoV,OAAO,EAAE;UACpC;QACF;QACA,IAAI,OAAOpP,SAAS,KAAK,WAAW,EAAE;UACpC,IAAMqP,GAAG,GAAG3b,IAAI,CAACiL,UAAU,CAAC0G,SAAS,CAACrF,SAAS,CAAC,CAC9CtM,IAAI,CAACiL,UAAU,CAACE,WAAW,CAACX,MAAM,CAACe,IAAI,CACxC;UACD,IAAItY,aAAa,CAAC0oB,GAAG,CAAC,IAAIC,KAAK,CAACD,GAAG,CAAC,EAAE;YACpC;UACF;QACF;QACA,IAAItS,OAAO,KAAK,KAAK,IAAIc,MAAM,CAAC0R,OAAO,CAAC7b,IAAI,CAACyI,KAAK,CAAC,KAAK,CAAC,CAAC,IAC3DY,OAAO,KAAKtL,SAAS,IAAIiC,IAAI,CAACyI,KAAK,KAAK1K,SAAU,EAAE;UACjDoM,MAAM,CAACrJ,IAAI,CAACd,IAAI,CAACyI,KAAK,CAAC;QACzB;QACA,IAAIzI,IAAI,CAACuI,KAAK,KAAKkT,IAAI,EAAE;UACvB;QACF;MACF;MACA,IAAI,CAACtR,MAAM,CAAC1K,MAAM,EAAE;QAClB0K,MAAM,CAACrJ,IAAI,CAAC/C,SAAS,CAAC;MACxB;MACA,OAAOoM,MAAM;IACf;EAAC;IAAAlM,GAAA;IAAAC,KAAA,EACD,SAAA4d,eAAevT,KAAK,EAAE;MACpB,OAAO,IAAI,CAACiT,UAAU,CAACzd,SAAS,EAAEwK,KAAK,CAAC,CAAC9I,MAAM;IACjD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAA6d,eAAelT,YAAY,EAAE3D,IAAI,EAAEoH,SAAS,EAAE;MAC5C,IAAMnC,MAAM,GAAG,IAAI,CAACqR,UAAU,CAAC3S,YAAY,EAAEyD,SAAS,CAAC;MACvD,IAAM/D,KAAK,GAAIrD,IAAI,KAAKnH,SAAS,GAC7BoM,MAAM,CAAC0R,OAAO,CAAC3W,IAAI,CAAC,GACpB,CAAC,CAAC;MACN,OAAQqD,KAAK,KAAK,CAAC,CAAC,GAChB4B,MAAM,CAAC1K,MAAM,GAAG,CAAC,GACjB8I,KAAK;IACX;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA4c,UAAA,EAAY;MACV,IAAM1b,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM8C,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAM0M,MAAM,GAAG,EAAE;MACjB,IAAIjmB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGc,IAAI,CAACJ,IAAI,CAACvJ,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAClDimB,MAAM,CAACjX,IAAI,CAACuK,MAAM,CAAC8L,gBAAgB,CAAC/X,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC,CAACuZ,MAAM,CAACE,IAAI,CAAC,EAAEzZ,CAAC,CAAC,CAAC;MACvE;MACA,IAAM4lB,YAAY,GAAGpQ,IAAI,CAACoQ,YAAY;MACtC,IAAMzY,GAAG,GAAGyY,YAAY,IAAIZ,oBAAoB,CAACzL,MAAM,CAAC;MACxD,OAAO;QACLpM,GAAG,EAAHA,GAAG;QACH8Y,MAAM,EAANA,MAAM;QACN7Y,KAAK,EAAEmM,MAAM,CAAC2Q,WAAW;QACzBxU,GAAG,EAAE6D,MAAM,CAAC4Q,SAAS;QACrBzE,UAAU,EAAEpY,EAAE,CAAC0c,cAAc,CAAC,CAAC;QAC/B1U,KAAK,EAAEiE,MAAM;QACbqQ,OAAO,EAAEpU,IAAI,CAACoU,OAAO;QACrB/D,KAAK,EAAED,YAAY,GAAG,CAAC,GAAGpQ,IAAI,CAACsQ,kBAAkB,GAAGtQ,IAAI,CAACuQ;MAC3D,CAAC;IACH;EAAC;IAAA5Z,GAAA;IAAAC,KAAA,EACD,SAAAgd,yBAAyB3S,KAAK,EAAE;MAC9B,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAA8c,eAAA,GAAoF9c,EAAE,CAA/E+L,WAAW;QAAGX,MAAM,GAAA0R,eAAA,CAAN1R,MAAM;QAAEyD,QAAQ,GAAAiO,eAAA,CAARjO,QAAQ;QAAAkO,WAAA,GAA+C/c,EAAE,CAA9CkH,OAAO;QAAS8V,SAAS,GAAAD,WAAA,CAAfhD,IAAI;QAAakD,YAAY,GAAAF,WAAA,CAAZE,YAAY;MAC/E,IAAMtD,UAAU,GAAGqD,SAAS,IAAI,CAAC;MACjC,IAAMlR,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAMsQ,MAAM,GAAG3N,MAAM,CAACuN,OAAO;MAC7B,IAAM6D,QAAQ,GAAG1D,UAAU,CAACC,MAAM,CAAC;MACnC,IAAI3a,KAAK,GAAGgN,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC;MAC/B,IAAIrM,KAAK,GAAG,CAAC;MACb,IAAIO,MAAM,GAAGwO,QAAQ,GAAG7O,EAAE,CAACoJ,UAAU,CAACgC,MAAM,EAAEU,MAAM,EAAE+C,QAAQ,CAAC,GAAG/P,KAAK;MACvE,IAAI+c,IAAI,EAAElU,IAAI;MACd,IAAItH,MAAM,KAAKvB,KAAK,EAAE;QACpBgB,KAAK,GAAGO,MAAM,GAAGvB,KAAK;QACtBuB,MAAM,GAAGvB,KAAK;MAChB;MACA,IAAIoe,QAAQ,EAAE;QACZpe,KAAK,GAAG2a,MAAM,CAACN,QAAQ;QACvB9Y,MAAM,GAAGoZ,MAAM,CAACL,MAAM,GAAGK,MAAM,CAACN,QAAQ;QACxC,IAAIra,KAAK,KAAK,CAAC,IAAInL,IAAI,CAACmL,KAAK,CAAC,KAAKnL,IAAI,CAAC8lB,MAAM,CAACL,MAAM,CAAC,EAAE;UACtDtZ,KAAK,GAAG,CAAC;QACX;QACAA,KAAK,IAAIhB,KAAK;MAChB;MACA,IAAMma,UAAU,GAAG,CAACplB,aAAa,CAACmpB,SAAS,CAAC,IAAI,CAACE,QAAQ,GAAGF,SAAS,GAAGld,KAAK;MAC7E,IAAIia,IAAI,GAAG3O,MAAM,CAAC2M,gBAAgB,CAACkB,UAAU,CAAC;MAC9C,IAAIjZ,EAAE,CAAChB,KAAK,CAACme,iBAAiB,CAAChU,KAAK,CAAC,EAAE;QACrC0S,IAAI,GAAGzQ,MAAM,CAAC2M,gBAAgB,CAACjY,KAAK,GAAGO,MAAM,CAAC;MAChD,CAAC,MAAM;QACLwb,IAAI,GAAG9B,IAAI;MACb;MACApS,IAAI,GAAGkU,IAAI,GAAG9B,IAAI;MAClB,IAAIna,IAAI,CAACkY,GAAG,CAACnQ,IAAI,CAAC,GAAGsV,YAAY,EAAE;QACjCtV,IAAI,GAAG+R,OAAO,CAAC/R,IAAI,EAAEyD,MAAM,EAAEuO,UAAU,CAAC,GAAGsD,YAAY;QACvD,IAAIne,KAAK,KAAK6a,UAAU,EAAE;UACxBI,IAAI,IAAIpS,IAAI,GAAG,CAAC;QAClB;QACAkU,IAAI,GAAG9B,IAAI,GAAGpS,IAAI;MACpB;MACA,IAAIoS,IAAI,KAAK3O,MAAM,CAAC2M,gBAAgB,CAAC4B,UAAU,CAAC,EAAE;QAChD,IAAMyD,QAAQ,GAAGzpB,IAAI,CAACgU,IAAI,CAAC,GAAGyD,MAAM,CAACiS,oBAAoB,CAAC1D,UAAU,CAAC,GAAG,CAAC;QACzEI,IAAI,IAAIqD,QAAQ;QAChBzV,IAAI,IAAIyV,QAAQ;MAClB;MACA,OAAO;QACLzV,IAAI,EAAJA,IAAI;QACJoS,IAAI,EAAJA,IAAI;QACJ8B,IAAI,EAAJA,IAAI;QACJI,MAAM,EAAEJ,IAAI,GAAGlU,IAAI,GAAG;MACxB,CAAC;IACH;EAAC;IAAA9I,GAAA;IAAAC,KAAA,EACD,SAAAkd,yBAAyB7S,KAAK,EAAEgP,KAAK,EAAE;MACrC,IAAMnY,EAAE,GAAG,IAAI;MACf,IAAMgI,KAAK,GAAGmQ,KAAK,CAACnQ,KAAK;MACzB,IAAMd,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMoW,QAAQ,GAAGpW,OAAO,CAACoW,QAAQ;MACjC,IAAMC,eAAe,GAAGxqB,cAAc,CAACmU,OAAO,CAACqW,eAAe,EAAEC,QAAQ,CAAC;MACzE,IAAIvB,MAAM,EAAEtU,IAAI;MAChB,IAAIwQ,KAAK,CAACmE,OAAO,EAAE;QACjB,IAAMlE,UAAU,GAAGkF,QAAQ,GAAGtd,EAAE,CAAC0c,cAAc,CAACvT,KAAK,CAAC,GAAGgP,KAAK,CAACC,UAAU;QACzE,IAAM1F,KAAK,GAAGxL,OAAO,CAACoR,YAAY,KAAK,MAAM,GACzCM,yBAAyB,CAACzP,KAAK,EAAEgP,KAAK,EAAEjR,OAAO,EAAEkR,UAAU,CAAC,GAC5DF,wBAAwB,CAAC/O,KAAK,EAAEgP,KAAK,EAAEjR,OAAO,EAAEkR,UAAU,CAAC;QAC/D,IAAMqF,UAAU,GAAGzd,EAAE,CAAC2c,cAAc,CAAC3c,EAAE,CAACmJ,KAAK,EAAEnJ,EAAE,CAAC+L,WAAW,CAAC1C,KAAK,EAAEiU,QAAQ,GAAGnU,KAAK,GAAGxK,SAAS,CAAC;QAClGsd,MAAM,GAAGvJ,KAAK,CAAC5S,KAAK,GAAI4S,KAAK,CAACgG,KAAK,GAAG+E,UAAW,GAAI/K,KAAK,CAACgG,KAAK,GAAG,CAAE;QACrE/Q,IAAI,GAAG/H,IAAI,CAACC,GAAG,CAAC0d,eAAe,EAAE7K,KAAK,CAACgG,KAAK,GAAGhG,KAAK,CAAC6F,KAAK,CAAC;MAC7D,CAAC,MAAM;QACL0D,MAAM,GAAGjU,KAAK,CAAC+P,gBAAgB,CAAC/X,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC,CAACnB,KAAK,CAACmE,IAAI,CAAC,EAAEhD,KAAK,CAAC;QACvExB,IAAI,GAAG/H,IAAI,CAACC,GAAG,CAAC0d,eAAe,EAAEpF,KAAK,CAACtY,GAAG,GAAGsY,KAAK,CAACI,KAAK,CAAC;MAC3D;MACA,OAAO;QACLwB,IAAI,EAAEkC,MAAM,GAAGtU,IAAI,GAAG,CAAC;QACvBkU,IAAI,EAAEI,MAAM,GAAGtU,IAAI,GAAG,CAAC;QACvBsU,MAAM,EAANA,MAAM;QACNtU,IAAI,EAAJA;MACF,CAAC;IACH;EAAC;IAAA9I,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMX,MAAM,GAAGpB,IAAI,CAACoB,MAAM;MAC1B,IAAMsS,KAAK,GAAG1T,IAAI,CAACJ,IAAI;MACvB,IAAMV,IAAI,GAAGwU,KAAK,CAACrd,MAAM;MACzB,IAAI3N,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACpB,IAAIsN,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC,CAAC0Y,MAAM,CAACe,IAAI,CAAC,KAAK,IAAI,EAAE;UACzCuR,KAAK,CAAChrB,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6N,IAAI,CAAC;QACxB;MACF;IACF;EAAC;EAAA,OAAA8M,aAAA;AAAA,EAzPyB/M,iBAAiB;AA2P7C+M,aAAa,CAACrQ,EAAE,GAAG,KAAK;AACxBqQ,aAAa,CAACloB,QAAQ,GAAG;EACvB8d,kBAAkB,EAAE,KAAK;EACzB6D,eAAe,EAAE,KAAK;EACtBoE,kBAAkB,EAAE,GAAG;EACvBC,aAAa,EAAE,GAAG;EAClB6D,OAAO,EAAE,IAAI;EACbpW,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;IAClD;EACF;AACF,CAAC;AACD4U,aAAa,CAAChiB,SAAS,GAAG;EACxB8T,MAAM,EAAE;IACNkR,OAAO,EAAE;MACPxe,IAAI,EAAE,UAAU;MAChBye,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;QACJD,MAAM,EAAE;MACV;IACF,CAAC;IACDE,OAAO,EAAE;MACP3e,IAAI,EAAE,QAAQ;MACd4e,WAAW,EAAE;IACf;EACF;AACF,CAAC;AAAC,IAEIC,gBAAgB,0BAAAC,mBAAA;EAAApD,SAAA,CAAAmD,gBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAnD,YAAA,CAAAiD,gBAAA;EAAA,SAAAA,iBAAA;IAAA3f,eAAA,OAAA2f,gBAAA;IAAA,OAAAE,OAAA,CAAArc,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAof,gBAAA;IAAAnf,GAAA;IAAAC,KAAA,EACpB,SAAA6P,WAAA,EAAa;MACX,IAAI,CAACH,mBAAmB,GAAG,IAAI;MAC/B8M,IAAA,CAAAC,eAAA,CAAAyC,gBAAA,CAAA5G,SAAA,uBAAAnX,IAAA;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAA4V,eAAA,GAAyC,IAAI,CAACjQ,QAAQ;QAAAkQ,qBAAA,GAAAD,eAAA,CAA/C/L,QAAQ;QAARA,QAAQ,GAAAgM,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,eAAA,CAAE7L,QAAQ;QAARA,QAAQ,GAAA+L,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMvS,MAAM,GAAG,EAAE;MACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI;MACjB,KAAKlO,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDkO,IAAI,GAAGgJ,IAAI,CAAClX,CAAC,CAAC;QACdoZ,MAAM,CAACpK,IAAI,CAAC;UACVpM,CAAC,EAAEgT,MAAM,CAAC8I,KAAK,CAAC/d,gBAAgB,CAACuN,IAAI,EAAEwR,QAAQ,CAAC,EAAE1f,CAAC,CAAC;UACpD8C,CAAC,EAAE+S,MAAM,CAAC6I,KAAK,CAAC/d,gBAAgB,CAACuN,IAAI,EAAE0R,QAAQ,CAAC,EAAE5f,CAAC,CAAC;UACpD2mB,OAAO,EAAEzY,IAAI,IAAIA,IAAI,CAAC5O,CAAC,IAAI,CAAC4O,IAAI,CAAC5O;QACnC,CAAC,CAAC;MACJ;MACA,OAAO8Z,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,IAAAiL,iBAAA,GAAwB,IAAI,CAACvS,WAAW;QAAjCnC,IAAI,GAAA0U,iBAAA,CAAJ1U,IAAI;QAAEyD,OAAO,GAAAiR,iBAAA,CAAPjR,OAAO;MACpB,IAAIlL,GAAG,GAAG,CAAC;MACX,KAAK,IAAIzP,CAAC,GAAGkX,IAAI,CAACvJ,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACzCyP,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEyH,IAAI,CAAClX,CAAC,CAAC,CAACiV,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE0F,OAAO,CAAC3a,CAAC,CAAC,CAAC2mB,OAAO,CAAC;MAC7D;MACA,OAAOlX,GAAG,GAAG,CAAC,IAAIA,GAAG;IACvB;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAOzD,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAMuD,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAM7T,CAAC,GAAGgT,MAAM,CAACkL,gBAAgB,CAAC1H,MAAM,CAACxW,CAAC,CAAC;MAC3C,IAAME,CAAC,GAAG+S,MAAM,CAACiL,gBAAgB,CAAC1H,MAAM,CAACtW,CAAC,CAAC;MAC3C,IAAMxD,CAAC,GAAG8Z,MAAM,CAACuN,OAAO;MACxB,OAAO;QACL9F,KAAK,EAAEvJ,IAAI,CAACuJ,KAAK;QACjBzU,KAAK,EAAE,GAAG,GAAGxJ,CAAC,GAAG,IAAI,GAAGE,CAAC,IAAIxD,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAG,EAAE,CAAC,GAAG;MACpD,CAAC;IACH;EAAC;IAAA6M,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMue,MAAM,GAAGve,EAAE,CAAC+L,WAAW,CAACnC,IAAI;MAClC5J,EAAE,CAACyW,cAAc,CAAC8H,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACle,MAAM,EAAEmJ,IAAI,CAAC;IACnD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe8H,MAAM,EAAEze,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAAgV,gBAAA,GAAyBxe,EAAE,CAAC+L,WAAW;QAAhCE,MAAM,GAAAuS,gBAAA,CAANvS,MAAM;QAAEb,MAAM,GAAAoT,gBAAA,CAANpT,MAAM;MACrB,IAAMuQ,SAAS,GAAG3b,EAAE,CAACiU,yBAAyB,CAACnU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM4L,aAAa,GAAGpV,EAAE,CAACkV,gBAAgB,CAACyG,SAAS,CAAC;MACpD,IAAMxG,cAAc,GAAGnV,EAAE,CAACmV,cAAc,CAAC3L,IAAI,EAAE4L,aAAa,CAAC;MAC7D,IAAMlJ,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,KAAK,IAAIzZ,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAM+rB,KAAK,GAAGF,MAAM,CAAC7rB,CAAC,CAAC;QACvB,IAAMoZ,MAAM,GAAG,CAACqE,KAAK,IAAInQ,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QACxC,IAAMqT,UAAU,GAAG,CAAC,CAAC;QACrB,IAAM2Y,MAAM,GAAG3Y,UAAU,CAACmG,KAAK,CAAC,GAAGiE,KAAK,GAAGlE,MAAM,CAAC0S,kBAAkB,CAAC,GAAG,CAAC,GAAG1S,MAAM,CAAC8L,gBAAgB,CAACjM,MAAM,CAACI,KAAK,CAAC,CAAC;QAClH,IAAM0S,MAAM,GAAG7Y,UAAU,CAACqG,KAAK,CAAC,GAAG+D,KAAK,GAAG/E,MAAM,CAACqQ,YAAY,CAAC,CAAC,GAAGrQ,MAAM,CAAC2M,gBAAgB,CAACjM,MAAM,CAACM,KAAK,CAAC,CAAC;QACzGrG,UAAU,CAAC8Y,IAAI,GAAGrC,KAAK,CAACkC,MAAM,CAAC,IAAIlC,KAAK,CAACoC,MAAM,CAAC;QAChD,IAAIzJ,cAAc,EAAE;UAClBpP,UAAU,CAACmB,OAAO,GAAGlH,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAE+rB,KAAK,CAACha,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;UACpF,IAAI2G,KAAK,EAAE;YACTpK,UAAU,CAACmB,OAAO,CAAC4X,MAAM,GAAG,CAAC;UAC/B;QACF;QACA9e,EAAE,CAACsV,aAAa,CAACmJ,KAAK,EAAE/rB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC9C;MACAxJ,EAAE,CAACuV,mBAAmB,CAACH,aAAa,EAAE5L,IAAI,EAAEmS,SAAS,CAAC;IACxD;EAAC;IAAA9c,GAAA;IAAAC,KAAA,EACD,SAAAmV,0BAA0B9K,KAAK,EAAEK,IAAI,EAAE;MACrC,IAAMsC,MAAM,GAAG,IAAI,CAACyG,SAAS,CAACpJ,KAAK,CAAC;MACpC,IAAInC,MAAM,GAAAsU,IAAA,CAAAC,eAAA,CAAAyC,gBAAA,CAAA5G,SAAA,sCAAAnX,IAAA,OAAmCkJ,KAAK,EAAEK,IAAI,CAAC;MACzD,IAAIxC,MAAM,CAACK,OAAO,EAAE;QAClBL,MAAM,GAAGzB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEZ,MAAM,EAAE;UAACK,OAAO,EAAE;QAAK,CAAC,CAAC;MACtD;MACA,IAAMyX,MAAM,GAAG9X,MAAM,CAAC8X,MAAM;MAC5B,IAAItV,IAAI,KAAK,QAAQ,EAAE;QACrBxC,MAAM,CAAC8X,MAAM,GAAG,CAAC;MACnB;MACA9X,MAAM,CAAC8X,MAAM,IAAI/rB,cAAc,CAAC+Y,MAAM,IAAIA,MAAM,CAACuN,OAAO,EAAEyF,MAAM,CAAC;MACjE,OAAO9X,MAAM;IACf;EAAC;EAAA,OAAAgX,gBAAA;AAAA,EApF4BpQ,iBAAiB;AAsFhDoQ,gBAAgB,CAAC1T,EAAE,GAAG,QAAQ;AAC9B0T,gBAAgB,CAACvrB,QAAQ,GAAG;EAC1B8d,kBAAkB,EAAE,KAAK;EACzB6D,eAAe,EAAE,OAAO;EACxBlO,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ;IAChD;EACF;AACF,CAAC;AACDiY,gBAAgB,CAACrlB,SAAS,GAAG;EAC3B8T,MAAM,EAAE;IACNnX,CAAC,EAAE;MACD6J,IAAI,EAAE;IACR,CAAC;IACD3J,CAAC,EAAE;MACD2J,IAAI,EAAE;IACR;EACF,CAAC;EACD4f,OAAO,EAAE;IACPC,OAAO,EAAE;MACP5f,SAAS,EAAE;QACT6f,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX;MACF;IACF;EACF;AACF,CAAC;AAED,SAASC,iBAAiBA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAC1D,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIL,aAAa,GAAG7qB,GAAG,EAAE;IACvB,IAAMmrB,UAAU,GAAGP,QAAQ;IAC3B,IAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAAa;IAC3C,IAAMQ,MAAM,GAAGhgB,IAAI,CAACigB,GAAG,CAACH,UAAU,CAAC;IACnC,IAAMI,MAAM,GAAGlgB,IAAI,CAACmgB,GAAG,CAACL,UAAU,CAAC;IACnC,IAAMM,IAAI,GAAGpgB,IAAI,CAACigB,GAAG,CAACF,QAAQ,CAAC;IAC/B,IAAMM,IAAI,GAAGrgB,IAAI,CAACmgB,GAAG,CAACJ,QAAQ,CAAC;IAC/B,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAEjuB,CAAC,EAAEU,CAAC;MAAA,OAAK+B,aAAa,CAACwrB,KAAK,EAAET,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG/f,IAAI,CAACuC,GAAG,CAACjQ,CAAC,EAAEA,CAAC,GAAGmtB,MAAM,EAAEzsB,CAAC,EAAEA,CAAC,GAAGysB,MAAM,CAAC;IAAA;IAC9H,IAAMe,OAAO,GAAG,SAAVA,OAAOA,CAAID,KAAK,EAAEjuB,CAAC,EAAEU,CAAC;MAAA,OAAK+B,aAAa,CAACwrB,KAAK,EAAET,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG/f,IAAI,CAACC,GAAG,CAAC3N,CAAC,EAAEA,CAAC,GAAGmtB,MAAM,EAAEzsB,CAAC,EAAEA,CAAC,GAAGysB,MAAM,CAAC;IAAA;IAC/H,IAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAC,EAAEN,MAAM,EAAEI,IAAI,CAAC;IACrC,IAAMM,IAAI,GAAGJ,OAAO,CAACrrB,OAAO,EAAEirB,MAAM,EAAEG,IAAI,CAAC;IAC3C,IAAMM,IAAI,GAAGH,OAAO,CAACrrB,EAAE,EAAE6qB,MAAM,EAAEI,IAAI,CAAC;IACtC,IAAMQ,IAAI,GAAGJ,OAAO,CAACrrB,EAAE,GAAGF,OAAO,EAAEirB,MAAM,EAAEG,IAAI,CAAC;IAChDX,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;IAC5Bd,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;EAC9B;EACA,OAAO;IAAClB,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA,MAAM;IAAEC,OAAO,EAAPA,OAAO;IAAEC,OAAO,EAAPA;EAAO,CAAC;AAC3C;AAAC,IACKgB,kBAAkB,0BAAAC,mBAAA;EAAA7F,SAAA,CAAA4F,kBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA5F,YAAA,CAAA0F,kBAAA;EACtB,SAAAA,mBAAYzhB,KAAK,EAAEyK,YAAY,EAAE;IAAA,IAAAmX,KAAA;IAAAviB,eAAA,OAAAoiB,kBAAA;IAC/BG,KAAA,GAAAD,OAAA,CAAA1gB,IAAA,OAAMjB,KAAK,EAAEyK,YAAY;IACzBmX,KAAA,CAAKpS,mBAAmB,GAAG,IAAI;IAC/BoS,KAAA,CAAKC,WAAW,GAAGliB,SAAS;IAC5BiiB,KAAA,CAAKE,WAAW,GAAGniB,SAAS;IAC5BiiB,KAAA,CAAKpB,OAAO,GAAG7gB,SAAS;IACxBiiB,KAAA,CAAKnB,OAAO,GAAG9gB,SAAS;IAAC,OAAAiiB,KAAA;EAC3B;EAAChiB,YAAA,CAAA6hB,kBAAA;IAAA5hB,GAAA;IAAAC,KAAA,EACD,SAAA8P,WAAA,EAAa,CAAC;EAAC;IAAA/P,GAAA;IAAAC,KAAA,EACf,SAAAsS,MAAMtR,KAAK,EAAEuR,KAAK,EAAE;MAClB,IAAMzH,IAAI,GAAG,IAAI,CAACoF,UAAU,CAAC,CAAC,CAACpF,IAAI;MACnC,IAAMI,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAIrZ,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,GAAG,CAACkX,IAAI,CAAClX,CAAC,CAAC;MAC5B;IACF;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAAiiB,aAAA,EAAe;MACb,OAAO9sB,SAAS,CAAC,IAAI,CAACiT,OAAO,CAACiY,QAAQ,GAAG,EAAE,CAAC;IAC9C;EAAC;IAAAtgB,GAAA;IAAAC,KAAA,EACD,SAAAkiB,kBAAA,EAAoB;MAClB,OAAO/sB,SAAS,CAAC,IAAI,CAACiT,OAAO,CAACkY,aAAa,CAAC;IAC9C;EAAC;IAAAvgB,GAAA;IAAAC,KAAA,EACD,SAAAmiB,oBAAA,EAAsB;MACpB,IAAIphB,GAAG,GAAGtL,GAAG;MACb,IAAI4N,GAAG,GAAG,CAAC5N,GAAG;MACd,IAAMyL,EAAE,GAAG,IAAI;MACf,KAAK,IAAItN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsN,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE,EAAE3N,CAAC,EAAE;QACtD,IAAIsN,EAAE,CAAChB,KAAK,CAACkiB,gBAAgB,CAACxuB,CAAC,CAAC,EAAE;UAChC,IAAMmZ,UAAU,GAAG7L,EAAE,CAAChB,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC,CAACmZ,UAAU;UACxD,IAAMsT,QAAQ,GAAGtT,UAAU,CAACkV,YAAY,CAAC,CAAC;UAC1C,IAAM3B,aAAa,GAAGvT,UAAU,CAACmV,iBAAiB,CAAC,CAAC;UACpDnhB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEsf,QAAQ,CAAC;UAC7Bhd,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEgd,QAAQ,GAAGC,aAAa,CAAC;QAC/C;MACF;MACA,OAAO;QACLD,QAAQ,EAAEtf,GAAG;QACbuf,aAAa,EAAEjd,GAAG,GAAGtC;MACvB,CAAC;IACH;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAO6U,SAAS,GAAI7U,KAAK,CAAlB6U,SAAS;MAChB,IAAM7J,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMoV,IAAI,GAAGnX,IAAI,CAACJ,IAAI;MACtB,IAAMwX,OAAO,GAAGphB,EAAE,CAACqhB,iBAAiB,CAAC,CAAC,GAAGrhB,EAAE,CAACshB,YAAY,CAACH,IAAI,CAAC,GAAGnhB,EAAE,CAACkH,OAAO,CAACka,OAAO;MACnF,IAAMG,OAAO,GAAG3hB,IAAI,CAACuC,GAAG,CAAC,CAACvC,IAAI,CAACC,GAAG,CAACgU,SAAS,CAACsI,KAAK,EAAEtI,SAAS,CAACqI,MAAM,CAAC,GAAGkF,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;MACxF,IAAM/B,MAAM,GAAGzf,IAAI,CAACC,GAAG,CAAC1L,YAAY,CAAC6L,EAAE,CAACkH,OAAO,CAACmY,MAAM,EAAEkC,OAAO,CAAC,EAAE,CAAC,CAAC;MACpE,IAAMC,WAAW,GAAGxhB,EAAE,CAACyhB,cAAc,CAACzhB,EAAE,CAACmJ,KAAK,CAAC;MAC/C,IAAAuY,qBAAA,GAAkC1hB,EAAE,CAACihB,mBAAmB,CAAC,CAAC;QAAnD7B,aAAa,GAAAsC,qBAAA,CAAbtC,aAAa;QAAED,QAAQ,GAAAuC,qBAAA,CAARvC,QAAQ;MAC9B,IAAAwC,kBAAA,GAA2CzC,iBAAiB,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,CAAC;QAAtFC,MAAM,GAAAqC,kBAAA,CAANrC,MAAM;QAAEC,MAAM,GAAAoC,kBAAA,CAANpC,MAAM;QAAEC,OAAO,GAAAmC,kBAAA,CAAPnC,OAAO;QAAEC,OAAO,GAAAkC,kBAAA,CAAPlC,OAAO;MACvC,IAAMmC,QAAQ,GAAG,CAAC/N,SAAS,CAACsI,KAAK,GAAGiF,OAAO,IAAI9B,MAAM;MACrD,IAAMuC,SAAS,GAAG,CAAChO,SAAS,CAACqI,MAAM,GAAGkF,OAAO,IAAI7B,MAAM;MACvD,IAAMuC,SAAS,GAAGliB,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACC,GAAG,CAAC+hB,QAAQ,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;MAChE,IAAMf,WAAW,GAAGzsB,WAAW,CAAC2L,EAAE,CAACkH,OAAO,CAAC4X,MAAM,EAAEgD,SAAS,CAAC;MAC7D,IAAMjB,WAAW,GAAGjhB,IAAI,CAACuC,GAAG,CAAC2e,WAAW,GAAGzB,MAAM,EAAE,CAAC,CAAC;MACrD,IAAM0C,YAAY,GAAG,CAACjB,WAAW,GAAGD,WAAW,IAAI7gB,EAAE,CAACgiB,6BAA6B,CAAC,CAAC;MACrFhiB,EAAE,CAACwf,OAAO,GAAGA,OAAO,GAAGsB,WAAW;MAClC9gB,EAAE,CAACyf,OAAO,GAAGA,OAAO,GAAGqB,WAAW;MAClC9W,IAAI,CAACiY,KAAK,GAAGjiB,EAAE,CAACkiB,cAAc,CAAC,CAAC;MAChCliB,EAAE,CAAC8gB,WAAW,GAAGA,WAAW,GAAGiB,YAAY,GAAG/hB,EAAE,CAACmiB,oBAAoB,CAACniB,EAAE,CAACmJ,KAAK,CAAC;MAC/EnJ,EAAE,CAAC6gB,WAAW,GAAGjhB,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAAC8gB,WAAW,GAAGiB,YAAY,GAAGP,WAAW,EAAE,CAAC,CAAC;MACzExhB,EAAE,CAACyW,cAAc,CAAC0K,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC9gB,MAAM,EAAEmJ,IAAI,CAAC;IAC/C;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAsjB,eAAe1vB,CAAC,EAAEyd,KAAK,EAAE;MACvB,IAAMnQ,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM8C,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMqT,aAAa,GAAGpf,EAAE,CAACghB,iBAAiB,CAAC,CAAC;MAC5C,IAAK7Q,KAAK,IAAIjI,IAAI,CAACzC,SAAS,CAAC4c,aAAa,IAAK,CAAC,IAAI,CAACrjB,KAAK,CAACme,iBAAiB,CAACzqB,CAAC,CAAC,IAAIsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,KAAK,IAAI,IAAIsX,IAAI,CAACJ,IAAI,CAAClX,CAAC,CAAC,CAACohB,MAAM,EAAE;QAClI,OAAO,CAAC;MACV;MACA,OAAO9T,EAAE,CAACsiB,sBAAsB,CAACtY,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,GAAG0sB,aAAa,GAAG7qB,GAAG,CAAC;IACzE;EAAC;IAAAsK,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe0K,IAAI,EAAErhB,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAMxK,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6U,SAAS,GAAG7U,KAAK,CAAC6U,SAAS;MACjC,IAAM3L,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAMqb,aAAa,GAAGra,IAAI,CAACzC,SAAS;MACpC,IAAM+c,OAAO,GAAG,CAAC3O,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC;MACtD,IAAMga,OAAO,GAAG,CAAC5O,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC;MACtD,IAAMga,YAAY,GAAGvS,KAAK,IAAIoS,aAAa,CAACG,YAAY;MACxD,IAAM7B,WAAW,GAAG6B,YAAY,GAAG,CAAC,GAAG1iB,EAAE,CAAC6gB,WAAW;MACrD,IAAMC,WAAW,GAAG4B,YAAY,GAAG,CAAC,GAAG1iB,EAAE,CAAC8gB,WAAW;MACrD,IAAMnF,SAAS,GAAG3b,EAAE,CAACiU,yBAAyB,CAACnU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM4L,aAAa,GAAGpV,EAAE,CAACkV,gBAAgB,CAACyG,SAAS,CAAC;MACpD,IAAMxG,cAAc,GAAGnV,EAAE,CAACmV,cAAc,CAAC3L,IAAI,EAAE4L,aAAa,CAAC;MAC7D,IAAIsK,UAAU,GAAG1f,EAAE,CAAC+gB,YAAY,CAAC,CAAC;MAClC,IAAIruB,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoN,KAAK,EAAE,EAAEpN,CAAC,EAAE;QAC1BgtB,UAAU,IAAI1f,EAAE,CAACoiB,cAAc,CAAC1vB,CAAC,EAAEyd,KAAK,CAAC;MAC3C;MACA,KAAKzd,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QACtC,IAAM0sB,aAAa,GAAGpf,EAAE,CAACoiB,cAAc,CAAC1vB,CAAC,EAAEyd,KAAK,CAAC;QACjD,IAAMwS,GAAG,GAAGxB,IAAI,CAACzuB,CAAC,CAAC;QACnB,IAAMqT,UAAU,GAAG;UACjBzQ,CAAC,EAAEktB,OAAO,GAAGxiB,EAAE,CAACwf,OAAO;UACvBhqB,CAAC,EAAEitB,OAAO,GAAGziB,EAAE,CAACyf,OAAO;UACvBC,UAAU,EAAVA,UAAU;UACVC,QAAQ,EAAED,UAAU,GAAGN,aAAa;UACpCA,aAAa,EAAbA,aAAa;UACb0B,WAAW,EAAXA,WAAW;UACXD,WAAW,EAAXA;QACF,CAAC;QACD,IAAI1L,cAAc,EAAE;UAClBpP,UAAU,CAACmB,OAAO,GAAGkO,aAAa,IAAIpV,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAEiwB,GAAG,CAACle,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACrG;QACAkW,UAAU,IAAIN,aAAa;QAC3Bpf,EAAE,CAACsV,aAAa,CAACqN,GAAG,EAAEjwB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC5C;MACAxJ,EAAE,CAACuV,mBAAmB,CAACH,aAAa,EAAE5L,IAAI,EAAEmS,SAAS,CAAC;IACxD;EAAC;IAAA9c,GAAA;IAAAC,KAAA,EACD,SAAAojB,eAAA,EAAiB;MACf,IAAMlY,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAM6W,QAAQ,GAAG5Y,IAAI,CAACJ,IAAI;MAC1B,IAAIqY,KAAK,GAAG,CAAC;MACb,IAAIvvB,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkwB,QAAQ,CAACviB,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACpC,IAAMoM,KAAK,GAAGkL,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC;QAC7B,IAAIoM,KAAK,KAAK,IAAI,IAAI,CAAC0d,KAAK,CAAC1d,KAAK,CAAC,IAAI,IAAI,CAACE,KAAK,CAACme,iBAAiB,CAACzqB,CAAC,CAAC,IAAI,CAACkwB,QAAQ,CAAClwB,CAAC,CAAC,CAACohB,MAAM,EAAE;UAC7FmO,KAAK,IAAIriB,IAAI,CAACkY,GAAG,CAAChZ,KAAK,CAAC;QAC1B;MACF;MACA,OAAOmjB,KAAK;IACd;EAAC;IAAApjB,GAAA;IAAAC,KAAA,EACD,SAAAwjB,uBAAuBxjB,KAAK,EAAE;MAC5B,IAAMmjB,KAAK,GAAG,IAAI,CAAClW,WAAW,CAACkW,KAAK;MACpC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAACzF,KAAK,CAAC1d,KAAK,CAAC,EAAE;QAC9B,OAAOvK,GAAG,IAAIqL,IAAI,CAACkY,GAAG,CAAChZ,KAAK,CAAC,GAAGmjB,KAAK,CAAC;MACxC;MACA,OAAO,CAAC;IACV;EAAC;IAAApjB,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM/M,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6S,MAAM,GAAG7S,KAAK,CAAC4K,IAAI,CAACiI,MAAM,IAAI,EAAE;MACtC,IAAM/S,KAAK,GAAGrK,YAAY,CAACuV,IAAI,CAACqD,OAAO,CAAClE,KAAK,CAAC,EAAEnK,KAAK,CAACkI,OAAO,CAAC2b,MAAM,CAAC;MACrE,OAAO;QACLtP,KAAK,EAAE1B,MAAM,CAAC1I,KAAK,CAAC,IAAI,EAAE;QAC1BrK,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAuiB,kBAAkBF,IAAI,EAAE;MACtB,IAAMnhB,EAAE,GAAG,IAAI;MACf,IAAImC,GAAG,GAAG,CAAC;MACX,IAAMnD,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAItM,CAAC,EAAEwW,IAAI,EAAEc,IAAI,EAAE6B,UAAU,EAAE3E,OAAO;MACtC,IAAI,CAACia,IAAI,EAAE;QACT,KAAKzuB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlK,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;UAC5D,IAAIsM,KAAK,CAACkiB,gBAAgB,CAACxuB,CAAC,CAAC,EAAE;YAC7BsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC;YAC9ByuB,IAAI,GAAGnX,IAAI,CAACJ,IAAI;YAChBiC,UAAU,GAAG7B,IAAI,CAAC6B,UAAU;YAC5B,IAAIA,UAAU,KAAK7L,EAAE,EAAE;cACrB6L,UAAU,CAACpF,SAAS,CAAC,CAAC;YACxB;YACA;UACF;QACF;MACF;MACA,IAAI,CAAC0a,IAAI,EAAE;QACT,OAAO,CAAC;MACV;MACA,KAAKzuB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGiY,IAAI,CAAC9gB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7CwU,OAAO,GAAG2E,UAAU,CAACoI,yBAAyB,CAACvhB,CAAC,CAAC;QACjD,IAAIwU,OAAO,CAAC4b,WAAW,KAAK,OAAO,EAAE;UACnC3gB,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE+E,OAAO,CAAC6b,WAAW,IAAI,CAAC,EAAE7b,OAAO,CAAC8b,gBAAgB,IAAI,CAAC,CAAC;QAC9E;MACF;MACA,OAAO7gB,GAAG;IACZ;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAwiB,aAAaH,IAAI,EAAE;MACjB,IAAIhf,GAAG,GAAG,CAAC;MACX,KAAK,IAAIzP,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGiY,IAAI,CAAC9gB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAMwU,OAAO,GAAG,IAAI,CAAC+M,yBAAyB,CAACvhB,CAAC,CAAC;QACjDyP,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE+E,OAAO,CAAC0W,MAAM,IAAI,CAAC,EAAE1W,OAAO,CAAC+b,WAAW,IAAI,CAAC,CAAC;MACpE;MACA,OAAO9gB,GAAG;IACZ;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAqjB,qBAAqB1Y,YAAY,EAAE;MACjC,IAAIyZ,gBAAgB,GAAG,CAAC;MACxB,KAAK,IAAIxwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+W,YAAY,EAAE,EAAE/W,CAAC,EAAE;QACrC,IAAI,IAAI,CAACsM,KAAK,CAACkiB,gBAAgB,CAACxuB,CAAC,CAAC,EAAE;UAClCwwB,gBAAgB,IAAI,IAAI,CAACzB,cAAc,CAAC/uB,CAAC,CAAC;QAC5C;MACF;MACA,OAAOwwB,gBAAgB;IACzB;EAAC;IAAArkB,GAAA;IAAAC,KAAA,EACD,SAAA2iB,eAAehY,YAAY,EAAE;MAC3B,OAAO7J,IAAI,CAACuC,GAAG,CAACpP,cAAc,CAAC,IAAI,CAACiM,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC,CAAC0Z,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtF;EAAC;IAAAtkB,GAAA;IAAAC,KAAA,EACD,SAAAkjB,8BAAA,EAAgC;MAC9B,OAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAACnjB,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,CAAC,IAAI,CAAC;IACxE;EAAC;EAAA,OAAAogB,kBAAA;AAAA,EAvM8B7S,iBAAiB;AAyMlD6S,kBAAkB,CAACnW,EAAE,GAAG,UAAU;AAClCmW,kBAAkB,CAAChuB,QAAQ,GAAG;EAC5B8d,kBAAkB,EAAE,KAAK;EACzB6D,eAAe,EAAE,KAAK;EACtB3O,SAAS,EAAE;IACT4c,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDxc,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS;IACpI;EACF,CAAC;EACDsZ,MAAM,EAAE,KAAK;EACbF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE,MAAM;EACdsC,OAAO,EAAE,CAAC;EACV5R,SAAS,EAAE;AACb,CAAC;AACDiR,kBAAkB,CAACxnB,WAAW,GAAG;EAC/B4M,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,SAAS;EAAA;EACzCF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,SAAS;EAAA;AAC1C,CAAC;AACD2a,kBAAkB,CAAC9nB,SAAS,GAAG;EAC7ByqB,WAAW,EAAE,CAAC;EACdrE,OAAO,EAAE;IACPsE,MAAM,EAAE;MACNxR,MAAM,EAAE;QACNyR,cAAc,WAAAA,eAACtkB,KAAK,EAAE;UACpB,IAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAI;UACvB,IAAIA,IAAI,CAACiI,MAAM,CAACxR,MAAM,IAAIuJ,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE;YAC9C,IAAgBkjB,UAAU,GAAKvkB,KAAK,CAACqkB,MAAM,CAACnc,OAAO,CAA5C2K,MAAM,CAAG0R,UAAU;YAC1B,OAAO3Z,IAAI,CAACiI,MAAM,CAAC2R,GAAG,CAAC,UAACjQ,KAAK,EAAE7gB,CAAC,EAAK;cACnC,IAAMsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC,CAAC,CAAC;cACpC,IAAMyT,KAAK,GAAGzZ,IAAI,CAAC6B,UAAU,CAACkI,QAAQ,CAACrhB,CAAC,CAAC;cACzC,OAAO;gBACLgxB,IAAI,EAAEnQ,KAAK;gBACXoQ,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACV,WAAW;gBAC5BQ,UAAU,EAAEA,UAAU;gBACtBzP,MAAM,EAAE,CAAC9U,KAAK,CAACme,iBAAiB,CAACzqB,CAAC,CAAC;gBACnCyW,KAAK,EAAEzW;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDsxB,OAAO,WAAAA,QAAC5xB,CAAC,EAAE6xB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAACrkB,KAAK,CAACklB,oBAAoB,CAACD,UAAU,CAAC9a,KAAK,CAAC;QACnDka,MAAM,CAACrkB,KAAK,CAAC0F,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDsa,OAAO,EAAE;MACP5f,SAAS,EAAE;QACT6f,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD1L,KAAK,WAAAA,MAAC4Q,WAAW,EAAE;UACjB,IAAIC,SAAS,GAAGD,WAAW,CAAC5Q,KAAK;UACjC,IAAMzU,KAAK,GAAG,IAAI,GAAGqlB,WAAW,CAACE,cAAc;UAC/C,IAAIxxB,OAAO,CAACuxB,SAAS,CAAC,EAAE;YACtBA,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC;YAC7BF,SAAS,CAAC,CAAC,CAAC,IAAItlB,KAAK;UACvB,CAAC,MAAM;YACLslB,SAAS,IAAItlB,KAAK;UACpB;UACA,OAAOslB,SAAS;QAClB;MACF;IACF;EACF;AACF,CAAC;AAAC,IAEIG,cAAc,0BAAAC,mBAAA;EAAA3J,SAAA,CAAA0J,cAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA1J,YAAA,CAAAwJ,cAAA;EAAA,SAAAA,eAAA;IAAAlmB,eAAA,OAAAkmB,cAAA;IAAA,OAAAE,OAAA,CAAA5iB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA2lB,cAAA;IAAA1lB,GAAA;IAAAC,KAAA,EAClB,SAAA6P,WAAA,EAAa;MACX,IAAI,CAACH,mBAAmB,GAAG,IAAI;MAC/B8M,IAAA,CAAAC,eAAA,CAAAgJ,cAAA,CAAAnN,SAAA,uBAAAnX,IAAA;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAgB2Y,IAAI,GAAiC1a,IAAI,CAAlD+C,OAAO;QAAA4X,UAAA,GAAuC3a,IAAI,CAAnCJ,IAAI;QAAE2U,MAAM,GAAAoG,UAAA,cAAG,EAAE,GAAAA,UAAA;QAAEC,QAAQ,GAAI5a,IAAI,CAAhB4a,QAAQ;MACjD,IAAMC,kBAAkB,GAAG7kB,EAAE,CAAChB,KAAK,CAACqW,mBAAmB;MACvD,IAAAyP,qBAAA,GAAqBC,+BAA+B,CAAC/a,IAAI,EAAEuU,MAAM,EAAEsG,kBAAkB,CAAC;QAAjF/kB,KAAK,GAAAglB,qBAAA,CAALhlB,KAAK;QAAEuR,KAAK,GAAAyT,qBAAA,CAALzT,KAAK;MACjBrR,EAAE,CAACsO,UAAU,GAAGxO,KAAK;MACrBE,EAAE,CAACuO,UAAU,GAAG8C,KAAK;MACrB,IAAI2T,kBAAkB,CAAChb,IAAI,CAAC,EAAE;QAC5BlK,KAAK,GAAG,CAAC;QACTuR,KAAK,GAAGkN,MAAM,CAACle,MAAM;MACvB;MACAqkB,IAAI,CAACO,aAAa,GAAGjlB,EAAE,CAACmJ,KAAK;MAC7Bub,IAAI,CAACQ,UAAU,GAAG,CAAC,CAACN,QAAQ,CAACM,UAAU;MACvCR,IAAI,CAACnG,MAAM,GAAGA,MAAM;MACpB,IAAMrX,OAAO,GAAGlH,EAAE,CAACgU,4BAA4B,CAACxK,IAAI,CAAC;MACrD,IAAI,CAACxJ,EAAE,CAACkH,OAAO,CAACie,QAAQ,EAAE;QACxBje,OAAO,CAAC6b,WAAW,GAAG,CAAC;MACzB;MACA7b,OAAO,CAACke,OAAO,GAAGplB,EAAE,CAACkH,OAAO,CAACke,OAAO;MACpCplB,EAAE,CAACsV,aAAa,CAACoP,IAAI,EAAE/lB,SAAS,EAAE;QAChC0mB,QAAQ,EAAE,CAACR,kBAAkB;QAC7B3d,OAAO,EAAPA;MACF,CAAC,EAAEsC,IAAI,CAAC;MACRxJ,EAAE,CAACyW,cAAc,CAAC8H,MAAM,EAAEze,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,CAAC;IAC/C;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe8H,MAAM,EAAEze,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAA8b,gBAAA,GAAmCtlB,EAAE,CAAC+L,WAAW;QAA1CE,MAAM,GAAAqZ,gBAAA,CAANrZ,MAAM;QAAEb,MAAM,GAAAka,gBAAA,CAANla,MAAM;QAAEyD,QAAQ,GAAAyW,gBAAA,CAARzW,QAAQ;MAC/B,IAAM8M,SAAS,GAAG3b,EAAE,CAACiU,yBAAyB,CAACnU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM4L,aAAa,GAAGpV,EAAE,CAACkV,gBAAgB,CAACyG,SAAS,CAAC;MACpD,IAAMxG,cAAc,GAAGnV,EAAE,CAACmV,cAAc,CAAC3L,IAAI,EAAE4L,aAAa,CAAC;MAC7D,IAAMlJ,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,IAAMoZ,QAAQ,GAAGvlB,EAAE,CAACkH,OAAO,CAACqe,QAAQ;MACpC,IAAMC,YAAY,GAAGvwB,QAAQ,CAACswB,QAAQ,CAAC,GAAGA,QAAQ,GAAG5a,MAAM,CAACE,iBAAiB;MAC7E,IAAM4a,YAAY,GAAGzlB,EAAE,CAAChB,KAAK,CAACqW,mBAAmB,IAAIlF,KAAK,IAAI3G,IAAI,KAAK,MAAM;MAC7E,IAAIkc,UAAU,GAAG5lB,KAAK,GAAG,CAAC,IAAIE,EAAE,CAACuS,SAAS,CAACzS,KAAK,GAAG,CAAC,CAAC;MACrD,KAAK,IAAIpN,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QAC1C,IAAM+rB,KAAK,GAAGF,MAAM,CAAC7rB,CAAC,CAAC;QACvB,IAAMoZ,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QAC9B,IAAMqT,UAAU,GAAG0f,YAAY,GAAGhH,KAAK,GAAG,CAAC,CAAC;QAC5C,IAAMkH,QAAQ,GAAG9xB,aAAa,CAACiY,MAAM,CAACM,KAAK,CAAC,CAAC;QAC7C,IAAMsS,MAAM,GAAG3Y,UAAU,CAACmG,KAAK,CAAC,GAAGD,MAAM,CAAC8L,gBAAgB,CAACjM,MAAM,CAACI,KAAK,CAAC,EAAExZ,CAAC,CAAC;QAC5E,IAAMksB,MAAM,GAAG7Y,UAAU,CAACqG,KAAK,CAAC,GAAG+D,KAAK,IAAIwV,QAAQ,GAAGva,MAAM,CAACqQ,YAAY,CAAC,CAAC,GAAGrQ,MAAM,CAAC2M,gBAAgB,CAAClJ,QAAQ,GAAG7O,EAAE,CAACoJ,UAAU,CAACgC,MAAM,EAAEU,MAAM,EAAE+C,QAAQ,CAAC,GAAG/C,MAAM,CAACM,KAAK,CAAC,EAAE1Z,CAAC,CAAC;QAC7KqT,UAAU,CAAC8Y,IAAI,GAAGrC,KAAK,CAACkC,MAAM,CAAC,IAAIlC,KAAK,CAACoC,MAAM,CAAC,IAAI+G,QAAQ;QAC5D5f,UAAU,CAAC1D,IAAI,GAAG3P,CAAC,GAAG,CAAC,IAAKoZ,MAAM,CAACI,KAAK,CAAC,GAAGwZ,UAAU,CAACxZ,KAAK,CAAC,GAAIsZ,YAAY;QAC7Ezf,UAAU,CAAC+F,MAAM,GAAGA,MAAM;QAC1B,IAAIqJ,cAAc,EAAE;UAClBpP,UAAU,CAACmB,OAAO,GAAGkO,aAAa,IAAIpV,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAE+rB,KAAK,CAACha,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACvG;QACA,IAAI,CAACic,YAAY,EAAE;UACjBzlB,EAAE,CAACsV,aAAa,CAACmJ,KAAK,EAAE/rB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;QAC9C;QACAkc,UAAU,GAAG5Z,MAAM;MACrB;MACA9L,EAAE,CAACuV,mBAAmB,CAACH,aAAa,EAAE5L,IAAI,EAAEmS,SAAS,CAAC;IACxD;EAAC;IAAA9c,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,IAAMrT,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/C,IAAI,CAAC+C,OAAO;MAC5B,IAAM6Y,MAAM,GAAG7Y,OAAO,CAAC7F,OAAO,IAAI6F,OAAO,CAAC7F,OAAO,CAAC6b,WAAW,IAAI,CAAC;MAClE,IAAMnZ,IAAI,GAAGI,IAAI,CAACJ,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACA,IAAI,CAACvJ,MAAM,EAAE;QAChB,OAAOulB,MAAM;MACf;MACA,IAAMC,UAAU,GAAGjc,IAAI,CAAC,CAAC,CAAC,CAACjC,IAAI,CAAC3H,EAAE,CAACiU,yBAAyB,CAAC,CAAC,CAAC,CAAC;MAChE,IAAM6R,SAAS,GAAGlc,IAAI,CAACA,IAAI,CAACvJ,MAAM,GAAG,CAAC,CAAC,CAACsH,IAAI,CAAC3H,EAAE,CAACiU,yBAAyB,CAACrK,IAAI,CAACvJ,MAAM,GAAG,CAAC,CAAC,CAAC;MAC3F,OAAOT,IAAI,CAACuC,GAAG,CAACyjB,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,CAAC;IACpD;EAAC;IAAAjnB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMqJ,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B/B,IAAI,CAAC+C,OAAO,CAACgZ,mBAAmB,CAAC,IAAI,CAAC/mB,KAAK,CAAC6U,SAAS,EAAE7J,IAAI,CAACiC,MAAM,CAACE,IAAI,CAAC;MACxEmP,IAAA,CAAAC,eAAA,CAAAgJ,cAAA,CAAAnN,SAAA,iBAAAnX,IAAA;IACF;EAAC;EAAA,OAAAskB,cAAA;AAAA,EAjF0B3W,iBAAiB;AAmF9C2W,cAAc,CAACja,EAAE,GAAG,MAAM;AAC1Bia,cAAc,CAAC9xB,QAAQ,GAAG;EACxB8d,kBAAkB,EAAE,MAAM;EAC1B6D,eAAe,EAAE,OAAO;EACxB+Q,QAAQ,EAAE,IAAI;EACdI,QAAQ,EAAE;AACZ,CAAC;AACDhB,cAAc,CAAC5rB,SAAS,GAAG;EACzB8T,MAAM,EAAE;IACNkR,OAAO,EAAE;MACPxe,IAAI,EAAE;IACR,CAAC;IACD2e,OAAO,EAAE;MACP3e,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACD,SAAS4lB,+BAA+BA,CAAC/a,IAAI,EAAEuU,MAAM,EAAEsG,kBAAkB,EAAE;EACzE,IAAMmB,UAAU,GAAGzH,MAAM,CAACle,MAAM;EAChC,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIuR,KAAK,GAAG2U,UAAU;EACtB,IAAIhc,IAAI,CAACuH,OAAO,EAAE;IAChB,IAAOtF,MAAM,GAAajC,IAAI,CAAvBiC,MAAM;MAAEoB,OAAO,GAAIrD,IAAI,CAAfqD,OAAO;IACtB,IAAMlB,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,IAAA8Z,qBAAA,GAA2Cha,MAAM,CAAC1B,aAAa,CAAC,CAAC;MAA1D1K,GAAG,GAAAomB,qBAAA,CAAHpmB,GAAG;MAAEsC,GAAG,GAAA8jB,qBAAA,CAAH9jB,GAAG;MAAEsI,UAAU,GAAAwb,qBAAA,CAAVxb,UAAU;MAAEC,UAAU,GAAAub,qBAAA,CAAVvb,UAAU;IACvC,IAAID,UAAU,EAAE;MACd3K,KAAK,GAAG3K,WAAW,CAACyK,IAAI,CAACC,GAAG,CAC1BxK,YAAY,CAACgY,OAAO,EAAEpB,MAAM,CAACE,IAAI,EAAEtM,GAAG,CAAC,CAACqmB,EAAE,EAC1CrB,kBAAkB,GAAGmB,UAAU,GAAG3wB,YAAY,CAACkpB,MAAM,EAAEpS,IAAI,EAAEF,MAAM,CAAC8L,gBAAgB,CAAClY,GAAG,CAAC,CAAC,CAACqmB,EAAE,CAAC,EAChG,CAAC,EAAEF,UAAU,GAAG,CAAC,CAAC;IACpB;IACA,IAAItb,UAAU,EAAE;MACd2G,KAAK,GAAGlc,WAAW,CAACyK,IAAI,CAACuC,GAAG,CAC1B9M,YAAY,CAACgY,OAAO,EAAEpB,MAAM,CAACE,IAAI,EAAEhK,GAAG,CAAC,CAACgkB,EAAE,GAAG,CAAC,EAC9CtB,kBAAkB,GAAG,CAAC,GAAGxvB,YAAY,CAACkpB,MAAM,EAAEpS,IAAI,EAAEF,MAAM,CAAC8L,gBAAgB,CAAC5V,GAAG,CAAC,CAAC,CAACgkB,EAAE,GAAG,CAAC,CAAC,EAC3FrmB,KAAK,EAAEkmB,UAAU,CAAC,GAAGlmB,KAAK;IAC5B,CAAC,MAAM;MACLuR,KAAK,GAAG2U,UAAU,GAAGlmB,KAAK;IAC5B;EACF;EACA,OAAO;IAACA,KAAK,EAALA,KAAK;IAAEuR,KAAK,EAALA;EAAK,CAAC;AACvB;AACA,SAAS2T,kBAAkBA,CAAChb,IAAI,EAAE;EAChC,IAAO1B,MAAM,GAA0B0B,IAAI,CAApC1B,MAAM;IAAEC,MAAM,GAAkByB,IAAI,CAA5BzB,MAAM;IAAE6d,YAAY,GAAIpc,IAAI,CAApBoc,YAAY;EACnC,IAAMC,SAAS,GAAG;IAChBC,IAAI,EAAEhe,MAAM,CAACzI,GAAG;IAChB0mB,IAAI,EAAEje,MAAM,CAACnG,GAAG;IAChBqkB,IAAI,EAAEje,MAAM,CAAC1I,GAAG;IAChB4mB,IAAI,EAAEle,MAAM,CAACpG;EACf,CAAC;EACD,IAAI,CAACikB,YAAY,EAAE;IACjBpc,IAAI,CAACoc,YAAY,GAAGC,SAAS;IAC7B,OAAO,IAAI;EACb;EACA,IAAMK,OAAO,GAAGN,YAAY,CAACE,IAAI,KAAKhe,MAAM,CAACzI,GAAG,IAC7CumB,YAAY,CAACG,IAAI,KAAKje,MAAM,CAACnG,GAAG,IAChCikB,YAAY,CAACI,IAAI,KAAKje,MAAM,CAAC1I,GAAG,IAChCumB,YAAY,CAACK,IAAI,KAAKle,MAAM,CAACpG,GAAG;EACnCoD,MAAM,CAACqC,MAAM,CAACwe,YAAY,EAAEC,SAAS,CAAC;EACtC,OAAOK,OAAO;AAChB;AAAC,IAEKC,mBAAmB,0BAAAC,mBAAA;EAAA/L,SAAA,CAAA8L,mBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA9L,YAAA,CAAA4L,mBAAA;EACvB,SAAAA,oBAAY3nB,KAAK,EAAEyK,YAAY,EAAE;IAAA,IAAAqd,MAAA;IAAAzoB,eAAA,OAAAsoB,mBAAA;IAC/BG,MAAA,GAAAD,OAAA,CAAA5mB,IAAA,OAAMjB,KAAK,EAAEyK,YAAY;IACzBqd,MAAA,CAAKjG,WAAW,GAAGliB,SAAS;IAC5BmoB,MAAA,CAAKhG,WAAW,GAAGniB,SAAS;IAAC,OAAAmoB,MAAA;EAC/B;EAACloB,YAAA,CAAA+nB,mBAAA;IAAA9nB,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM/M,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6S,MAAM,GAAG7S,KAAK,CAAC4K,IAAI,CAACiI,MAAM,IAAI,EAAE;MACtC,IAAM/S,KAAK,GAAGrK,YAAY,CAACuV,IAAI,CAACqD,OAAO,CAAClE,KAAK,CAAC,CAACnX,CAAC,EAAEgN,KAAK,CAACkI,OAAO,CAAC2b,MAAM,CAAC;MACvE,OAAO;QACLtP,KAAK,EAAE1B,MAAM,CAAC1I,KAAK,CAAC,IAAI,EAAE;QAC1BrK,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAM2X,IAAI,GAAG,IAAI,CAACpV,WAAW,CAACnC,IAAI;MAClC,IAAI,CAACmd,aAAa,CAAC,CAAC;MACpB,IAAI,CAACtQ,cAAc,CAAC0K,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC9gB,MAAM,EAAEmJ,IAAI,CAAC;IACjD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAioB,cAAA,EAAgB;MACd,IAAM/mB,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6U,SAAS,GAAG7U,KAAK,CAAC6U,SAAS;MACjC,IAAM3L,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAM8f,OAAO,GAAGpnB,IAAI,CAACC,GAAG,CAACgU,SAAS,CAACpL,KAAK,GAAGoL,SAAS,CAAClL,IAAI,EAAEkL,SAAS,CAACnL,MAAM,GAAGmL,SAAS,CAACrL,GAAG,CAAC;MAC5F,IAAMsY,WAAW,GAAGlhB,IAAI,CAACuC,GAAG,CAAC6kB,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;MAC5C,IAAMnG,WAAW,GAAGjhB,IAAI,CAACuC,GAAG,CAAC+F,IAAI,CAAC+e,gBAAgB,GAAInG,WAAW,GAAG,GAAG,GAAK5Y,IAAI,CAAC+e,gBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC;MAC1G,IAAMlF,YAAY,GAAG,CAACjB,WAAW,GAAGD,WAAW,IAAI7hB,KAAK,CAACkoB,sBAAsB,CAAC,CAAC;MACjFlnB,EAAE,CAAC8gB,WAAW,GAAGA,WAAW,GAAIiB,YAAY,GAAG/hB,EAAE,CAACmJ,KAAM;MACxDnJ,EAAE,CAAC6gB,WAAW,GAAG7gB,EAAE,CAAC8gB,WAAW,GAAGiB,YAAY;IAChD;EAAC;IAAAljB,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe0K,IAAI,EAAErhB,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAMxK,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM+N,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAM9G,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAMqb,aAAa,GAAGra,IAAI,CAACzC,SAAS;MACpC,IAAMuC,KAAK,GAAGhI,EAAE,CAAC+L,WAAW,CAAC+D,MAAM;MACnC,IAAM0S,OAAO,GAAGxa,KAAK,CAACmf,OAAO;MAC7B,IAAM1E,OAAO,GAAGza,KAAK,CAACof,OAAO;MAC7B,IAAMC,iBAAiB,GAAGrf,KAAK,CAACsf,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGvyB,EAAE;MAC3D,IAAIorB,KAAK,GAAGkH,iBAAiB;MAC7B,IAAI30B,CAAC;MACL,IAAM60B,YAAY,GAAG,GAAG,GAAGvnB,EAAE,CAACwnB,oBAAoB,CAAC,CAAC;MACpD,KAAK90B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoN,KAAK,EAAE,EAAEpN,CAAC,EAAE;QAC1BytB,KAAK,IAAIngB,EAAE,CAACynB,aAAa,CAAC/0B,CAAC,EAAE8W,IAAI,EAAE+d,YAAY,CAAC;MAClD;MACA,KAAK70B,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QACtC,IAAMiwB,GAAG,GAAGxB,IAAI,CAACzuB,CAAC,CAAC;QACnB,IAAIgtB,UAAU,GAAGS,KAAK;QACtB,IAAIR,QAAQ,GAAGQ,KAAK,GAAGngB,EAAE,CAACynB,aAAa,CAAC/0B,CAAC,EAAE8W,IAAI,EAAE+d,YAAY,CAAC;QAC9D,IAAIzG,WAAW,GAAG9hB,KAAK,CAACme,iBAAiB,CAACzqB,CAAC,CAAC,GAAGsV,KAAK,CAAC0f,6BAA6B,CAAC3a,OAAO,CAACnD,IAAI,CAAClX,CAAC,CAAC,CAAC,GAAG,CAAC;QACvGytB,KAAK,GAAGR,QAAQ;QAChB,IAAIxP,KAAK,EAAE;UACT,IAAIoS,aAAa,CAACG,YAAY,EAAE;YAC9B5B,WAAW,GAAG,CAAC;UACjB;UACA,IAAIyB,aAAa,CAACF,aAAa,EAAE;YAC/B3C,UAAU,GAAGC,QAAQ,GAAG0H,iBAAiB;UAC3C;QACF;QACA,IAAMthB,UAAU,GAAG;UACjBzQ,CAAC,EAAEktB,OAAO;UACVhtB,CAAC,EAAEitB,OAAO;UACV5B,WAAW,EAAE,CAAC;UACdC,WAAW,EAAXA,WAAW;UACXpB,UAAU,EAAVA,UAAU;UACVC,QAAQ,EAARA,QAAQ;UACRzY,OAAO,EAAElH,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAEiwB,GAAG,CAACle,MAAM,GAAG,QAAQ,GAAG+E,IAAI;QACvE,CAAC;QACDxJ,EAAE,CAACsV,aAAa,CAACqN,GAAG,EAAEjwB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC5C;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA0oB,qBAAA,EAAuB;MAAA,IAAAG,MAAA;MACrB,IAAM5a,OAAO,GAAG,IAAI,CAACiC,UAAU,CAAC,CAAC;MACjC,IAAMhF,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAIsF,KAAK,GAAG,CAAC;MACbrH,IAAI,CAACJ,IAAI,CAACpK,OAAO,CAAC,UAACyN,OAAO,EAAE9D,KAAK,EAAK;QACpC,IAAI,CAACqT,KAAK,CAACzP,OAAO,CAACnD,IAAI,CAACT,KAAK,CAAC,CAAC,IAAIwe,MAAI,CAAC3oB,KAAK,CAACme,iBAAiB,CAAChU,KAAK,CAAC,EAAE;UACtEkI,KAAK,EAAE;QACT;MACF,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA2oB,cAActe,KAAK,EAAEK,IAAI,EAAE+d,YAAY,EAAE;MACvC,OAAO,IAAI,CAACvoB,KAAK,CAACme,iBAAiB,CAAChU,KAAK,CAAC,GACtClV,SAAS,CAAC,IAAI,CAACggB,yBAAyB,CAAC9K,KAAK,EAAEK,IAAI,CAAC,CAAC2W,KAAK,IAAIoH,YAAY,CAAC,GAC5E,CAAC;IACP;EAAC;EAAA,OAAAZ,mBAAA;AAAA,EA5F+B/Y,iBAAiB;AA8FnD+Y,mBAAmB,CAACrc,EAAE,GAAG,WAAW;AACpCqc,mBAAmB,CAACl0B,QAAQ,GAAG;EAC7B2hB,eAAe,EAAE,KAAK;EACtB3O,SAAS,EAAE;IACT4c,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDxc,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa;IAC/E;EACF,CAAC;EACDyJ,SAAS,EAAE,GAAG;EACdkQ,UAAU,EAAE;AACd,CAAC;AACDiH,mBAAmB,CAAChuB,SAAS,GAAG;EAC9ByqB,WAAW,EAAE,CAAC;EACdrE,OAAO,EAAE;IACPsE,MAAM,EAAE;MACNxR,MAAM,EAAE;QACNyR,cAAc,WAAAA,eAACtkB,KAAK,EAAE;UACpB,IAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAI;UACvB,IAAIA,IAAI,CAACiI,MAAM,CAACxR,MAAM,IAAIuJ,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE;YAC9C,IAAgBkjB,UAAU,GAAKvkB,KAAK,CAACqkB,MAAM,CAACnc,OAAO,CAA5C2K,MAAM,CAAG0R,UAAU;YAC1B,OAAO3Z,IAAI,CAACiI,MAAM,CAAC2R,GAAG,CAAC,UAACjQ,KAAK,EAAE7gB,CAAC,EAAK;cACnC,IAAMsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC,CAAC,CAAC;cACpC,IAAMyT,KAAK,GAAGzZ,IAAI,CAAC6B,UAAU,CAACkI,QAAQ,CAACrhB,CAAC,CAAC;cACzC,OAAO;gBACLgxB,IAAI,EAAEnQ,KAAK;gBACXoQ,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACV,WAAW;gBAC5BQ,UAAU,EAAEA,UAAU;gBACtBzP,MAAM,EAAE,CAAC9U,KAAK,CAACme,iBAAiB,CAACzqB,CAAC,CAAC;gBACnCyW,KAAK,EAAEzW;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDsxB,OAAO,WAAAA,QAAC5xB,CAAC,EAAE6xB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAACrkB,KAAK,CAACklB,oBAAoB,CAACD,UAAU,CAAC9a,KAAK,CAAC;QACnDka,MAAM,CAACrkB,KAAK,CAAC0F,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDsa,OAAO,EAAE;MACP5f,SAAS,EAAE;QACT6f,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD1L,KAAK,WAAAA,MAACW,OAAO,EAAE;UACb,OAAOA,OAAO,CAAClV,KAAK,CAAC4K,IAAI,CAACiI,MAAM,CAACqC,OAAO,CAAChH,SAAS,CAAC,GAAG,IAAI,GAAGgH,OAAO,CAACmQ,cAAc;QACrF;MACF;IACF;EACF,CAAC;EACD5X,MAAM,EAAE;IACNza,CAAC,EAAE;MACDmN,IAAI,EAAE,cAAc;MACpByoB,UAAU,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACD9J,WAAW,EAAE,IAAI;MACjBF,IAAI,EAAE;QACJiK,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;QACXF,OAAO,EAAE;MACX,CAAC;MACDnI,UAAU,EAAE;IACd;EACF;AACF,CAAC;AAAC,IAEIsI,aAAa,0BAAAC,mBAAA;EAAApN,SAAA,CAAAmN,aAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAnN,YAAA,CAAAiN,aAAA;EAAA,SAAAA,cAAA;IAAA3pB,eAAA,OAAA2pB,aAAA;IAAA,OAAAE,OAAA,CAAArmB,KAAA,OAAAzB,SAAA;EAAA;EAAA,OAAAxB,YAAA,CAAAopB,aAAA;AAAA,EAASvH,kBAAkB;AAE9CuH,aAAa,CAAC1d,EAAE,GAAG,KAAK;AACxB0d,aAAa,CAACv1B,QAAQ,GAAG;EACvB4sB,MAAM,EAAE,CAAC;EACTF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE;AACV,CAAC;AAAC,IAEIqJ,eAAe,0BAAAC,mBAAA;EAAAvN,SAAA,CAAAsN,eAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAtN,YAAA,CAAAoN,eAAA;EAAA,SAAAA,gBAAA;IAAA9pB,eAAA,OAAA8pB,eAAA;IAAA,OAAAE,OAAA,CAAAxmB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAupB,eAAA;IAAAtpB,GAAA;IAAAC,KAAA,EACnB,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMoL,MAAM,GAAGpL,EAAE,CAAC+L,WAAW,CAACX,MAAM;MACpC,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,OAAO;QACLoK,KAAK,EAAEnI,MAAM,CAAC0G,SAAS,CAAC,CAAC,CAAC3I,KAAK,CAAC;QAChCrK,KAAK,EAAE,EAAE,GAAGsM,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC;MACzD,CAAC;IACH;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM2Y,IAAI,GAAG1a,IAAI,CAAC+C,OAAO;MACzB,IAAMwR,MAAM,GAAGvU,IAAI,CAACJ,IAAI,IAAI,EAAE;MAC9B,IAAMiI,MAAM,GAAG7H,IAAI,CAACiC,MAAM,CAAC6F,SAAS,CAAC,CAAC;MACtC4S,IAAI,CAACnG,MAAM,GAAGA,MAAM;MACpB,IAAI/U,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAMtC,OAAO,GAAGlH,EAAE,CAACgU,4BAA4B,CAACxK,IAAI,CAAC;QACrD,IAAI,CAACxJ,EAAE,CAACkH,OAAO,CAACie,QAAQ,EAAE;UACxBje,OAAO,CAAC6b,WAAW,GAAG,CAAC;QACzB;QACA,IAAMhd,UAAU,GAAG;UACjB7B,KAAK,EAAE,IAAI;UACXokB,SAAS,EAAEzW,MAAM,CAACxR,MAAM,KAAKke,MAAM,CAACle,MAAM;UAC1C6G,OAAO,EAAPA;QACF,CAAC;QACDlH,EAAE,CAACsV,aAAa,CAACoP,IAAI,EAAE/lB,SAAS,EAAEoH,UAAU,EAAEyD,IAAI,CAAC;MACrD;MACAxJ,EAAE,CAACyW,cAAc,CAAC8H,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACle,MAAM,EAAEmJ,IAAI,CAAC;IACnD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2X,eAAe8H,MAAM,EAAEze,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,CAAC,CAAC;MAC/B,IAAMhH,KAAK,GAAGhI,EAAE,CAAC+L,WAAW,CAAC+D,MAAM;MACnC,IAAMK,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,KAAK,IAAI9W,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAM+rB,KAAK,GAAGF,MAAM,CAAC7rB,CAAC,CAAC;QACvB,IAAMwU,OAAO,GAAGlH,EAAE,CAACiU,yBAAyB,CAACvhB,CAAC,EAAE+rB,KAAK,CAACha,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QAC/E,IAAM+e,aAAa,GAAGvgB,KAAK,CAACwgB,wBAAwB,CAAC91B,CAAC,EAAEqa,OAAO,CAACnD,IAAI,CAAClX,CAAC,CAAC,CAAC;QACxE,IAAM4C,CAAC,GAAG6a,KAAK,GAAGnI,KAAK,CAACmf,OAAO,GAAGoB,aAAa,CAACjzB,CAAC;QACjD,IAAME,CAAC,GAAG2a,KAAK,GAAGnI,KAAK,CAACof,OAAO,GAAGmB,aAAa,CAAC/yB,CAAC;QACjD,IAAMuQ,UAAU,GAAG;UACjBzQ,CAAC,EAADA,CAAC;UACDE,CAAC,EAADA,CAAC;UACD2qB,KAAK,EAAEoI,aAAa,CAACpI,KAAK;UAC1BtB,IAAI,EAAErC,KAAK,CAAClnB,CAAC,CAAC,IAAIknB,KAAK,CAAChnB,CAAC,CAAC;UAC1B0R,OAAO,EAAPA;QACF,CAAC;QACDlH,EAAE,CAACsV,aAAa,CAACmJ,KAAK,EAAE/rB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC9C;IACF;EAAC;EAAA,OAAA2e,eAAA;AAAA,EAnD2Bva,iBAAiB;AAqD/Cua,eAAe,CAAC7d,EAAE,GAAG,OAAO;AAC5B6d,eAAe,CAAC11B,QAAQ,GAAG;EACzB8d,kBAAkB,EAAE,MAAM;EAC1B6D,eAAe,EAAE,OAAO;EACxB5E,SAAS,EAAE,GAAG;EACd2V,QAAQ,EAAE,IAAI;EACdxR,QAAQ,EAAE;IACR+Q,IAAI,EAAE;MACJ+D,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACDN,eAAe,CAACxvB,SAAS,GAAG;EAC1ByqB,WAAW,EAAE,CAAC;EACd3W,MAAM,EAAE;IACNza,CAAC,EAAE;MACDmN,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAAC,IAEIupB,iBAAiB,0BAAAC,eAAA;EAAA9N,SAAA,CAAA6N,iBAAA,EAAAC,eAAA;EAAA,IAAAC,OAAA,GAAA7N,YAAA,CAAA2N,iBAAA;EAAA,SAAAA,kBAAA;IAAArqB,eAAA,OAAAqqB,iBAAA;IAAA,OAAAE,OAAA,CAAA/mB,KAAA,OAAAzB,SAAA;EAAA;EAAA,OAAAxB,YAAA,CAAA8pB,iBAAA;AAAA,EAASnE,cAAc;AAE9CmE,iBAAiB,CAACpe,EAAE,GAAG,SAAS;AAChCoe,iBAAiB,CAACj2B,QAAQ,GAAG;EAC3B0yB,QAAQ,EAAE,KAAK;EACfsD,IAAI,EAAE;AACR,CAAC;AACDC,iBAAiB,CAAC/vB,SAAS,GAAG;EAC5BkwB,WAAW,EAAE;IACXrf,IAAI,EAAE;EACR,CAAC;EACDuV,OAAO,EAAE;IACPC,OAAO,EAAE;MACP5f,SAAS,EAAE;QACT6f,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD1L,KAAK,WAAAA,MAAC3S,IAAI,EAAE;UACV,OAAO,GAAG,GAAGA,IAAI,CAAC2S,KAAK,GAAG,IAAI,GAAG3S,IAAI,CAACyjB,cAAc,GAAG,GAAG;QAC5D;MACF;IACF;EACF,CAAC;EACD5X,MAAM,EAAE;IACNnX,CAAC,EAAE;MACD6J,IAAI,EAAE;IACR,CAAC;IACD3J,CAAC,EAAE;MACD2J,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,IAAI2pB,WAAW,GAAG,aAAavjB,MAAM,CAACsP,MAAM,CAAC;EAC7CkU,SAAS,EAAE,IAAI;EACfpO,aAAa,EAAEA,aAAa;EAC5BqD,gBAAgB,EAAEA,gBAAgB;EAClCyC,kBAAkB,EAAEA,kBAAkB;EACtC8D,cAAc,EAAEA,cAAc;EAC9BoC,mBAAmB,EAAEA,mBAAmB;EACxCqB,aAAa,EAAEA,aAAa;EAC5BG,eAAe,EAAEA,eAAe;EAChCO,iBAAiB,EAAEA;AACnB,CAAC,CAAC;AAEF,SAASM,QAAQA,CAAA,EAAG;EAClB,MAAM,IAAIC,KAAK,CAAC,iFAAiF,CAAC;AACpG;AAAC,IACKC,WAAW;EACf,SAAAA,YAAYhiB,OAAO,EAAE;IAAA7I,eAAA,OAAA6qB,WAAA;IACnB,IAAI,CAAChiB,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC9B;EAACtI,YAAA,CAAAsqB,WAAA;IAAArqB,GAAA;IAAAC,KAAA,EACD,SAAAqqB,QAAA,EAAU;MACR,OAAOH,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMtS,KAAK,EAAEsqB,MAAM,EAAE;MACnB,OAAOJ,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAAsqB,OAAOC,SAAS,EAAED,OAAM,EAAE;MACxB,OAAOJ,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAI0nB,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;MAC3B,OAAOP,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAA0qB,KAAKt3B,CAAC,EAAEU,CAAC,EAAE22B,IAAI,EAAE;MACf,OAAOP,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAA2qB,QAAQJ,SAAS,EAAEE,IAAI,EAAEG,OAAO,EAAE;MAChC,OAAOV,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAnqB,GAAA;IAAAC,KAAA,EACD,SAAA6qB,MAAMN,SAAS,EAAEE,IAAI,EAAE;MACrB,OAAOP,QAAQ,CAAC,CAAC;IACnB;EAAC;EAAA,OAAAE,WAAA;AAAA;AAEHA,WAAW,CAACU,QAAQ,GAAG,UAASC,OAAO,EAAE;EACvCtkB,MAAM,CAACqC,MAAM,CAACshB,WAAW,CAAC9R,SAAS,EAAEyS,OAAO,CAAC;AAC/C,CAAC;AACD,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAEb;AACT,CAAC;AAED,SAASc,mBAAmBA,CAAC53B,CAAC,EAAE4M,KAAK,EAAE;EACrC,IAAI,QAAQ,IAAI5M,CAAC,EAAE;IACjB,OAAO;MACLkD,CAAC,EAAElD,CAAC,CAACkD,CAAC;MACNE,CAAC,EAAEpD,CAAC,CAACoD;IACP,CAAC;EACH;EACA,OAAOD,qBAAqB,CAACnD,CAAC,EAAE4M,KAAK,CAAC;AACxC;AACA,SAASirB,uBAAuBA,CAACjrB,KAAK,EAAEkrB,OAAO,EAAE;EAC/C,IAAMlhB,QAAQ,GAAGhK,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;EACrD,IAAIhhB,KAAK,EAAES,IAAI,EAAEqD,OAAO;EACxB,KAAK,IAAIva,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAAA,IAAA03B,WAAA,GACpCphB,QAAQ,CAACtW,CAAC,CAAC;IAA1ByW,KAAK,GAAAihB,WAAA,CAALjhB,KAAK;IAAES,IAAI,GAAAwgB,WAAA,CAAJxgB,IAAI;IACb,KAAK,IAAIhW,CAAC,GAAG,CAAC,EAAEy2B,IAAI,GAAGzgB,IAAI,CAACvJ,MAAM,EAAEzM,CAAC,GAAGy2B,IAAI,EAAE,EAAEz2B,CAAC,EAAE;MACjDqZ,OAAO,GAAGrD,IAAI,CAAChW,CAAC,CAAC;MACjB,IAAI,CAACqZ,OAAO,CAAC4R,IAAI,EAAE;QACjBqL,OAAO,CAACjd,OAAO,EAAE9D,KAAK,EAAEvV,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAAS02B,YAAYA,CAACC,OAAO,EAAEpe,IAAI,EAAErN,KAAK,EAAE0rB,SAAS,EAAE;EACrD,IAAO3e,UAAU,GAAmB0e,OAAO,CAApC1e,UAAU;IAAEjC,IAAI,GAAa2gB,OAAO,CAAxB3gB,IAAI;IAAE2H,OAAO,GAAIgZ,OAAO,CAAlBhZ,OAAO;EAChC,IAAMtF,MAAM,GAAGJ,UAAU,CAACE,WAAW,CAACE,MAAM;EAC5C,IAAIA,MAAM,IAAIE,IAAI,KAAKF,MAAM,CAACE,IAAI,IAAIoF,OAAO,IAAI3H,IAAI,CAACvJ,MAAM,EAAE;IAC5D,IAAMoqB,YAAY,GAAGxe,MAAM,CAACye,cAAc,GAAG/0B,aAAa,GAAGN,YAAY;IACzE,IAAI,CAACm1B,SAAS,EAAE;MACd,OAAOC,YAAY,CAAC7gB,IAAI,EAAEuC,IAAI,EAAErN,KAAK,CAAC;IACxC,CAAC,MAAM,IAAI+M,UAAU,CAACwC,cAAc,EAAE;MACpC,IAAMsc,EAAE,GAAG/gB,IAAI,CAAC,CAAC,CAAC;MAClB,IAAM8I,KAAK,GAAG,OAAOiY,EAAE,CAACC,QAAQ,KAAK,UAAU,IAAID,EAAE,CAACC,QAAQ,CAACze,IAAI,CAAC;MACpE,IAAIuG,KAAK,EAAE;QACT,IAAM5S,KAAK,GAAG2qB,YAAY,CAAC7gB,IAAI,EAAEuC,IAAI,EAAErN,KAAK,GAAG4T,KAAK,CAAC;QACrD,IAAMtK,GAAG,GAAGqiB,YAAY,CAAC7gB,IAAI,EAAEuC,IAAI,EAAErN,KAAK,GAAG4T,KAAK,CAAC;QACnD,OAAO;UAACwT,EAAE,EAAEpmB,KAAK,CAAComB,EAAE;UAAEC,EAAE,EAAE/d,GAAG,CAAC+d;QAAE,CAAC;MACnC;IACF;EACF;EACA,OAAO;IAACD,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAEvc,IAAI,CAACvJ,MAAM,GAAG;EAAC,CAAC;AACrC;AACA,SAASwqB,sBAAsBA,CAAC7rB,KAAK,EAAEmN,IAAI,EAAE2e,QAAQ,EAAEZ,OAAO,EAAEM,SAAS,EAAE;EACzE,IAAMxhB,QAAQ,GAAGhK,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;EACrD,IAAMrrB,KAAK,GAAGgsB,QAAQ,CAAC3e,IAAI,CAAC;EAC5B,KAAK,IAAIzZ,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACrD,IAAAq4B,YAAA,GAAsB/hB,QAAQ,CAACtW,CAAC,CAAC;MAA1ByW,KAAK,GAAA4hB,YAAA,CAAL5hB,KAAK;MAAES,IAAI,GAAAmhB,YAAA,CAAJnhB,IAAI;IAClB,IAAAohB,aAAA,GAAiBV,YAAY,CAACthB,QAAQ,CAACtW,CAAC,CAAC,EAAEyZ,IAAI,EAAErN,KAAK,EAAE0rB,SAAS,CAAC;MAA3DtE,EAAE,GAAA8E,aAAA,CAAF9E,EAAE;MAAEC,EAAE,GAAA6E,aAAA,CAAF7E,EAAE;IACb,KAAK,IAAIvyB,CAAC,GAAGsyB,EAAE,EAAEtyB,CAAC,IAAIuyB,EAAE,EAAE,EAAEvyB,CAAC,EAAE;MAC7B,IAAMqZ,OAAO,GAAGrD,IAAI,CAAChW,CAAC,CAAC;MACvB,IAAI,CAACqZ,OAAO,CAAC4R,IAAI,EAAE;QACjBqL,OAAO,CAACjd,OAAO,EAAE9D,KAAK,EAAEvV,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAASq3B,wBAAwBA,CAAC9e,IAAI,EAAE;EACtC,IAAM+e,IAAI,GAAG/e,IAAI,CAACsQ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,IAAM0O,IAAI,GAAGhf,IAAI,CAACsQ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,OAAO,UAAS2O,GAAG,EAAEC,GAAG,EAAE;IACxB,IAAMC,MAAM,GAAGJ,IAAI,GAAGtrB,IAAI,CAACkY,GAAG,CAACsT,GAAG,CAAC91B,CAAC,GAAG+1B,GAAG,CAAC/1B,CAAC,CAAC,GAAG,CAAC;IACjD,IAAMi2B,MAAM,GAAGJ,IAAI,GAAGvrB,IAAI,CAACkY,GAAG,CAACsT,GAAG,CAAC51B,CAAC,GAAG61B,GAAG,CAAC71B,CAAC,CAAC,GAAG,CAAC;IACjD,OAAOoK,IAAI,CAAC4rB,IAAI,CAAC5rB,IAAI,CAAC6rB,GAAG,CAACH,MAAM,EAAE,CAAC,CAAC,GAAG1rB,IAAI,CAAC6rB,GAAG,CAACF,MAAM,EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;AACH;AACA,SAASG,iBAAiBA,CAAC1sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEwf,gBAAgB,EAAE;EAClE,IAAMjrB,KAAK,GAAG,EAAE;EAChB,IAAI,CAACjL,cAAc,CAACq1B,QAAQ,EAAE9rB,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4sB,WAAW,CAAC,EAAE;IACjE,OAAOlrB,KAAK;EACd;EACA,IAAMmrB,cAAc,GAAG,SAAjBA,cAAcA,CAAY5e,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAI8D,OAAO,CAAC6e,OAAO,CAAChB,QAAQ,CAACx1B,CAAC,EAAEw1B,QAAQ,CAACt1B,CAAC,EAAEm2B,gBAAgB,CAAC,EAAE;MAC7DjrB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACD0hB,sBAAsB,CAAC7rB,KAAK,EAAEmN,IAAI,EAAE2e,QAAQ,EAAEe,cAAc,EAAE,IAAI,CAAC;EACnE,OAAOnrB,KAAK;AACd;AACA,SAASqrB,eAAeA,CAAC/sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEqe,SAAS,EAAEmB,gBAAgB,EAAE;EAC3E,IAAMK,cAAc,GAAGf,wBAAwB,CAAC9e,IAAI,CAAC;EACrD,IAAI8f,WAAW,GAAGthB,MAAM,CAACE,iBAAiB;EAC1C,IAAInK,KAAK,GAAG,EAAE;EACd,IAAI,CAACjL,cAAc,CAACq1B,QAAQ,EAAE9rB,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4sB,WAAW,CAAC,EAAE;IACjE,OAAOlrB,KAAK;EACd;EACA,IAAMmrB,cAAc,GAAG,SAAjBA,cAAcA,CAAY5e,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAIqhB,SAAS,IAAI,CAACvd,OAAO,CAAC6e,OAAO,CAAChB,QAAQ,CAACx1B,CAAC,EAAEw1B,QAAQ,CAACt1B,CAAC,EAAEm2B,gBAAgB,CAAC,EAAE;MAC3E;IACF;IACA,IAAM1P,MAAM,GAAGhP,OAAO,CAACif,cAAc,CAACP,gBAAgB,CAAC;IACvD,IAAI,CAACl2B,cAAc,CAACwmB,MAAM,EAAEjd,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4sB,WAAW,CAAC,IAAI,CAAC3e,OAAO,CAAC6e,OAAO,CAAChB,QAAQ,CAACx1B,CAAC,EAAEw1B,QAAQ,CAACt1B,CAAC,EAAEm2B,gBAAgB,CAAC,EAAE;MAC7H;IACF;IACA,IAAMQ,QAAQ,GAAGH,cAAc,CAAClB,QAAQ,EAAE7O,MAAM,CAAC;IACjD,IAAIkQ,QAAQ,GAAGF,WAAW,EAAE;MAC1BvrB,KAAK,GAAG,CAAC;QAACuM,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;MACxC8iB,WAAW,GAAGE,QAAQ;IACxB,CAAC,MAAM,IAAIA,QAAQ,KAAKF,WAAW,EAAE;MACnCvrB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACD0hB,sBAAsB,CAAC7rB,KAAK,EAAEmN,IAAI,EAAE2e,QAAQ,EAAEe,cAAc,CAAC;EAC7D,OAAOnrB,KAAK;AACd;AACA,SAAS0rB,YAAYA,CAACptB,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;EACzD,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC53B,CAAC,EAAE4M,KAAK,CAAC;EAC9C,IAAM0B,KAAK,GAAG,EAAE;EAChB,IAAMyL,IAAI,GAAGjF,OAAO,CAACiF,IAAI;EACzB,IAAMkgB,WAAW,GAAGlgB,IAAI,KAAK,GAAG,GAAG,UAAU,GAAG,UAAU;EAC1D,IAAImgB,cAAc,GAAG,KAAK;EAC1BrC,uBAAuB,CAACjrB,KAAK,EAAE,UAACiO,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAK;IAC/D,IAAI8D,OAAO,CAACof,WAAW,CAAC,CAACvB,QAAQ,CAAC3e,IAAI,CAAC,EAAEwf,gBAAgB,CAAC,EAAE;MAC1DjrB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;IACA,IAAI8D,OAAO,CAAC6e,OAAO,CAAChB,QAAQ,CAACx1B,CAAC,EAAEw1B,QAAQ,CAACt1B,CAAC,EAAEm2B,gBAAgB,CAAC,EAAE;MAC7DW,cAAc,GAAG,IAAI;IACvB;EACF,CAAC,CAAC;EACF,IAAIplB,OAAO,CAACsjB,SAAS,IAAI,CAAC8B,cAAc,EAAE;IACxC,OAAO,EAAE;EACX;EACA,OAAO5rB,KAAK;AACd;AACA,IAAI6rB,WAAW,GAAG;EAChBC,KAAK,EAAE;IACLrjB,KAAK,WAAAA,MAACnK,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MACzC,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC53B,CAAC,EAAE4M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,GAAG;MAChC,IAAMzL,KAAK,GAAGwG,OAAO,CAACsjB,SAAS,GAC3BkB,iBAAiB,CAAC1sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEwf,gBAAgB,CAAC,GAC1DI,eAAe,CAAC/sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAE,KAAK,EAAEwf,gBAAgB,CAAC;MACnE,IAAMhY,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACjT,KAAK,CAACL,MAAM,EAAE;QACjB,OAAO,EAAE;MACX;MACArB,KAAK,CAACmrB,4BAA4B,CAAC,CAAC,CAAC3qB,OAAO,CAAC,UAACwK,IAAI,EAAK;QACrD,IAAMb,KAAK,GAAGzI,KAAK,CAAC,CAAC,CAAC,CAACyI,KAAK;QAC5B,IAAM8D,OAAO,GAAGjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QAChC,IAAI8D,OAAO,IAAI,CAACA,OAAO,CAAC4R,IAAI,EAAE;UAC5BlL,QAAQ,CAACjS,IAAI,CAAC;YAACuL,OAAO,EAAPA,OAAO;YAAExD,YAAY,EAAEO,IAAI,CAACb,KAAK;YAAEA,KAAK,EAALA;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC;MACF,OAAOwK,QAAQ;IACjB,CAAC;IACD5G,OAAO,WAAAA,QAAC/N,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MAC3C,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC53B,CAAC,EAAE4M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,IAAIzL,KAAK,GAAGwG,OAAO,CAACsjB,SAAS,GACzBkB,iBAAiB,CAAC1sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEwf,gBAAgB,CAAC,GAC5DI,eAAe,CAAC/sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAE,KAAK,EAAEwf,gBAAgB,CAAC;MACjE,IAAIjrB,KAAK,CAACL,MAAM,GAAG,CAAC,EAAE;QACpB,IAAMoJ,YAAY,GAAG/I,KAAK,CAAC,CAAC,CAAC,CAAC+I,YAAY;QAC1C,IAAMG,IAAI,GAAG5K,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC,CAACG,IAAI;QACpDlJ,KAAK,GAAG,EAAE;QACV,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkX,IAAI,CAACvJ,MAAM,EAAE,EAAE3N,CAAC,EAAE;UACpCgO,KAAK,CAACgB,IAAI,CAAC;YAACuL,OAAO,EAAErD,IAAI,CAAClX,CAAC,CAAC;YAAE+W,YAAY,EAAZA,YAAY;YAAEN,KAAK,EAAEzW;UAAC,CAAC,CAAC;QACxD;MACF;MACA,OAAOgO,KAAK;IACd,CAAC;IACD+d,KAAK,WAAAA,MAACzf,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MACzC,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC53B,CAAC,EAAE4M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,OAAOuf,iBAAiB,CAAC1sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEwf,gBAAgB,CAAC;IACnE,CAAC;IACDc,OAAO,WAAAA,QAACztB,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MAC3C,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC53B,CAAC,EAAE4M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,OAAO4f,eAAe,CAAC/sB,KAAK,EAAE8rB,QAAQ,EAAE3e,IAAI,EAAEjF,OAAO,CAACsjB,SAAS,EAAEmB,gBAAgB,CAAC;IACpF,CAAC;IACDr2B,CAAC,WAAAA,EAAC0J,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MACrCzkB,OAAO,CAACiF,IAAI,GAAG,GAAG;MAClB,OAAOigB,YAAY,CAACptB,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,CAAC;IAC1D,CAAC;IACDn2B,CAAC,WAAAA,EAACwJ,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,EAAE;MACrCzkB,OAAO,CAACiF,IAAI,GAAG,GAAG;MAClB,OAAOigB,YAAY,CAACptB,KAAK,EAAE5M,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,CAAC;IAC1D;EACF;AACF,CAAC;AAED,IAAMe,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC3D,SAASC,gBAAgBA,CAACC,KAAK,EAAE9B,QAAQ,EAAE;EACzC,OAAO8B,KAAK,CAAClgB,MAAM,CAAC,UAAA5Z,CAAC;IAAA,OAAIA,CAAC,CAAC+5B,GAAG,KAAK/B,QAAQ;EAAA,EAAC;AAC9C;AACA,SAASgC,2BAA2BA,CAACF,KAAK,EAAEzgB,IAAI,EAAE;EAChD,OAAOygB,KAAK,CAAClgB,MAAM,CAAC,UAAA5Z,CAAC;IAAA,OAAI45B,gBAAgB,CAACjQ,OAAO,CAAC3pB,CAAC,CAAC+5B,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI/5B,CAAC,CAACi6B,GAAG,CAAC5gB,IAAI,KAAKA,IAAI;EAAA,EAAC;AACzF;AACA,SAAS6gB,YAAYA,CAACJ,KAAK,EAAEzkB,OAAO,EAAE;EACpC,OAAOykB,KAAK,CAACnV,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC,EAAK;IAC1B,IAAMq6B,EAAE,GAAG9kB,OAAO,GAAGvV,CAAC,GAAGV,CAAC;IAC1B,IAAMuoB,EAAE,GAAGtS,OAAO,GAAGjW,CAAC,GAAGU,CAAC;IAC1B,OAAOq6B,EAAE,CAAC9J,MAAM,KAAK1I,EAAE,CAAC0I,MAAM,GAC5B8J,EAAE,CAAC9jB,KAAK,GAAGsR,EAAE,CAACtR,KAAK,GACnB8jB,EAAE,CAAC9J,MAAM,GAAG1I,EAAE,CAAC0I,MAAM;EACzB,CAAC,CAAC;AACJ;AACA,SAAS+J,SAASA,CAACC,KAAK,EAAE;EACxB,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAI16B,CAAC,EAAEwW,IAAI,EAAE6jB,GAAG,EAAEF,GAAG,EAAExjB,KAAK,EAAEgkB,WAAW;EACzC,KAAK36B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG,CAACikB,KAAK,IAAI,EAAE,EAAE9sB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACtDq6B,GAAG,GAAGI,KAAK,CAACz6B,CAAC,CAAC;IAAC,IAAA46B,IAAA,GACuCP,GAAG;IAA7CF,GAAG,GAAAS,IAAA,CAAbxC,QAAQ;IAAA,IAAAyC,YAAA,GAAAD,IAAA,CAAOpmB,OAAO;IAAGmC,KAAK,GAAAkkB,YAAA,CAALlkB,KAAK;IAAA,IAAAmkB,qBAAA,GAAAD,YAAA,CAAEF,WAAW;IAAXA,WAAW,GAAAG,qBAAA,cAAG,CAAC,GAAAA,qBAAA;IACjDJ,WAAW,CAAC1rB,IAAI,CAAC;MACfyH,KAAK,EAAEzW,CAAC;MACRq6B,GAAG,EAAHA,GAAG;MACHF,GAAG,EAAHA,GAAG;MACH/S,UAAU,EAAEiT,GAAG,CAACnT,YAAY,CAAC,CAAC;MAC9BuJ,MAAM,EAAE4J,GAAG,CAAC5J,MAAM;MAClB9Z,KAAK,EAAEA,KAAK,IAAKwjB,GAAG,GAAGxjB,KAAM;MAC7BgkB,WAAW,EAAXA;IACF,CAAC,CAAC;EACJ;EACA,OAAOD,WAAW;AACpB;AACA,SAASK,WAAWA,CAACC,OAAO,EAAE;EAC5B,IAAM3iB,MAAM,GAAG,CAAC,CAAC;EAAC,IAAA4iB,UAAA,GAAApiB,0BAAA,CACCmiB,OAAO;IAAAE,MAAA;EAAA;IAA1B,KAAAD,UAAA,CAAAj6B,CAAA,MAAAk6B,MAAA,GAAAD,UAAA,CAAAn5B,CAAA,IAAAkX,IAAA,GAA4B;MAAA,IAAjBmiB,IAAI,GAAAD,MAAA,CAAA9uB,KAAA;MACb,IAAOuK,KAAK,GAAsBwkB,IAAI,CAA/BxkB,KAAK;QAAEwjB,GAAG,GAAiBgB,IAAI,CAAxBhB,GAAG;QAAEQ,WAAW,GAAIQ,IAAI,CAAnBR,WAAW;MAC9B,IAAI,CAAChkB,KAAK,IAAI,CAACqjB,gBAAgB,CAACoB,QAAQ,CAACjB,GAAG,CAAC,EAAE;QAC7C;MACF;MACA,IAAMkB,MAAM,GAAGhjB,MAAM,CAAC1B,KAAK,CAAC,KAAK0B,MAAM,CAAC1B,KAAK,CAAC,GAAG;QAACgI,KAAK,EAAE,CAAC;QAAE2c,MAAM,EAAE,CAAC;QAAE7K,MAAM,EAAE,CAAC;QAAExb,IAAI,EAAE;MAAC,CAAC,CAAC;MAC3FomB,MAAM,CAAC1c,KAAK,EAAE;MACd0c,MAAM,CAAC5K,MAAM,IAAIkK,WAAW;IAC9B;EAAC,SAAA1hB,GAAA;IAAAgiB,UAAA,CAAAv7B,CAAA,CAAAuZ,GAAA;EAAA;IAAAgiB,UAAA,CAAAv6B,CAAA;EAAA;EACD,OAAO2X,MAAM;AACf;AACA,SAASkjB,aAAaA,CAACP,OAAO,EAAEQ,MAAM,EAAE;EACtC,IAAMnjB,MAAM,GAAG0iB,WAAW,CAACC,OAAO,CAAC;EACnC,IAAOS,YAAY,GAAmBD,MAAM,CAArCC,YAAY;IAAEC,aAAa,GAAIF,MAAM,CAAvBE,aAAa;EAClC,IAAI17B,CAAC,EAAEwW,IAAI,EAAEmlB,MAAM;EACnB,KAAK37B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGwkB,OAAO,CAACrtB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAChD27B,MAAM,GAAGX,OAAO,CAACh7B,CAAC,CAAC;IACnB,IAAO47B,QAAQ,GAAID,MAAM,CAACtB,GAAG,CAAtBuB,QAAQ;IACf,IAAMjlB,KAAK,GAAG0B,MAAM,CAACsjB,MAAM,CAAChlB,KAAK,CAAC;IAClC,IAAMtG,MAAM,GAAGsG,KAAK,IAAIglB,MAAM,CAAChB,WAAW,GAAGhkB,KAAK,CAAC8Z,MAAM;IACzD,IAAIkL,MAAM,CAACvU,UAAU,EAAE;MACrBuU,MAAM,CAAClS,KAAK,GAAGpZ,MAAM,GAAGA,MAAM,GAAGorB,YAAY,GAAGG,QAAQ,IAAIJ,MAAM,CAACK,cAAc;MACjFF,MAAM,CAACnS,MAAM,GAAGkS,aAAa;IAC/B,CAAC,MAAM;MACLC,MAAM,CAAClS,KAAK,GAAGgS,YAAY;MAC3BE,MAAM,CAACnS,MAAM,GAAGnZ,MAAM,GAAGA,MAAM,GAAGqrB,aAAa,GAAGE,QAAQ,IAAIJ,MAAM,CAACM,eAAe;IACtF;EACF;EACA,OAAOzjB,MAAM;AACf;AACA,SAAS0jB,gBAAgBA,CAACtB,KAAK,EAAE;EAC/B,IAAMC,WAAW,GAAGF,SAAS,CAACC,KAAK,CAAC;EACpC,IAAMmB,QAAQ,GAAGtB,YAAY,CAACI,WAAW,CAAC1gB,MAAM,CAAC,UAAAmhB,IAAI;IAAA,OAAIA,IAAI,CAACd,GAAG,CAACuB,QAAQ;EAAA,EAAC,EAAE,IAAI,CAAC;EAClF,IAAM3lB,IAAI,GAAGqkB,YAAY,CAACL,gBAAgB,CAACS,WAAW,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;EACtE,IAAM3kB,KAAK,GAAGukB,YAAY,CAACL,gBAAgB,CAACS,WAAW,EAAE,OAAO,CAAC,CAAC;EAClE,IAAM5kB,GAAG,GAAGwkB,YAAY,CAACL,gBAAgB,CAACS,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;EACpE,IAAM1kB,MAAM,GAAGskB,YAAY,CAACL,gBAAgB,CAACS,WAAW,EAAE,QAAQ,CAAC,CAAC;EACpE,IAAMsB,gBAAgB,GAAG5B,2BAA2B,CAACM,WAAW,EAAE,GAAG,CAAC;EACtE,IAAMuB,cAAc,GAAG7B,2BAA2B,CAACM,WAAW,EAAE,GAAG,CAAC;EACpE,OAAO;IACLkB,QAAQ,EAARA,QAAQ;IACRM,UAAU,EAAEjmB,IAAI,CAAC0B,MAAM,CAAC7B,GAAG,CAAC;IAC5BqmB,cAAc,EAAEpmB,KAAK,CAAC4B,MAAM,CAACskB,cAAc,CAAC,CAACtkB,MAAM,CAAC3B,MAAM,CAAC,CAAC2B,MAAM,CAACqkB,gBAAgB,CAAC;IACpF7a,SAAS,EAAE8Y,gBAAgB,CAACS,WAAW,EAAE,WAAW,CAAC;IACrD0B,QAAQ,EAAEnmB,IAAI,CAAC0B,MAAM,CAAC5B,KAAK,CAAC,CAAC4B,MAAM,CAACskB,cAAc,CAAC;IACnD7U,UAAU,EAAEtR,GAAG,CAAC6B,MAAM,CAAC3B,MAAM,CAAC,CAAC2B,MAAM,CAACqkB,gBAAgB;EACxD,CAAC;AACH;AACA,SAASK,cAAcA,CAACC,UAAU,EAAEnb,SAAS,EAAE3hB,CAAC,EAAEU,CAAC,EAAE;EACnD,OAAOgN,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAAC98B,CAAC,CAAC,EAAE2hB,SAAS,CAAC3hB,CAAC,CAAC,CAAC,GAAG0N,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACp8B,CAAC,CAAC,EAAEihB,SAAS,CAACjhB,CAAC,CAAC,CAAC;AACtF;AACA,SAASq8B,gBAAgBA,CAACD,UAAU,EAAEE,UAAU,EAAE;EAChDF,UAAU,CAACxmB,GAAG,GAAG5I,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACxmB,GAAG,EAAE0mB,UAAU,CAAC1mB,GAAG,CAAC;EACzDwmB,UAAU,CAACrmB,IAAI,GAAG/I,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACrmB,IAAI,EAAEumB,UAAU,CAACvmB,IAAI,CAAC;EAC5DqmB,UAAU,CAACtmB,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACtmB,MAAM,EAAEwmB,UAAU,CAACxmB,MAAM,CAAC;EAClEsmB,UAAU,CAACvmB,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACvmB,KAAK,EAAEymB,UAAU,CAACzmB,KAAK,CAAC;AACjE;AACA,SAAS0mB,UAAUA,CAACtb,SAAS,EAAEqa,MAAM,EAAEG,MAAM,EAAEtjB,MAAM,EAAE;EACrD,IAAO8hB,GAAG,GAASwB,MAAM,CAAlBxB,GAAG;IAAEE,GAAG,GAAIsB,MAAM,CAAbtB,GAAG;EACf,IAAMiC,UAAU,GAAGnb,SAAS,CAACmb,UAAU;EACvC,IAAI,CAACr8B,QAAQ,CAACk6B,GAAG,CAAC,EAAE;IAClB,IAAIwB,MAAM,CAAC1mB,IAAI,EAAE;MACfkM,SAAS,CAACgZ,GAAG,CAAC,IAAIwB,MAAM,CAAC1mB,IAAI;IAC/B;IACA,IAAM0B,KAAK,GAAG0B,MAAM,CAACsjB,MAAM,CAAChlB,KAAK,CAAC,IAAI;MAAC1B,IAAI,EAAE,CAAC;MAAE0J,KAAK,EAAE;IAAC,CAAC;IACzDhI,KAAK,CAAC1B,IAAI,GAAG/H,IAAI,CAACuC,GAAG,CAACkH,KAAK,CAAC1B,IAAI,EAAE0mB,MAAM,CAACvU,UAAU,GAAGiT,GAAG,CAAC7Q,MAAM,GAAG6Q,GAAG,CAAC5Q,KAAK,CAAC;IAC7EkS,MAAM,CAAC1mB,IAAI,GAAG0B,KAAK,CAAC1B,IAAI,GAAG0B,KAAK,CAACgI,KAAK;IACtCwC,SAAS,CAACgZ,GAAG,CAAC,IAAIwB,MAAM,CAAC1mB,IAAI;EAC/B;EACA,IAAIolB,GAAG,CAACqC,UAAU,EAAE;IAClBH,gBAAgB,CAACD,UAAU,EAAEjC,GAAG,CAACqC,UAAU,CAAC,CAAC,CAAC;EAChD;EACA,IAAMC,QAAQ,GAAGzvB,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE+rB,MAAM,CAACoB,UAAU,GAAGP,cAAc,CAACC,UAAU,EAAEnb,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACxG,IAAM0b,SAAS,GAAG3vB,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE+rB,MAAM,CAACsB,WAAW,GAAGT,cAAc,CAACC,UAAU,EAAEnb,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC1G,IAAM4b,YAAY,GAAGJ,QAAQ,KAAKxb,SAAS,CAACze,CAAC;EAC7C,IAAMs6B,aAAa,GAAGH,SAAS,KAAK1b,SAAS,CAACrgB,CAAC;EAC/CqgB,SAAS,CAACze,CAAC,GAAGi6B,QAAQ;EACtBxb,SAAS,CAACrgB,CAAC,GAAG+7B,SAAS;EACvB,OAAOlB,MAAM,CAACvU,UAAU,GACpB;IAAC6V,IAAI,EAAEF,YAAY;IAAEG,KAAK,EAAEF;EAAa,CAAC,GAC1C;IAACC,IAAI,EAAED,aAAa;IAAEE,KAAK,EAAEH;EAAY,CAAC;AAChD;AACA,SAASI,gBAAgBA,CAAChc,SAAS,EAAE;EACnC,IAAMmb,UAAU,GAAGnb,SAAS,CAACmb,UAAU;EACvC,SAASc,SAASA,CAACjD,GAAG,EAAE;IACtB,IAAMkD,MAAM,GAAGnwB,IAAI,CAACuC,GAAG,CAAC6sB,UAAU,CAACnC,GAAG,CAAC,GAAGhZ,SAAS,CAACgZ,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5DhZ,SAAS,CAACgZ,GAAG,CAAC,IAAIkD,MAAM;IACxB,OAAOA,MAAM;EACf;EACAlc,SAAS,CAACre,CAAC,IAAIs6B,SAAS,CAAC,KAAK,CAAC;EAC/Bjc,SAAS,CAACve,CAAC,IAAIw6B,SAAS,CAAC,MAAM,CAAC;EAChCA,SAAS,CAAC,OAAO,CAAC;EAClBA,SAAS,CAAC,QAAQ,CAAC;AACrB;AACA,SAASE,UAAUA,CAAClW,UAAU,EAAEjG,SAAS,EAAE;EACzC,IAAMmb,UAAU,GAAGnb,SAAS,CAACmb,UAAU;EACvC,SAASiB,kBAAkBA,CAACC,SAAS,EAAE;IACrC,IAAMC,MAAM,GAAG;MAACxnB,IAAI,EAAE,CAAC;MAAEH,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAC;IACrDwnB,SAAS,CAAC1wB,OAAO,CAAC,UAACqtB,GAAG,EAAK;MACzBsD,MAAM,CAACtD,GAAG,CAAC,GAAGjtB,IAAI,CAACuC,GAAG,CAAC0R,SAAS,CAACgZ,GAAG,CAAC,EAAEmC,UAAU,CAACnC,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAOsD,MAAM;EACf;EACA,OAAOrW,UAAU,GACbmW,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GACrCA,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3C;AACA,SAASG,QAAQA,CAACjD,KAAK,EAAEtZ,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,EAAE;EAClD,IAAMslB,UAAU,GAAG,EAAE;EACrB,IAAI39B,CAAC,EAAEwW,IAAI,EAAEmlB,MAAM,EAAEtB,GAAG,EAAEuD,KAAK,EAAE5J,OAAO;EACxC,KAAKh0B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGikB,KAAK,CAAC9sB,MAAM,EAAEiwB,KAAK,GAAG,CAAC,EAAE59B,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACzD27B,MAAM,GAAGlB,KAAK,CAACz6B,CAAC,CAAC;IACjBq6B,GAAG,GAAGsB,MAAM,CAACtB,GAAG;IAChBA,GAAG,CAACroB,MAAM,CACR2pB,MAAM,CAAClS,KAAK,IAAItI,SAAS,CAACze,CAAC,EAC3Bi5B,MAAM,CAACnS,MAAM,IAAIrI,SAAS,CAACrgB,CAAC,EAC5Bw8B,UAAU,CAAC3B,MAAM,CAACvU,UAAU,EAAEjG,SAAS,CACzC,CAAC;IACD,IAAA0c,WAAA,GAAsBpB,UAAU,CAACtb,SAAS,EAAEqa,MAAM,EAAEG,MAAM,EAAEtjB,MAAM,CAAC;MAA5D4kB,IAAI,GAAAY,WAAA,CAAJZ,IAAI;MAAEC,KAAK,GAAAW,WAAA,CAALX,KAAK;IAClBU,KAAK,IAAIX,IAAI,IAAIU,UAAU,CAAChwB,MAAM;IAClCqmB,OAAO,GAAGA,OAAO,IAAIkJ,KAAK;IAC1B,IAAI,CAAC7C,GAAG,CAACuB,QAAQ,EAAE;MACjB+B,UAAU,CAAC3uB,IAAI,CAAC2sB,MAAM,CAAC;IACzB;EACF;EACA,OAAOiC,KAAK,IAAIF,QAAQ,CAACC,UAAU,EAAExc,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC,IAAI2b,OAAO;AAC5E;AACA,SAAS8J,UAAUA,CAACzD,GAAG,EAAEpkB,IAAI,EAAEH,GAAG,EAAE2T,KAAK,EAAED,MAAM,EAAE;EACjD6Q,GAAG,CAACvkB,GAAG,GAAGA,GAAG;EACbukB,GAAG,CAACpkB,IAAI,GAAGA,IAAI;EACfokB,GAAG,CAACtkB,KAAK,GAAGE,IAAI,GAAGwT,KAAK;EACxB4Q,GAAG,CAACrkB,MAAM,GAAGF,GAAG,GAAG0T,MAAM;EACzB6Q,GAAG,CAAC5Q,KAAK,GAAGA,KAAK;EACjB4Q,GAAG,CAAC7Q,MAAM,GAAGA,MAAM;AACrB;AACA,SAASuU,UAAUA,CAACtD,KAAK,EAAEtZ,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,EAAE;EACpD,IAAM2lB,WAAW,GAAGxC,MAAM,CAACyC,OAAO;EAClC,IAAKr7B,CAAC,GAAOue,SAAS,CAAjBve,CAAC;IAAEE,CAAC,GAAIqe,SAAS,CAAdre,CAAC;EAAc,IAAAo7B,UAAA,GAAArlB,0BAAA,CACF4hB,KAAK;IAAA0D,MAAA;EAAA;IAA1B,KAAAD,UAAA,CAAAl9B,CAAA,MAAAm9B,MAAA,GAAAD,UAAA,CAAAp8B,CAAA,IAAAkX,IAAA,GAA4B;MAAA,IAAjB2iB,MAAM,GAAAwC,MAAA,CAAA/xB,KAAA;MACf,IAAMiuB,GAAG,GAAGsB,MAAM,CAACtB,GAAG;MACtB,IAAM1jB,KAAK,GAAG0B,MAAM,CAACsjB,MAAM,CAAChlB,KAAK,CAAC,IAAI;QAACgI,KAAK,EAAE,CAAC;QAAE2c,MAAM,EAAE,CAAC;QAAE7K,MAAM,EAAE;MAAC,CAAC;MACtE,IAAMA,MAAM,GAAIkL,MAAM,CAAChB,WAAW,GAAGhkB,KAAK,CAAC8Z,MAAM,IAAK,CAAC;MACvD,IAAIkL,MAAM,CAACvU,UAAU,EAAE;QACrB,IAAMqC,KAAK,GAAGtI,SAAS,CAACze,CAAC,GAAG+tB,MAAM;QAClC,IAAMjH,MAAM,GAAG7S,KAAK,CAAC1B,IAAI,IAAIolB,GAAG,CAAC7Q,MAAM;QACvC,IAAIzoB,OAAO,CAAC4V,KAAK,CAACvJ,KAAK,CAAC,EAAE;UACxBtK,CAAC,GAAG6T,KAAK,CAACvJ,KAAK;QACjB;QACA,IAAIitB,GAAG,CAACuB,QAAQ,EAAE;UAChBkC,UAAU,CAACzD,GAAG,EAAE2D,WAAW,CAAC/nB,IAAI,EAAEnT,CAAC,EAAE04B,MAAM,CAACoB,UAAU,GAAGoB,WAAW,CAACjoB,KAAK,GAAGioB,WAAW,CAAC/nB,IAAI,EAAEuT,MAAM,CAAC;QACxG,CAAC,MAAM;UACLsU,UAAU,CAACzD,GAAG,EAAElZ,SAAS,CAAClL,IAAI,GAAGU,KAAK,CAAC2kB,MAAM,EAAEx4B,CAAC,EAAE2mB,KAAK,EAAED,MAAM,CAAC;QAClE;QACA7S,KAAK,CAACvJ,KAAK,GAAGtK,CAAC;QACf6T,KAAK,CAAC2kB,MAAM,IAAI7R,KAAK;QACrB3mB,CAAC,GAAGu3B,GAAG,CAACrkB,MAAM;MAChB,CAAC,MAAM;QACL,IAAMwT,OAAM,GAAGrI,SAAS,CAACrgB,CAAC,GAAG2vB,MAAM;QACnC,IAAMhH,MAAK,GAAG9S,KAAK,CAAC1B,IAAI,IAAIolB,GAAG,CAAC5Q,KAAK;QACrC,IAAI1oB,OAAO,CAAC4V,KAAK,CAACvJ,KAAK,CAAC,EAAE;UACxBxK,CAAC,GAAG+T,KAAK,CAACvJ,KAAK;QACjB;QACA,IAAIitB,GAAG,CAACuB,QAAQ,EAAE;UAChBkC,UAAU,CAACzD,GAAG,EAAEz3B,CAAC,EAAEo7B,WAAW,CAACloB,GAAG,EAAE2T,MAAK,EAAE+R,MAAM,CAACsB,WAAW,GAAGkB,WAAW,CAAChoB,MAAM,GAAGgoB,WAAW,CAACloB,GAAG,CAAC;QACvG,CAAC,MAAM;UACLgoB,UAAU,CAACzD,GAAG,EAAEz3B,CAAC,EAAEue,SAAS,CAACrL,GAAG,GAAGa,KAAK,CAAC2kB,MAAM,EAAE7R,MAAK,EAAED,OAAM,CAAC;QACjE;QACA7S,KAAK,CAACvJ,KAAK,GAAGxK,CAAC;QACf+T,KAAK,CAAC2kB,MAAM,IAAI9R,OAAM;QACtB5mB,CAAC,GAAGy3B,GAAG,CAACtkB,KAAK;MACf;IACF;EAAC,SAAAkD,GAAA;IAAAilB,UAAA,CAAAx+B,CAAA,CAAAuZ,GAAA;EAAA;IAAAilB,UAAA,CAAAx9B,CAAA;EAAA;EACDygB,SAAS,CAACve,CAAC,GAAGA,CAAC;EACfue,SAAS,CAACre,CAAC,GAAGA,CAAC;AACjB;AACA/C,QAAQ,CAAC6O,GAAG,CAAC,QAAQ,EAAE;EACrBqvB,OAAO,EAAE;IACPnoB,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,IAAI+kB,OAAO,GAAG;EACZoD,MAAM,WAAAA,OAAC9xB,KAAK,EAAE4B,IAAI,EAAE;IAClB,IAAI,CAAC5B,KAAK,CAACmuB,KAAK,EAAE;MAChBnuB,KAAK,CAACmuB,KAAK,GAAG,EAAE;IAClB;IACAvsB,IAAI,CAAC0tB,QAAQ,GAAG1tB,IAAI,CAAC0tB,QAAQ,IAAI,KAAK;IACtC1tB,IAAI,CAACkqB,QAAQ,GAAGlqB,IAAI,CAACkqB,QAAQ,IAAI,KAAK;IACtClqB,IAAI,CAACuiB,MAAM,GAAGviB,IAAI,CAACuiB,MAAM,IAAI,CAAC;IAC9BviB,IAAI,CAACmwB,OAAO,GAAGnwB,IAAI,CAACmwB,OAAO,IAAI,YAAW;MACxC,OAAO,CAAC;QACNr7B,CAAC,EAAE,CAAC;QACJiL,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACdjT,IAAI,CAACD,IAAI,CAACkT,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;IACJ,CAAC;IACD7U,KAAK,CAACmuB,KAAK,CAACzrB,IAAI,CAACd,IAAI,CAAC;EACxB,CAAC;EACDowB,SAAS,WAAAA,UAAChyB,KAAK,EAAEiyB,UAAU,EAAE;IAC3B,IAAM9nB,KAAK,GAAGnK,KAAK,CAACmuB,KAAK,GAAGnuB,KAAK,CAACmuB,KAAK,CAAC1Q,OAAO,CAACwU,UAAU,CAAC,GAAG,CAAC,CAAC;IAChE,IAAI9nB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBnK,KAAK,CAACmuB,KAAK,CAACxW,MAAM,CAACxN,KAAK,EAAE,CAAC,CAAC;IAC9B;EACF,CAAC;EACD1C,SAAS,WAAAA,UAACzH,KAAK,EAAE4B,IAAI,EAAEsG,OAAO,EAAE;IAC9BtG,IAAI,CAAC0tB,QAAQ,GAAGpnB,OAAO,CAAConB,QAAQ;IAChC1tB,IAAI,CAACkqB,QAAQ,GAAG5jB,OAAO,CAAC4jB,QAAQ;IAChClqB,IAAI,CAACuiB,MAAM,GAAGjc,OAAO,CAACic,MAAM;EAC9B,CAAC;EACDze,MAAM,WAAAA,OAAC1F,KAAK,EAAEmd,KAAK,EAAED,MAAM,EAAEgV,UAAU,EAAE;IACvC,IAAI,CAAClyB,KAAK,EAAE;MACV;IACF;IACA,IAAM2xB,OAAO,GAAG96B,SAAS,CAACmJ,KAAK,CAACkI,OAAO,CAACmnB,MAAM,CAACsC,OAAO,CAAC;IACvD,IAAMpC,cAAc,GAAG3uB,IAAI,CAACuC,GAAG,CAACga,KAAK,GAAGwU,OAAO,CAACxU,KAAK,EAAE,CAAC,CAAC;IACzD,IAAMqS,eAAe,GAAG5uB,IAAI,CAACuC,GAAG,CAAC+Z,MAAM,GAAGyU,OAAO,CAACzU,MAAM,EAAE,CAAC,CAAC;IAC5D,IAAMiR,KAAK,GAAGsB,gBAAgB,CAACzvB,KAAK,CAACmuB,KAAK,CAAC;IAC3C,IAAMgE,aAAa,GAAGhE,KAAK,CAAC2B,QAAQ;IACpC,IAAMsC,eAAe,GAAGjE,KAAK,CAACrT,UAAU;IACxC/jB,IAAI,CAACiJ,KAAK,CAACmuB,KAAK,EAAE,UAAAJ,GAAG,EAAI;MACvB,IAAI,OAAOA,GAAG,CAACsE,YAAY,KAAK,UAAU,EAAE;QAC1CtE,GAAG,CAACsE,YAAY,CAAC,CAAC;MACpB;IACF,CAAC,CAAC;IACF,IAAMC,uBAAuB,GAAGH,aAAa,CAACnvB,MAAM,CAAC,UAACigB,KAAK,EAAE4L,IAAI;MAAA,OAC/DA,IAAI,CAACd,GAAG,CAAC7lB,OAAO,IAAI2mB,IAAI,CAACd,GAAG,CAAC7lB,OAAO,CAAC2gB,OAAO,KAAK,KAAK,GAAG5F,KAAK,GAAGA,KAAK,GAAG,CAAC;IAAA,GAAE,CAAC,CAAC,IAAI,CAAC;IACrF,IAAMiM,MAAM,GAAG3oB,MAAM,CAACsP,MAAM,CAAC;MAC3Bya,UAAU,EAAEnT,KAAK;MACjBqT,WAAW,EAAEtT,MAAM;MACnByU,OAAO,EAAPA,OAAO;MACPpC,cAAc,EAAdA,cAAc;MACdC,eAAe,EAAfA,eAAe;MACfL,YAAY,EAAEI,cAAc,GAAG,CAAC,GAAG+C,uBAAuB;MAC1DlD,aAAa,EAAEI,eAAe,GAAG;IACnC,CAAC,CAAC;IACF,IAAMQ,UAAU,GAAGzpB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE+oB,OAAO,CAAC;IAC7C1B,gBAAgB,CAACD,UAAU,EAAEn5B,SAAS,CAACq7B,UAAU,CAAC,CAAC;IACnD,IAAMrd,SAAS,GAAGtO,MAAM,CAACqC,MAAM,CAAC;MAC9BonB,UAAU,EAAVA,UAAU;MACV55B,CAAC,EAAEm5B,cAAc;MACjB/6B,CAAC,EAAEg7B,eAAe;MAClBl5B,CAAC,EAAEq7B,OAAO,CAAChoB,IAAI;MACfnT,CAAC,EAAEm7B,OAAO,CAACnoB;IACb,CAAC,EAAEmoB,OAAO,CAAC;IACX,IAAM5lB,MAAM,GAAGkjB,aAAa,CAACkD,aAAa,CAAC9mB,MAAM,CAAC+mB,eAAe,CAAC,EAAElD,MAAM,CAAC;IAC3EkC,QAAQ,CAACjD,KAAK,CAACmB,QAAQ,EAAEza,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC;IACnDqlB,QAAQ,CAACe,aAAa,EAAEtd,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC;IAClD,IAAIqlB,QAAQ,CAACgB,eAAe,EAAEvd,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC,EAAE;MACxDqlB,QAAQ,CAACe,aAAa,EAAEtd,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC;IACpD;IACA8kB,gBAAgB,CAAChc,SAAS,CAAC;IAC3B4c,UAAU,CAACtD,KAAK,CAACyB,UAAU,EAAE/a,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC;IACvD8I,SAAS,CAACve,CAAC,IAAIue,SAAS,CAACze,CAAC;IAC1Bye,SAAS,CAACre,CAAC,IAAIqe,SAAS,CAACrgB,CAAC;IAC1Bi9B,UAAU,CAACtD,KAAK,CAAC0B,cAAc,EAAEhb,SAAS,EAAEqa,MAAM,EAAEnjB,MAAM,CAAC;IAC3D/L,KAAK,CAAC6U,SAAS,GAAG;MAChBlL,IAAI,EAAEkL,SAAS,CAAClL,IAAI;MACpBH,GAAG,EAAEqL,SAAS,CAACrL,GAAG;MAClBC,KAAK,EAAEoL,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACze,CAAC;MACnCsT,MAAM,EAAEmL,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACrgB,CAAC;MACnC0oB,MAAM,EAAErI,SAAS,CAACrgB,CAAC;MACnB2oB,KAAK,EAAEtI,SAAS,CAACze;IACnB,CAAC;IACDW,IAAI,CAACo3B,KAAK,CAACtZ,SAAS,EAAE,UAACwa,MAAM,EAAK;MAChC,IAAMtB,GAAG,GAAGsB,MAAM,CAACtB,GAAG;MACtBxnB,MAAM,CAACqC,MAAM,CAACmlB,GAAG,EAAE/tB,KAAK,CAAC6U,SAAS,CAAC;MACnCkZ,GAAG,CAACroB,MAAM,CAACmP,SAAS,CAACze,CAAC,EAAEye,SAAS,CAACrgB,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;AACF,CAAC;AAAC,IAEI+9B,YAAY;EAAA,SAAAA,aAAA;IAAAlzB,eAAA,OAAAkzB,YAAA;EAAA;EAAA3yB,YAAA,CAAA2yB,YAAA;IAAA1yB,GAAA;IAAAC,KAAA,EAChB,SAAA0yB,eAAeC,MAAM,EAAErO,WAAW,EAAE,CAAC;EAAC;IAAAvkB,GAAA;IAAAC,KAAA,EACtC,SAAA4yB,eAAexd,OAAO,EAAE;MACtB,OAAO,KAAK;IACd;EAAC;IAAArV,GAAA;IAAAC,KAAA,EACD,SAAA6yB,iBAAiB3yB,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE,CAAC;EAAC;IAAA/yB,GAAA;IAAAC,KAAA,EAC1C,SAAA+yB,oBAAoB7yB,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE,CAAC;EAAC;IAAA/yB,GAAA;IAAAC,KAAA,EAC7C,SAAAgzB,oBAAA,EAAsB;MACpB,OAAO,CAAC;IACV;EAAC;IAAAjzB,GAAA;IAAAC,KAAA,EACD,SAAA7I,eAAegX,OAAO,EAAEkP,KAAK,EAAED,MAAM,EAAEkH,WAAW,EAAE;MAClDjH,KAAK,GAAGvc,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEga,KAAK,IAAIlP,OAAO,CAACkP,KAAK,CAAC;MAC3CD,MAAM,GAAGA,MAAM,IAAIjP,OAAO,CAACiP,MAAM;MACjC,OAAO;QACLC,KAAK,EAALA,KAAK;QACLD,MAAM,EAAEtc,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEihB,WAAW,GAAGxjB,IAAI,CAACoE,KAAK,CAACmY,KAAK,GAAGiH,WAAW,CAAC,GAAGlH,MAAM;MAC5E,CAAC;IACH;EAAC;IAAArd,GAAA;IAAAC,KAAA,EACD,SAAAizB,WAAWN,MAAM,EAAE;MACjB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAF,YAAA;AAAA;AAAA,IAGGS,aAAa,0BAAAC,aAAA;EAAApX,SAAA,CAAAmX,aAAA,EAAAC,aAAA;EAAA,IAAAC,OAAA,GAAAnX,YAAA,CAAAiX,aAAA;EAAA,SAAAA,cAAA;IAAA3zB,eAAA,OAAA2zB,aAAA;IAAA,OAAAE,OAAA,CAAArwB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAozB,aAAA;IAAAnzB,GAAA;IAAAC,KAAA,EACjB,SAAA0yB,eAAe5wB,IAAI,EAAE;MACnB,OAAOA,IAAI,IAAIA,IAAI,CAACsQ,UAAU,IAAItQ,IAAI,CAACsQ,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI;IACjE;EAAC;EAAA,OAAA8gB,aAAA;AAAA,EAHyBT,YAAY;AAMxC,IAAMY,WAAW,GAAG,UAAU;AAC9B,IAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,SAAS;EACnBC,YAAY,EAAE,YAAY;EAC1BC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAE,SAAS;EACpBC,YAAY,EAAE,UAAU;EACxBC,UAAU,EAAE;AACd,CAAC;AACD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAGh0B,KAAK;EAAA,OAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;AAAA;AAC7D,SAASi0B,UAAUA,CAACtB,MAAM,EAAErO,WAAW,EAAE;EACvC,IAAMK,KAAK,GAAGgO,MAAM,CAAChO,KAAK;EAC1B,IAAMuP,YAAY,GAAGvB,MAAM,CAACwB,YAAY,CAAC,QAAQ,CAAC;EAClD,IAAMC,WAAW,GAAGzB,MAAM,CAACwB,YAAY,CAAC,OAAO,CAAC;EAChDxB,MAAM,CAACU,WAAW,CAAC,GAAG;IACpBzyB,OAAO,EAAE;MACPwc,MAAM,EAAE8W,YAAY;MACpB7W,KAAK,EAAE+W,WAAW;MAClBzP,KAAK,EAAE;QACLoE,OAAO,EAAEpE,KAAK,CAACoE,OAAO;QACtB3L,MAAM,EAAEuH,KAAK,CAACvH,MAAM;QACpBC,KAAK,EAAEsH,KAAK,CAACtH;MACf;IACF;EACF,CAAC;EACDsH,KAAK,CAACoE,OAAO,GAAGpE,KAAK,CAACoE,OAAO,IAAI,OAAO;EACxCpE,KAAK,CAAC0P,SAAS,GAAG1P,KAAK,CAAC0P,SAAS,IAAI,YAAY;EACjD,IAAIL,aAAa,CAACI,WAAW,CAAC,EAAE;IAC9B,IAAME,YAAY,GAAG/8B,YAAY,CAACo7B,MAAM,EAAE,OAAO,CAAC;IAClD,IAAI2B,YAAY,KAAKz0B,SAAS,EAAE;MAC9B8yB,MAAM,CAACtV,KAAK,GAAGiX,YAAY;IAC7B;EACF;EACA,IAAIN,aAAa,CAACE,YAAY,CAAC,EAAE;IAC/B,IAAIvB,MAAM,CAAChO,KAAK,CAACvH,MAAM,KAAK,EAAE,EAAE;MAC9BuV,MAAM,CAACvV,MAAM,GAAGuV,MAAM,CAACtV,KAAK,IAAIiH,WAAW,IAAI,CAAC,CAAC;IACnD,CAAC,MAAM;MACL,IAAMiQ,aAAa,GAAGh9B,YAAY,CAACo7B,MAAM,EAAE,QAAQ,CAAC;MACpD,IAAI4B,aAAa,KAAK10B,SAAS,EAAE;QAC/B8yB,MAAM,CAACvV,MAAM,GAAGmX,aAAa;MAC/B;IACF;EACF;EACA,OAAO5B,MAAM;AACf;AACA,IAAM6B,oBAAoB,GAAG78B,4BAA4B,GAAG;EAAC88B,OAAO,EAAE;AAAI,CAAC,GAAG,KAAK;AACnF,SAASC,WAAWA,CAACC,IAAI,EAAEt0B,IAAI,EAAEyyB,QAAQ,EAAE;EACzC6B,IAAI,CAAC9B,gBAAgB,CAACxyB,IAAI,EAAEyyB,QAAQ,EAAE0B,oBAAoB,CAAC;AAC7D;AACA,SAASI,cAAcA,CAAC10B,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;EAC7C5yB,KAAK,CAACyyB,MAAM,CAACI,mBAAmB,CAAC1yB,IAAI,EAAEyyB,QAAQ,EAAE0B,oBAAoB,CAAC;AACxE;AACA,SAASK,eAAeA,CAACnyB,KAAK,EAAExC,KAAK,EAAE;EACrC,IAAMG,IAAI,GAAGizB,WAAW,CAAC5wB,KAAK,CAACrC,IAAI,CAAC,IAAIqC,KAAK,CAACrC,IAAI;EAClD,IAAAy0B,qBAAA,GAAer+B,qBAAqB,CAACiM,KAAK,EAAExC,KAAK,CAAC;IAA3C1J,CAAC,GAAAs+B,qBAAA,CAADt+B,CAAC;IAAEE,CAAC,GAAAo+B,qBAAA,CAADp+B,CAAC;EACX,OAAO;IACL2J,IAAI,EAAJA,IAAI;IACJH,KAAK,EAALA,KAAK;IACL60B,MAAM,EAAEryB,KAAK;IACblM,CAAC,EAAEA,CAAC,KAAKqJ,SAAS,GAAGrJ,CAAC,GAAG,IAAI;IAC7BE,CAAC,EAAEA,CAAC,KAAKmJ,SAAS,GAAGnJ,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAASs+B,oBAAoBA,CAAC90B,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAGzyB,KAAK,CAACyyB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIt7B,cAAc,CAACs7B,MAAM,CAAC;EAClD,IAAMxkB,OAAO,GAAG8mB,SAAS,IAAItC,MAAM;EACnC,IAAMuC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,UAAAC,OAAO,EAAI;IAC/C,IAAMrnB,MAAM,GAAG1W,cAAc,CAAC8W,OAAO,CAAC;IACtCinB,OAAO,CAAC10B,OAAO,CAAC,UAAAwZ,KAAK,EAAI;MACvB,KAAK,IAAItmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsmB,KAAK,CAACmb,UAAU,CAAC9zB,MAAM,EAAE3N,CAAC,EAAE,EAAE;QAChD,IAAM0hC,KAAK,GAAGpb,KAAK,CAACmb,UAAU,CAACzhC,CAAC,CAAC;QACjC,IAAI0hC,KAAK,KAAKnnB,OAAO,IAAImnB,KAAK,KAAKvnB,MAAM,EAAE;UACzC+kB,QAAQ,CAAC5Y,KAAK,CAACxV,MAAM,CAAC;QACxB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFwwB,QAAQ,CAACK,OAAO,CAACC,QAAQ,EAAE;IAACC,SAAS,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAC5D,OAAOR,QAAQ;AACjB;AACA,SAASS,oBAAoBA,CAACz1B,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAGzyB,KAAK,CAACyyB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIt7B,cAAc,CAACs7B,MAAM,CAAC;EAClD,IAAI,CAACsC,SAAS,EAAE;IACd;EACF;EACA,IAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,UAAAC,OAAO,EAAI;IAC/CA,OAAO,CAAC10B,OAAO,CAAC,UAAAwZ,KAAK,EAAI;MACvB,KAAK,IAAItmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsmB,KAAK,CAAC0b,YAAY,CAACr0B,MAAM,EAAE3N,CAAC,EAAE,EAAE;QAClD,IAAIsmB,KAAK,CAAC0b,YAAY,CAAChiC,CAAC,CAAC,KAAK++B,MAAM,EAAE;UACpCG,QAAQ,CAAC,CAAC;UACV;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFoC,QAAQ,CAACK,OAAO,CAACN,SAAS,EAAE;IAACQ,SAAS,EAAE;EAAI,CAAC,CAAC;EAC9C,OAAOP,QAAQ;AACjB;AACA,IAAMW,kBAAkB,GAAG,IAAIn2B,GAAG,CAAC,CAAC;AACpC,IAAIo2B,mBAAmB,GAAG,CAAC;AAC3B,SAASC,cAAcA,CAAA,EAAG;EACxB,IAAMC,GAAG,GAAG50B,MAAM,CAAC60B,gBAAgB;EACnC,IAAID,GAAG,KAAKF,mBAAmB,EAAE;IAC/B;EACF;EACAA,mBAAmB,GAAGE,GAAG;EACzBH,kBAAkB,CAACn1B,OAAO,CAAC,UAACwG,MAAM,EAAEhH,KAAK,EAAK;IAC5C,IAAIA,KAAK,CAACg2B,uBAAuB,KAAKF,GAAG,EAAE;MACzC9uB,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;AACJ;AACA,SAASivB,6BAA6BA,CAACj2B,KAAK,EAAEgH,MAAM,EAAE;EACpD,IAAI,CAAC2uB,kBAAkB,CAAChtB,IAAI,EAAE;IAC5BzH,MAAM,CAACyxB,gBAAgB,CAAC,QAAQ,EAAEkD,cAAc,CAAC;EACnD;EACAF,kBAAkB,CAACrzB,GAAG,CAACtC,KAAK,EAAEgH,MAAM,CAAC;AACvC;AACA,SAASkvB,+BAA+BA,CAACl2B,KAAK,EAAE;EAC9C21B,kBAAkB,CAACnyB,MAAM,CAACxD,KAAK,CAAC;EAChC,IAAI,CAAC21B,kBAAkB,CAAChtB,IAAI,EAAE;IAC5BzH,MAAM,CAAC2xB,mBAAmB,CAAC,QAAQ,EAAEgD,cAAc,CAAC;EACtD;AACF;AACA,SAASM,oBAAoBA,CAACn2B,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAGzyB,KAAK,CAACyyB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIt7B,cAAc,CAACs7B,MAAM,CAAC;EAClD,IAAI,CAACsC,SAAS,EAAE;IACd;EACF;EACA,IAAM/tB,MAAM,GAAGzP,SAAS,CAAC,UAAC4lB,KAAK,EAAED,MAAM,EAAK;IAC1C,IAAM9mB,CAAC,GAAG2+B,SAAS,CAACqB,WAAW;IAC/BxD,QAAQ,CAACzV,KAAK,EAAED,MAAM,CAAC;IACvB,IAAI9mB,CAAC,GAAG2+B,SAAS,CAACqB,WAAW,EAAE;MAC7BxD,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE1xB,MAAM,CAAC;EACV,IAAM8zB,QAAQ,GAAG,IAAIqB,cAAc,CAAC,UAAAnB,OAAO,EAAI;IAC7C,IAAMlb,KAAK,GAAGkb,OAAO,CAAC,CAAC,CAAC;IACxB,IAAM/X,KAAK,GAAGnD,KAAK,CAACsc,WAAW,CAACnZ,KAAK;IACrC,IAAMD,MAAM,GAAGlD,KAAK,CAACsc,WAAW,CAACpZ,MAAM;IACvC,IAAIC,KAAK,KAAK,CAAC,IAAID,MAAM,KAAK,CAAC,EAAE;MAC/B;IACF;IACAlW,MAAM,CAACmW,KAAK,EAAED,MAAM,CAAC;EACvB,CAAC,CAAC;EACF8X,QAAQ,CAACK,OAAO,CAACN,SAAS,CAAC;EAC3BkB,6BAA6B,CAACj2B,KAAK,EAAEgH,MAAM,CAAC;EAC5C,OAAOguB,QAAQ;AACjB;AACA,SAASuB,eAAeA,CAACv2B,KAAK,EAAEG,IAAI,EAAE60B,QAAQ,EAAE;EAC9C,IAAIA,QAAQ,EAAE;IACZA,QAAQ,CAACwB,UAAU,CAAC,CAAC;EACvB;EACA,IAAIr2B,IAAI,KAAK,QAAQ,EAAE;IACrB+1B,+BAA+B,CAACl2B,KAAK,CAAC;EACxC;AACF;AACA,SAASy2B,oBAAoBA,CAACz2B,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAGzyB,KAAK,CAACyyB,MAAM;EAC3B,IAAMiE,KAAK,GAAGn/B,SAAS,CAAC,UAACiL,KAAK,EAAK;IACjC,IAAIxC,KAAK,CAAC8O,GAAG,KAAK,IAAI,EAAE;MACtB8jB,QAAQ,CAAC+B,eAAe,CAACnyB,KAAK,EAAExC,KAAK,CAAC,CAAC;IACzC;EACF,CAAC,EAAEA,KAAK,EAAE,UAAC6X,IAAI,EAAK;IAClB,IAAMrV,KAAK,GAAGqV,IAAI,CAAC,CAAC,CAAC;IACrB,OAAO,CAACrV,KAAK,EAAEA,KAAK,CAACge,OAAO,EAAEhe,KAAK,CAACie,OAAO,CAAC;EAC9C,CAAC,CAAC;EACF+T,WAAW,CAAC/B,MAAM,EAAEtyB,IAAI,EAAEu2B,KAAK,CAAC;EAChC,OAAOA,KAAK;AACd;AAAC,IACKC,WAAW,0BAAAC,cAAA;EAAA/a,SAAA,CAAA8a,WAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAA9a,YAAA,CAAA4a,WAAA;EAAA,SAAAA,YAAA;IAAAt3B,eAAA,OAAAs3B,WAAA;IAAA,OAAAE,QAAA,CAAAh0B,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA+2B,WAAA;IAAA92B,GAAA;IAAAC,KAAA,EACf,SAAA0yB,eAAeC,MAAM,EAAErO,WAAW,EAAE;MAClC,IAAMlP,OAAO,GAAGud,MAAM,IAAIA,MAAM,CAACvgB,UAAU,IAAIugB,MAAM,CAACvgB,UAAU,CAAC,IAAI,CAAC;MACtE,IAAIgD,OAAO,IAAIA,OAAO,CAACud,MAAM,KAAKA,MAAM,EAAE;QACxCsB,UAAU,CAACtB,MAAM,EAAErO,WAAW,CAAC;QAC/B,OAAOlP,OAAO;MAChB;MACA,OAAO,IAAI;IACb;EAAC;IAAArV,GAAA;IAAAC,KAAA,EACD,SAAA4yB,eAAexd,OAAO,EAAE;MACtB,IAAMud,MAAM,GAAGvd,OAAO,CAACud,MAAM;MAC7B,IAAI,CAACA,MAAM,CAACU,WAAW,CAAC,EAAE;QACxB,OAAO,KAAK;MACd;MACA,IAAMzyB,OAAO,GAAG+xB,MAAM,CAACU,WAAW,CAAC,CAACzyB,OAAO;MAC3C,CAAC,QAAQ,EAAE,OAAO,CAAC,CAACF,OAAO,CAAC,UAACiE,IAAI,EAAK;QACpC,IAAM3E,KAAK,GAAGY,OAAO,CAAC+D,IAAI,CAAC;QAC3B,IAAI5P,aAAa,CAACiL,KAAK,CAAC,EAAE;UACxB2yB,MAAM,CAACqE,eAAe,CAACryB,IAAI,CAAC;QAC9B,CAAC,MAAM;UACLguB,MAAM,CAACsE,YAAY,CAACtyB,IAAI,EAAE3E,KAAK,CAAC;QAClC;MACF,CAAC,CAAC;MACF,IAAM2kB,KAAK,GAAG/jB,OAAO,CAAC+jB,KAAK,IAAI,CAAC,CAAC;MACjCle,MAAM,CAACC,IAAI,CAACie,KAAK,CAAC,CAACjkB,OAAO,CAAC,UAACX,GAAG,EAAK;QAClC4yB,MAAM,CAAChO,KAAK,CAAC5kB,GAAG,CAAC,GAAG4kB,KAAK,CAAC5kB,GAAG,CAAC;MAChC,CAAC,CAAC;MACF4yB,MAAM,CAACtV,KAAK,GAAGsV,MAAM,CAACtV,KAAK;MAC3B,OAAOsV,MAAM,CAACU,WAAW,CAAC;MAC1B,OAAO,IAAI;IACb;EAAC;IAAAtzB,GAAA;IAAAC,KAAA,EACD,SAAA6yB,iBAAiB3yB,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,EAAE;MACtC,IAAI,CAACC,mBAAmB,CAAC7yB,KAAK,EAAEG,IAAI,CAAC;MACrC,IAAM62B,OAAO,GAAGh3B,KAAK,CAACi3B,QAAQ,KAAKj3B,KAAK,CAACi3B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,IAAMC,QAAQ,GAAG;QACfC,MAAM,EAAErC,oBAAoB;QAC5BsC,MAAM,EAAE3B,oBAAoB;QAC5BzuB,MAAM,EAAEmvB;MACV,CAAC;MACD,IAAMjL,OAAO,GAAGgM,QAAQ,CAAC/2B,IAAI,CAAC,IAAIs2B,oBAAoB;MACtDO,OAAO,CAAC72B,IAAI,CAAC,GAAG+qB,OAAO,CAAClrB,KAAK,EAAEG,IAAI,EAAEyyB,QAAQ,CAAC;IAChD;EAAC;IAAA/yB,GAAA;IAAAC,KAAA,EACD,SAAA+yB,oBAAoB7yB,KAAK,EAAEG,IAAI,EAAE;MAC/B,IAAM62B,OAAO,GAAGh3B,KAAK,CAACi3B,QAAQ,KAAKj3B,KAAK,CAACi3B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,IAAMP,KAAK,GAAGM,OAAO,CAAC72B,IAAI,CAAC;MAC3B,IAAI,CAACu2B,KAAK,EAAE;QACV;MACF;MACA,IAAMQ,QAAQ,GAAG;QACfC,MAAM,EAAEZ,eAAe;QACvBa,MAAM,EAAEb,eAAe;QACvBvvB,MAAM,EAAEuvB;MACV,CAAC;MACD,IAAMrL,OAAO,GAAGgM,QAAQ,CAAC/2B,IAAI,CAAC,IAAIu0B,cAAc;MAChDxJ,OAAO,CAAClrB,KAAK,EAAEG,IAAI,EAAEu2B,KAAK,CAAC;MAC3BM,OAAO,CAAC72B,IAAI,CAAC,GAAGR,SAAS;IAC3B;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAgzB,oBAAA,EAAsB;MACpB,OAAO5xB,MAAM,CAAC60B,gBAAgB;IAChC;EAAC;IAAAl2B,GAAA;IAAAC,KAAA,EACD,SAAA7I,eAAew7B,MAAM,EAAEtV,KAAK,EAAED,MAAM,EAAEkH,WAAW,EAAE;MACjD,OAAOntB,eAAc,CAACw7B,MAAM,EAAEtV,KAAK,EAAED,MAAM,EAAEkH,WAAW,CAAC;IAC3D;EAAC;IAAAvkB,GAAA;IAAAC,KAAA,EACD,SAAAizB,WAAWN,MAAM,EAAE;MACjB,IAAMsC,SAAS,GAAG59B,cAAc,CAACs7B,MAAM,CAAC;MACxC,OAAO,CAAC,EAAEsC,SAAS,IAAIA,SAAS,CAACsC,WAAW,CAAC;IAC/C;EAAC;EAAA,OAAAV,WAAA;AAAA,EAlEuBpE,YAAY;AAqEtC,SAAS+E,eAAeA,CAAC7E,MAAM,EAAE;EAC/B,IAAI,CAAC96B,eAAe,CAAC,CAAC,IAAK,OAAO4/B,eAAe,KAAK,WAAW,IAAI9E,MAAM,YAAY8E,eAAgB,EAAE;IACvG,OAAOvE,aAAa;EACtB;EACA,OAAO2D,WAAW;AACpB;AAAC,IAEKa,OAAO;EACX,SAAAA,QAAA,EAAc;IAAAn4B,eAAA,OAAAm4B,OAAA;IACZ,IAAI,CAAClhC,CAAC,GAAGqJ,SAAS;IAClB,IAAI,CAACnJ,CAAC,GAAGmJ,SAAS;IAClB,IAAI,CAAC8F,MAAM,GAAG,KAAK;IACnB,IAAI,CAACyC,OAAO,GAAGvI,SAAS;IACxB,IAAI,CAAC4I,WAAW,GAAG5I,SAAS;EAC9B;EAACC,YAAA,CAAA43B,OAAA;IAAA33B,GAAA;IAAAC,KAAA,EACD,SAAA23B,gBAAgB9K,gBAAgB,EAAE;MAChC,IAAA+K,cAAA,GAAe,IAAI,CAACC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEhL,gBAAgB,CAAC;QAAnDr2B,CAAC,GAAAohC,cAAA,CAADphC,CAAC;QAAEE,CAAC,GAAAkhC,cAAA,CAADlhC,CAAC;MACX,OAAO;QAACF,CAAC,EAADA,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC;IACf;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAA83B,SAAA,EAAW;MACT,OAAO3hC,QAAQ,CAAC,IAAI,CAACK,CAAC,CAAC,IAAIL,QAAQ,CAAC,IAAI,CAACO,CAAC,CAAC;IAC7C;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAA63B,SAASlvB,KAAK,EAAEovB,KAAK,EAAE;MACrB,IAAM72B,EAAE,GAAG,IAAI;MACf,IAAMf,KAAK,GAAG,IAAI,CAACsI,WAAW;MAC9B,IAAI,CAACsvB,KAAK,IAAI,CAAC53B,KAAK,EAAE;QACpB,OAAOe,EAAE;MACX;MACA,IAAM82B,GAAG,GAAG,CAAC,CAAC;MACdrvB,KAAK,CAACjI,OAAO,CAAC,UAAAiE,IAAI,EAAI;QACpBqzB,GAAG,CAACrzB,IAAI,CAAC,GAAGxE,KAAK,CAACwE,IAAI,CAAC,IAAIxE,KAAK,CAACwE,IAAI,CAAC,CAACgB,MAAM,CAAC,CAAC,GAAGxF,KAAK,CAACwE,IAAI,CAAC,CAACc,GAAG,GAAGvE,EAAE,CAACyD,IAAI,CAAC;MAC9E,CAAC,CAAC;MACF,OAAOqzB,GAAG;IACZ;EAAC;EAAA,OAAAN,OAAA;AAAA;AAEHA,OAAO,CAAC/jC,QAAQ,GAAG,CAAC,CAAC;AACrB+jC,OAAO,CAACO,aAAa,GAAGp4B,SAAS;AAEjC,IAAMq4B,UAAU,GAAG;EACjBhwB,MAAM,WAAAA,OAAClI,KAAK,EAAE;IACZ,OAAOjM,OAAO,CAACiM,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;EAC5C,CAAC;EACDm4B,OAAO,WAAAA,QAACC,SAAS,EAAE/tB,KAAK,EAAE6O,KAAK,EAAE;IAC/B,IAAIkf,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,IAAMrU,MAAM,GAAG,IAAI,CAAC7jB,KAAK,CAACkI,OAAO,CAAC2b,MAAM;IACxC,IAAIsU,QAAQ;IACZ,IAAIC,KAAK,GAAGF,SAAS;IACrB,IAAIlf,KAAK,CAAC3X,MAAM,GAAG,CAAC,EAAE;MACpB,IAAMg3B,OAAO,GAAGz3B,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACkY,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK,CAAC,EAAEc,IAAI,CAACkY,GAAG,CAACE,KAAK,CAACA,KAAK,CAAC3X,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,CAAC,CAAC;MAC3F,IAAIu4B,OAAO,GAAG,IAAI,IAAIA,OAAO,GAAG,KAAK,EAAE;QACrCF,QAAQ,GAAG,YAAY;MACzB;MACAC,KAAK,GAAGE,cAAc,CAACJ,SAAS,EAAElf,KAAK,CAAC;IAC1C;IACA,IAAMuf,QAAQ,GAAG1gC,KAAK,CAAC+I,IAAI,CAACkY,GAAG,CAACsf,KAAK,CAAC,CAAC;IACvC,IAAMI,UAAU,GAAG53B,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACoE,KAAK,CAACuzB,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACvE,IAAMrwB,OAAO,GAAG;MAACiwB,QAAQ,EAARA,QAAQ;MAAEM,qBAAqB,EAAED,UAAU;MAAEE,qBAAqB,EAAEF;IAAU,CAAC;IAChGjyB,MAAM,CAACqC,MAAM,CAACV,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC8Q,KAAK,CAACoR,MAAM,CAAC;IACjD,OAAO30B,YAAY,CAACyiC,SAAS,EAAErU,MAAM,EAAE3b,OAAO,CAAC;EACjD,CAAC;EACDywB,WAAW,WAAAA,YAACT,SAAS,EAAE/tB,KAAK,EAAE6O,KAAK,EAAE;IACnC,IAAIkf,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,IAAMtyB,MAAM,GAAGsyB,SAAS,GAAIt3B,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE7rB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACqgC,SAAS,CAAC,CAAC,CAAE;IACvE,IAAItyB,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChD,OAAOoyB,UAAU,CAACC,OAAO,CAACh3B,IAAI,CAAC,IAAI,EAAEi3B,SAAS,EAAE/tB,KAAK,EAAE6O,KAAK,CAAC;IAC/D;IACA,OAAO,EAAE;EACX;AACF,CAAC;AACD,SAASsf,cAAcA,CAACJ,SAAS,EAAElf,KAAK,EAAE;EACxC,IAAIof,KAAK,GAAGpf,KAAK,CAAC3X,MAAM,GAAG,CAAC,GAAG2X,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK,GAAGkZ,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK,GAAGkZ,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK,GAAGkZ,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK;EAChG,IAAIc,IAAI,CAACkY,GAAG,CAACsf,KAAK,CAAC,IAAI,CAAC,IAAIF,SAAS,KAAKt3B,IAAI,CAACoE,KAAK,CAACkzB,SAAS,CAAC,EAAE;IAC/DE,KAAK,GAAGF,SAAS,GAAGt3B,IAAI,CAACoE,KAAK,CAACkzB,SAAS,CAAC;EAC3C;EACA,OAAOE,KAAK;AACd;AACA,IAAIQ,KAAK,GAAG;EAACZ,UAAU,EAAVA;AAAU,CAAC;AAExBvkC,QAAQ,CAAC6O,GAAG,CAAC,OAAO,EAAE;EACpBumB,OAAO,EAAE,IAAI;EACbjK,MAAM,EAAE,KAAK;EACbzV,OAAO,EAAE,KAAK;EACd4V,WAAW,EAAE,KAAK;EAClB8Z,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,CAAC;EACRja,IAAI,EAAE;IACJgK,OAAO,EAAE,IAAI;IACb9D,SAAS,EAAE,CAAC;IACZgU,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,IAAI;IACrBC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE,SAAAA,UAACtqB,IAAI,EAAE3G,OAAO;MAAA,OAAKA,OAAO,CAAC6c,SAAS;IAAA;IAC/CqU,SAAS,EAAE,SAAAA,UAACvqB,IAAI,EAAE3G,OAAO;MAAA,OAAKA,OAAO,CAAC3U,KAAK;IAAA;IAC3CqrB,MAAM,EAAE,KAAK;IACbya,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,GAAG;IACrBvV,WAAW,EAAE;EACf,CAAC;EACD9D,KAAK,EAAE;IACL4I,OAAO,EAAE,KAAK;IACdnE,IAAI,EAAE,EAAE;IACRiN,OAAO,EAAE;MACPnoB,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV;EACF,CAAC;EACDsP,KAAK,EAAE;IACLugB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,EAAE;IACnBhI,OAAO,EAAE,CAAC;IACV9I,OAAO,EAAE,IAAI;IACb+Q,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,CAAC;IAClBC,WAAW,EAAE,CAAC;IACd3hC,QAAQ,EAAEygC,KAAK,CAACZ,UAAU,CAAChwB,MAAM;IACjC+xB,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,MAAM;IAClBC,iBAAiB,EAAE,KAAK;IACxBC,aAAa,EAAE,2BAA2B;IAC1CC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AACF5mC,QAAQ,CAAC6mC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnD7mC,QAAQ,CAAC6mC,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,CAAC;AACxD7mC,QAAQ,CAAC6mC,KAAK,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,aAAa,CAAC;AAC9D7mC,QAAQ,CAAC6mC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnD7mC,QAAQ,CAACiT,QAAQ,CAAC,OAAO,EAAE;EACzBC,SAAS,EAAE,KAAK;EAChBE,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAK,CAACA,IAAI,CAACyzB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAACzzB,IAAI,CAACyzB,UAAU,CAAC,OAAO,CAAC,IAAIzzB,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ;EAAA;EAC1HF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,gBAAgB;EAAA;AAC1E,CAAC,CAAC;AACFrT,QAAQ,CAACiT,QAAQ,CAAC,QAAQ,EAAE;EAC1BC,SAAS,EAAE;AACb,CAAC,CAAC;AACFlT,QAAQ,CAACiT,QAAQ,CAAC,aAAa,EAAE;EAC/BG,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,iBAAiB,IAAIA,IAAI,KAAK,UAAU;EAAA;EACxEF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,iBAAiB;EAAA;AAClD,CAAC,CAAC;AAEF,SAAS8yB,QAAQA,CAAC5wB,KAAK,EAAEgQ,KAAK,EAAE;EAC9B,IAAMwhB,QAAQ,GAAGxxB,KAAK,CAACd,OAAO,CAAC8Q,KAAK;EACpC,IAAMyhB,UAAU,GAAGD,QAAQ,CAACE,aAAa,IAAIC,iBAAiB,CAAC3xB,KAAK,CAAC;EACrE,IAAM4xB,YAAY,GAAGJ,QAAQ,CAACR,KAAK,CAACa,OAAO,GAAGC,eAAe,CAAC9hB,KAAK,CAAC,GAAG,EAAE;EACzE,IAAM+hB,eAAe,GAAGH,YAAY,CAACv5B,MAAM;EAC3C,IAAM25B,KAAK,GAAGJ,YAAY,CAAC,CAAC,CAAC;EAC7B,IAAMvd,IAAI,GAAGud,YAAY,CAACG,eAAe,GAAG,CAAC,CAAC;EAC9C,IAAME,QAAQ,GAAG,EAAE;EACnB,IAAIF,eAAe,GAAGN,UAAU,EAAE;IAChCS,UAAU,CAACliB,KAAK,EAAEiiB,QAAQ,EAAEL,YAAY,EAAEG,eAAe,GAAGN,UAAU,CAAC;IACvE,OAAOQ,QAAQ;EACjB;EACA,IAAM7Y,OAAO,GAAG+Y,gBAAgB,CAACP,YAAY,EAAE5hB,KAAK,EAAEyhB,UAAU,CAAC;EACjE,IAAIM,eAAe,GAAG,CAAC,EAAE;IACvB,IAAIrnC,CAAC,EAAEwW,IAAI;IACX,IAAMkxB,eAAe,GAAGL,eAAe,GAAG,CAAC,GAAGn6B,IAAI,CAACy6B,KAAK,CAAC,CAAChe,IAAI,GAAG2d,KAAK,KAAKD,eAAe,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACvGlb,IAAI,CAAC7G,KAAK,EAAEiiB,QAAQ,EAAE7Y,OAAO,EAAEvtB,aAAa,CAACumC,eAAe,CAAC,GAAG,CAAC,GAAGJ,KAAK,GAAGI,eAAe,EAAEJ,KAAK,CAAC;IACnG,KAAKtnC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG6wB,eAAe,GAAG,CAAC,EAAErnC,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;MACrDmsB,IAAI,CAAC7G,KAAK,EAAEiiB,QAAQ,EAAE7Y,OAAO,EAAEwY,YAAY,CAAClnC,CAAC,CAAC,EAAEknC,YAAY,CAAClnC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE;IACAmsB,IAAI,CAAC7G,KAAK,EAAEiiB,QAAQ,EAAE7Y,OAAO,EAAE/E,IAAI,EAAExoB,aAAa,CAACumC,eAAe,CAAC,GAAGpiB,KAAK,CAAC3X,MAAM,GAAGgc,IAAI,GAAG+d,eAAe,CAAC;IAC5G,OAAOH,QAAQ;EACjB;EACApb,IAAI,CAAC7G,KAAK,EAAEiiB,QAAQ,EAAE7Y,OAAO,CAAC;EAC9B,OAAO6Y,QAAQ;AACjB;AACA,SAASN,iBAAiBA,CAAC3xB,KAAK,EAAE;EAChC,IAAM4V,MAAM,GAAG5V,KAAK,CAACd,OAAO,CAAC0W,MAAM;EACnC,IAAMsa,UAAU,GAAGlwB,KAAK,CAACsyB,SAAS,CAAC,CAAC;EACpC,IAAMC,QAAQ,GAAGvyB,KAAK,CAAC2P,OAAO,GAAGugB,UAAU,IAAIta,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9D,IAAM4c,QAAQ,GAAGxyB,KAAK,CAACyyB,UAAU,GAAGvC,UAAU;EAC9C,OAAOt4B,IAAI,CAACoE,KAAK,CAACpE,IAAI,CAACC,GAAG,CAAC06B,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AACjD;AACA,SAASL,gBAAgBA,CAACP,YAAY,EAAE5hB,KAAK,EAAEyhB,UAAU,EAAE;EACzD,IAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAY,CAAC;EACrD,IAAMxY,OAAO,GAAGpJ,KAAK,CAAC3X,MAAM,GAAGo5B,UAAU;EACzC,IAAI,CAACiB,gBAAgB,EAAE;IACrB,OAAO96B,IAAI,CAACuC,GAAG,CAACif,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,IAAMwZ,OAAO,GAAG7jC,UAAU,CAAC2jC,gBAAgB,CAAC;EAC5C,KAAK,IAAIhoC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0xB,OAAO,CAACv6B,MAAM,GAAG,CAAC,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;IACxD,IAAMqQ,MAAM,GAAG63B,OAAO,CAACloC,CAAC,CAAC;IACzB,IAAIqQ,MAAM,GAAGqe,OAAO,EAAE;MACpB,OAAOre,MAAM;IACf;EACF;EACA,OAAOnD,IAAI,CAACuC,GAAG,CAACif,OAAO,EAAE,CAAC,CAAC;AAC7B;AACA,SAAS0Y,eAAeA,CAAC9hB,KAAK,EAAE;EAC9B,IAAM6iB,MAAM,GAAG,EAAE;EACjB,IAAInoC,CAAC,EAAEwW,IAAI;EACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG8O,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;IAC9C,IAAIslB,KAAK,CAACtlB,CAAC,CAAC,CAACsmC,KAAK,EAAE;MAClB6B,MAAM,CAACn5B,IAAI,CAAChP,CAAC,CAAC;IAChB;EACF;EACA,OAAOmoC,MAAM;AACf;AACA,SAASX,UAAUA,CAACliB,KAAK,EAAEiiB,QAAQ,EAAEL,YAAY,EAAExY,OAAO,EAAE;EAC1D,IAAI/P,KAAK,GAAG,CAAC;EACb,IAAIwH,IAAI,GAAG+gB,YAAY,CAAC,CAAC,CAAC;EAC1B,IAAIlnC,CAAC;EACL0uB,OAAO,GAAGxhB,IAAI,CAACk7B,IAAI,CAAC1Z,OAAO,CAAC;EAC5B,KAAK1uB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslB,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACjC,IAAIA,CAAC,KAAKmmB,IAAI,EAAE;MACdohB,QAAQ,CAACv4B,IAAI,CAACsW,KAAK,CAACtlB,CAAC,CAAC,CAAC;MACvB2e,KAAK,EAAE;MACPwH,IAAI,GAAG+gB,YAAY,CAACvoB,KAAK,GAAG+P,OAAO,CAAC;IACtC;EACF;AACF;AACA,SAASvC,IAAIA,CAAC7G,KAAK,EAAEiiB,QAAQ,EAAE7Y,OAAO,EAAE2Z,UAAU,EAAEC,QAAQ,EAAE;EAC5D,IAAMl7B,KAAK,GAAG/M,cAAc,CAACgoC,UAAU,EAAE,CAAC,CAAC;EAC3C,IAAM3yB,GAAG,GAAGxI,IAAI,CAACC,GAAG,CAAC9M,cAAc,CAACioC,QAAQ,EAAEhjB,KAAK,CAAC3X,MAAM,CAAC,EAAE2X,KAAK,CAAC3X,MAAM,CAAC;EAC1E,IAAIgR,KAAK,GAAG,CAAC;EACb,IAAIhR,MAAM,EAAE3N,CAAC,EAAEmmB,IAAI;EACnBuI,OAAO,GAAGxhB,IAAI,CAACk7B,IAAI,CAAC1Z,OAAO,CAAC;EAC5B,IAAI4Z,QAAQ,EAAE;IACZ36B,MAAM,GAAG26B,QAAQ,GAAGD,UAAU;IAC9B3Z,OAAO,GAAG/gB,MAAM,GAAGT,IAAI,CAACoE,KAAK,CAAC3D,MAAM,GAAG+gB,OAAO,CAAC;EACjD;EACAvI,IAAI,GAAG/Y,KAAK;EACZ,OAAO+Y,IAAI,GAAG,CAAC,EAAE;IACfxH,KAAK,EAAE;IACPwH,IAAI,GAAGjZ,IAAI,CAACy6B,KAAK,CAACv6B,KAAK,GAAGuR,KAAK,GAAG+P,OAAO,CAAC;EAC5C;EACA,KAAK1uB,CAAC,GAAGkN,IAAI,CAACuC,GAAG,CAACrC,KAAK,EAAE,CAAC,CAAC,EAAEpN,CAAC,GAAG0V,GAAG,EAAE1V,CAAC,EAAE,EAAE;IACzC,IAAIA,CAAC,KAAKmmB,IAAI,EAAE;MACdohB,QAAQ,CAACv4B,IAAI,CAACsW,KAAK,CAACtlB,CAAC,CAAC,CAAC;MACvB2e,KAAK,EAAE;MACPwH,IAAI,GAAGjZ,IAAI,CAACy6B,KAAK,CAACv6B,KAAK,GAAGuR,KAAK,GAAG+P,OAAO,CAAC;IAC5C;EACF;AACF;AACA,SAASuZ,cAAcA,CAACnkB,GAAG,EAAE;EAC3B,IAAMykB,GAAG,GAAGzkB,GAAG,CAACnW,MAAM;EACtB,IAAI3N,CAAC,EAAE82B,IAAI;EACX,IAAIyR,GAAG,GAAG,CAAC,EAAE;IACX,OAAO,KAAK;EACd;EACA,KAAKzR,IAAI,GAAGhT,GAAG,CAAC,CAAC,CAAC,EAAE9jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuoC,GAAG,EAAE,EAAEvoC,CAAC,EAAE;IACvC,IAAI8jB,GAAG,CAAC9jB,CAAC,CAAC,GAAG8jB,GAAG,CAAC9jB,CAAC,GAAG,CAAC,CAAC,KAAK82B,IAAI,EAAE;MAChC,OAAO,KAAK;IACd;EACF;EACA,OAAOA,IAAI;AACb;AAEA,IAAM0R,YAAY,GAAG,SAAfA,YAAYA,CAAIjC,KAAK;EAAA,OAAKA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK;AAAA;AAC/F,IAAMkC,cAAc,GAAG,SAAjBA,cAAcA,CAAInzB,KAAK,EAAEiS,IAAI,EAAE2D,MAAM;EAAA,OAAK3D,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,MAAM,GAAGjS,KAAK,CAACiS,IAAI,CAAC,GAAG2D,MAAM,GAAG5V,KAAK,CAACiS,IAAI,CAAC,GAAG2D,MAAM;AAAA;AAC/H,SAASwd,MAAMA,CAAC5kB,GAAG,EAAE6kB,QAAQ,EAAE;EAC7B,IAAMR,MAAM,GAAG,EAAE;EACjB,IAAMS,SAAS,GAAG9kB,GAAG,CAACnW,MAAM,GAAGg7B,QAAQ;EACvC,IAAMJ,GAAG,GAAGzkB,GAAG,CAACnW,MAAM;EACtB,IAAI3N,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGuoC,GAAG,EAAEvoC,CAAC,IAAI4oC,SAAS,EAAE;IAC9BT,MAAM,CAACn5B,IAAI,CAAC8U,GAAG,CAAC5W,IAAI,CAACoE,KAAK,CAACtR,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,OAAOmoC,MAAM;AACf;AACA,SAASU,mBAAmBA,CAACvzB,KAAK,EAAEmB,KAAK,EAAEqyB,eAAe,EAAE;EAC1D,IAAMn7B,MAAM,GAAG2H,KAAK,CAACgQ,KAAK,CAAC3X,MAAM;EACjC,IAAMo7B,UAAU,GAAG77B,IAAI,CAACC,GAAG,CAACsJ,KAAK,EAAE9I,MAAM,GAAG,CAAC,CAAC;EAC9C,IAAMP,KAAK,GAAGkI,KAAK,CAAC4U,WAAW;EAC/B,IAAMxU,GAAG,GAAGJ,KAAK,CAAC6U,SAAS;EAC3B,IAAM6e,OAAO,GAAG,IAAI;EACpB,IAAIC,SAAS,GAAG3zB,KAAK,CAACiQ,eAAe,CAACwjB,UAAU,CAAC;EACjD,IAAI7d,MAAM;EACV,IAAI4d,eAAe,EAAE;IACnB,IAAIn7B,MAAM,KAAK,CAAC,EAAE;MAChBud,MAAM,GAAGhe,IAAI,CAACuC,GAAG,CAACw5B,SAAS,GAAG77B,KAAK,EAAEsI,GAAG,GAAGuzB,SAAS,CAAC;IACvD,CAAC,MAAM,IAAIxyB,KAAK,KAAK,CAAC,EAAE;MACtByU,MAAM,GAAG,CAAC5V,KAAK,CAACiQ,eAAe,CAAC,CAAC,CAAC,GAAG0jB,SAAS,IAAI,CAAC;IACrD,CAAC,MAAM;MACL/d,MAAM,GAAG,CAAC+d,SAAS,GAAG3zB,KAAK,CAACiQ,eAAe,CAACwjB,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC;IAClE;IACAE,SAAS,IAAIF,UAAU,GAAGtyB,KAAK,GAAGyU,MAAM,GAAG,CAACA,MAAM;IAClD,IAAI+d,SAAS,GAAG77B,KAAK,GAAG47B,OAAO,IAAIC,SAAS,GAAGvzB,GAAG,GAAGszB,OAAO,EAAE;MAC5D;IACF;EACF;EACA,OAAOC,SAAS;AAClB;AACA,SAASC,cAAcA,CAACC,MAAM,EAAEx7B,MAAM,EAAE;EACtCtK,IAAI,CAAC8lC,MAAM,EAAE,UAACvnB,KAAK,EAAK;IACtB,IAAMwnB,EAAE,GAAGxnB,KAAK,CAACwnB,EAAE;IACnB,IAAMC,KAAK,GAAGD,EAAE,CAACz7B,MAAM,GAAG,CAAC;IAC3B,IAAI3N,CAAC;IACL,IAAIqpC,KAAK,GAAG17B,MAAM,EAAE;MAClB,KAAK3N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqpC,KAAK,EAAE,EAAErpC,CAAC,EAAE;QAC1B,OAAO4hB,KAAK,CAAC1K,IAAI,CAACkyB,EAAE,CAACppC,CAAC,CAAC,CAAC;MAC1B;MACAopC,EAAE,CAACnlB,MAAM,CAAC,CAAC,EAAEolB,KAAK,CAAC;IACrB;EACF,CAAC,CAAC;AACJ;AACA,SAASC,iBAAiBA,CAAC90B,OAAO,EAAE;EAClC,OAAOA,OAAO,CAAC+wB,SAAS,GAAG/wB,OAAO,CAACgxB,UAAU,GAAG,CAAC;AACnD;AACA,SAAS+D,cAAcA,CAAC/0B,OAAO,EAAEg1B,QAAQ,EAAE;EACzC,IAAI,CAACh1B,OAAO,CAAC2gB,OAAO,EAAE;IACpB,OAAO,CAAC;EACV;EACA,IAAMsU,IAAI,GAAG9jC,MAAM,CAAC6O,OAAO,CAACi1B,IAAI,EAAED,QAAQ,CAAC;EAC3C,IAAMvL,OAAO,GAAG96B,SAAS,CAACqR,OAAO,CAACypB,OAAO,CAAC;EAC1C,IAAMyL,KAAK,GAAGvpC,OAAO,CAACqU,OAAO,CAACwc,IAAI,CAAC,GAAGxc,OAAO,CAACwc,IAAI,CAACrjB,MAAM,GAAG,CAAC;EAC7D,OAAQ+7B,KAAK,GAAGD,IAAI,CAACE,UAAU,GAAI1L,OAAO,CAACzU,MAAM;AACnD;AACA,SAASogB,kBAAkBA,CAACzvB,MAAM,EAAE7E,KAAK,EAAE;EACzC,OAAOzC,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C7E,KAAK,EAALA,KAAK;IACL7I,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASo9B,iBAAiBA,CAAC1vB,MAAM,EAAE1D,KAAK,EAAEpI,IAAI,EAAE;EAC9C,OAAOwE,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C9L,IAAI,EAAJA,IAAI;IACJoI,KAAK,EAALA,KAAK;IACLhK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASq9B,UAAUA,CAACvD,KAAK,EAAEnO,QAAQ,EAAE3iB,OAAO,EAAE;EAC5C,IAAI2uB,GAAG,GAAGv+B,kBAAkB,CAAC0gC,KAAK,CAAC;EACnC,IAAK9wB,OAAO,IAAI2iB,QAAQ,KAAK,OAAO,IAAM,CAAC3iB,OAAO,IAAI2iB,QAAQ,KAAK,OAAQ,EAAE;IAC3EgM,GAAG,GAAGoE,YAAY,CAACpE,GAAG,CAAC;EACzB;EACA,OAAOA,GAAG;AACZ;AACA,SAAS2F,SAASA,CAACz0B,KAAK,EAAE4V,MAAM,EAAEkN,QAAQ,EAAEmO,KAAK,EAAE;EACjD,IAAOzwB,GAAG,GAAgCR,KAAK,CAAxCQ,GAAG;IAAEG,IAAI,GAA0BX,KAAK,CAAnCW,IAAI;IAAED,MAAM,GAAkBV,KAAK,CAA7BU,MAAM;IAAED,KAAK,GAAWT,KAAK,CAArBS,KAAK;IAAEzJ,KAAK,GAAIgJ,KAAK,CAAdhJ,KAAK;EACtC,IAAO6U,SAAS,GAAY7U,KAAK,CAA1B6U,SAAS;IAAEpH,MAAM,GAAIzN,KAAK,CAAfyN,MAAM;EACxB,IAAI0S,QAAQ,GAAG,CAAC;EAChB,IAAIyC,QAAQ,EAAE8a,MAAM,EAAEC,MAAM;EAC5B,IAAMzgB,MAAM,GAAGxT,MAAM,GAAGF,GAAG;EAC3B,IAAM2T,KAAK,GAAG1T,KAAK,GAAGE,IAAI;EAC1B,IAAIX,KAAK,CAAC4R,YAAY,CAAC,CAAC,EAAE;IACxB8iB,MAAM,GAAGjkC,cAAc,CAACwgC,KAAK,EAAEtwB,IAAI,EAAEF,KAAK,CAAC;IAC3C,IAAI9V,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;MACtB,IAAM8R,cAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/C,IAAMhsB,KAAK,GAAGgsB,QAAQ,CAAC8R,cAAc,CAAC;MACtCD,MAAM,GAAGlwB,MAAM,CAACmwB,cAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,KAAK,CAAC,GAAGod,MAAM,GAAG0B,MAAM;IAC3E,CAAC,MAAM,IAAIkN,QAAQ,KAAK,QAAQ,EAAE;MAChC6R,MAAM,GAAG,CAAC9oB,SAAS,CAACnL,MAAM,GAAGmL,SAAS,CAACrL,GAAG,IAAI,CAAC,GAAG0T,MAAM,GAAG0B,MAAM;IACnE,CAAC,MAAM;MACL+e,MAAM,GAAGxB,cAAc,CAACnzB,KAAK,EAAE8iB,QAAQ,EAAElN,MAAM,CAAC;IAClD;IACAgE,QAAQ,GAAGnZ,KAAK,GAAGE,IAAI;EACzB,CAAC,MAAM;IACL,IAAIhW,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;MACtB,IAAM8R,eAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/C,IAAMhsB,MAAK,GAAGgsB,QAAQ,CAAC8R,eAAc,CAAC;MACtCF,MAAM,GAAGjwB,MAAM,CAACmwB,eAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,MAAK,CAAC,GAAGqd,KAAK,GAAGyB,MAAM;IAC1E,CAAC,MAAM,IAAIkN,QAAQ,KAAK,QAAQ,EAAE;MAChC4R,MAAM,GAAG,CAAC7oB,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC,GAAG0T,KAAK,GAAGyB,MAAM;IAClE,CAAC,MAAM;MACL8e,MAAM,GAAGvB,cAAc,CAACnzB,KAAK,EAAE8iB,QAAQ,EAAElN,MAAM,CAAC;IAClD;IACA+e,MAAM,GAAGlkC,cAAc,CAACwgC,KAAK,EAAEvwB,MAAM,EAAEF,GAAG,CAAC;IAC3C2W,QAAQ,GAAG2L,QAAQ,KAAK,MAAM,GAAG,CAACj2B,OAAO,GAAGA,OAAO;EACrD;EACA,OAAO;IAAC6nC,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA,MAAM;IAAE/a,QAAQ,EAARA,QAAQ;IAAEzC,QAAQ,EAARA;EAAQ,CAAC;AAC7C;AAAC,IACK0d,KAAK,0BAAAC,QAAA;EAAAjiB,SAAA,CAAAgiB,KAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAhiB,YAAA,CAAA8hB,KAAA;EACT,SAAAA,MAAYt5B,GAAG,EAAE;IAAA,IAAAy5B,MAAA;IAAA3+B,eAAA,OAAAw+B,KAAA;IACfG,MAAA,GAAAD,QAAA,CAAA98B,IAAA;IACA+8B,MAAA,CAAK1yB,EAAE,GAAG/G,GAAG,CAAC+G,EAAE;IAChB0yB,MAAA,CAAK79B,IAAI,GAAGoE,GAAG,CAACpE,IAAI;IACpB69B,MAAA,CAAK91B,OAAO,GAAGvI,SAAS;IACxBq+B,MAAA,CAAKlvB,GAAG,GAAGvK,GAAG,CAACuK,GAAG;IAClBkvB,MAAA,CAAKh+B,KAAK,GAAGuE,GAAG,CAACvE,KAAK;IACtBg+B,MAAA,CAAKx0B,GAAG,GAAG7J,SAAS;IACpBq+B,MAAA,CAAKt0B,MAAM,GAAG/J,SAAS;IACvBq+B,MAAA,CAAKr0B,IAAI,GAAGhK,SAAS;IACrBq+B,MAAA,CAAKv0B,KAAK,GAAG9J,SAAS;IACtBq+B,MAAA,CAAK7gB,KAAK,GAAGxd,SAAS;IACtBq+B,MAAA,CAAK9gB,MAAM,GAAGvd,SAAS;IACvBq+B,MAAA,CAAKC,QAAQ,GAAG;MACdt0B,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC;IACDs0B,MAAA,CAAKpb,QAAQ,GAAGjjB,SAAS;IACzBq+B,MAAA,CAAKnb,SAAS,GAAGljB,SAAS;IAC1Bq+B,MAAA,CAAKE,UAAU,GAAGv+B,SAAS;IAC3Bq+B,MAAA,CAAKG,aAAa,GAAGx+B,SAAS;IAC9Bq+B,MAAA,CAAKI,WAAW,GAAGz+B,SAAS;IAC5Bq+B,MAAA,CAAKK,YAAY,GAAG1+B,SAAS;IAC7Bq+B,MAAA,CAAK7wB,IAAI,GAAGxN,SAAS;IACrBq+B,MAAA,CAAKM,aAAa,GAAG3+B,SAAS;IAC9Bq+B,MAAA,CAAKn9B,GAAG,GAAGlB,SAAS;IACpBq+B,MAAA,CAAK76B,GAAG,GAAGxD,SAAS;IACpBq+B,MAAA,CAAKO,MAAM,GAAG5+B,SAAS;IACvBq+B,MAAA,CAAKhlB,KAAK,GAAG,EAAE;IACfglB,MAAA,CAAKQ,cAAc,GAAG,IAAI;IAC1BR,MAAA,CAAKS,WAAW,GAAG,IAAI;IACvBT,MAAA,CAAKU,WAAW,GAAG,IAAI;IACvBV,MAAA,CAAKrlB,OAAO,GAAG,CAAC;IAChBqlB,MAAA,CAAKvC,UAAU,GAAG,CAAC;IACnBuC,MAAA,CAAKW,iBAAiB,GAAG,CAAC,CAAC;IAC3BX,MAAA,CAAKpgB,WAAW,GAAGje,SAAS;IAC5Bq+B,MAAA,CAAKngB,SAAS,GAAGle,SAAS;IAC1Bq+B,MAAA,CAAKtS,cAAc,GAAG,KAAK;IAC3BsS,MAAA,CAAKY,QAAQ,GAAGj/B,SAAS;IACzBq+B,MAAA,CAAKa,QAAQ,GAAGl/B,SAAS;IACzBq+B,MAAA,CAAKc,aAAa,GAAGn/B,SAAS;IAC9Bq+B,MAAA,CAAKe,aAAa,GAAGp/B,SAAS;IAC9Bq+B,MAAA,CAAKgB,YAAY,GAAG,CAAC;IACrBhB,MAAA,CAAKiB,YAAY,GAAG,CAAC;IACrBjB,MAAA,CAAK1lB,MAAM,GAAG,CAAC,CAAC;IAChB0lB,MAAA,CAAKkB,iBAAiB,GAAG,KAAK;IAC9BlB,MAAA,CAAKvuB,QAAQ,GAAG9P,SAAS;IAAC,OAAAq+B,MAAA;EAC5B;EAACp+B,YAAA,CAAAi+B,KAAA;IAAAh+B,GAAA;IAAAC,KAAA,EACD,SAAAq/B,KAAKj3B,OAAO,EAAE;MACZ,IAAMlH,EAAE,GAAG,IAAI;MACfA,EAAE,CAACkH,OAAO,GAAGA,OAAO,CAACk3B,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MAChDlR,EAAE,CAACmM,IAAI,GAAGjF,OAAO,CAACiF,IAAI;MACtBnM,EAAE,CAAC69B,QAAQ,GAAG79B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACrH,GAAG,CAAC;MACnCG,EAAE,CAAC49B,QAAQ,GAAG59B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAAC/E,GAAG,CAAC;MACnCnC,EAAE,CAAC+9B,aAAa,GAAG/9B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACm3B,YAAY,CAAC;MACjDr+B,EAAE,CAAC89B,aAAa,GAAG99B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACo3B,YAAY,CAAC;IACnD;EAAC;IAAAz/B,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,OAAOgE,GAAG;IACZ;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAAyL,cAAA,EAAgB;MACd,IAAKszB,QAAQ,GAA4C,IAAI,CAAxDA,QAAQ;QAAED,QAAQ,GAAkC,IAAI,CAA9CA,QAAQ;QAAEG,aAAa,GAAmB,IAAI,CAApCA,aAAa;QAAED,aAAa,GAAI,IAAI,CAArBA,aAAa;MACrDD,QAAQ,GAAG5mC,eAAe,CAAC4mC,QAAQ,EAAElzB,MAAM,CAACE,iBAAiB,CAAC;MAC9D+yB,QAAQ,GAAG3mC,eAAe,CAAC2mC,QAAQ,EAAEjzB,MAAM,CAACC,iBAAiB,CAAC;MAC9DmzB,aAAa,GAAG9mC,eAAe,CAAC8mC,aAAa,EAAEpzB,MAAM,CAACE,iBAAiB,CAAC;MACxEizB,aAAa,GAAG7mC,eAAe,CAAC6mC,aAAa,EAAEnzB,MAAM,CAACC,iBAAiB,CAAC;MACxE,OAAO;QACL/K,GAAG,EAAE5I,eAAe,CAAC4mC,QAAQ,EAAEE,aAAa,CAAC;QAC7C57B,GAAG,EAAElL,eAAe,CAAC2mC,QAAQ,EAAEE,aAAa,CAAC;QAC7CrzB,UAAU,EAAElX,cAAc,CAACsqC,QAAQ,CAAC;QACpCnzB,UAAU,EAAEnX,cAAc,CAACqqC,QAAQ;MACrC,CAAC;IACH;EAAC;IAAA/+B,GAAA;IAAAC,KAAA,EACD,SAAA+T,UAAUC,QAAQ,EAAE;MAClB,IAAM9S,EAAE,GAAG,IAAI;MACf,IAAAu+B,iBAAA,GAAyCv+B,EAAE,CAACuK,aAAa,CAAC,CAAC;QAAtD1K,GAAG,GAAA0+B,iBAAA,CAAH1+B,GAAG;QAAEsC,GAAG,GAAAo8B,iBAAA,CAAHp8B,GAAG;QAAEsI,UAAU,GAAA8zB,iBAAA,CAAV9zB,UAAU;QAAEC,UAAU,GAAA6zB,iBAAA,CAAV7zB,UAAU;MACrC,IAAIgI,KAAK;MACT,IAAIjI,UAAU,IAAIC,UAAU,EAAE;QAC5B,OAAO;UAAC7K,GAAG,EAAHA,GAAG;UAAEsC,GAAG,EAAHA;QAAG,CAAC;MACnB;MACA,IAAMqV,KAAK,GAAGxX,EAAE,CAACwL,uBAAuB,CAAC,CAAC;MAC1C,KAAK,IAAI9Y,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGsO,KAAK,CAACnX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAClDggB,KAAK,GAAG8E,KAAK,CAAC9kB,CAAC,CAAC,CAACmZ,UAAU,CAACgH,SAAS,CAAC7S,EAAE,EAAE8S,QAAQ,CAAC;QACnD,IAAI,CAACrI,UAAU,EAAE;UACf5K,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAE6S,KAAK,CAAC7S,GAAG,CAAC;QAChC;QACA,IAAI,CAAC6K,UAAU,EAAE;UACfvI,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEuQ,KAAK,CAACvQ,GAAG,CAAC;QAChC;MACF;MACA,OAAO;QACLtC,GAAG,EAAE5I,eAAe,CAAC4I,GAAG,EAAE5I,eAAe,CAACkL,GAAG,EAAEtC,GAAG,CAAC,CAAC;QACpDsC,GAAG,EAAElL,eAAe,CAACkL,GAAG,EAAElL,eAAe,CAAC4I,GAAG,EAAEsC,GAAG,CAAC;MACrD,CAAC;IACH;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAswB,WAAA,EAAa;MACX,IAAMpvB,EAAE,GAAG,IAAI;MACf,OAAO;QACL2I,IAAI,EAAE3I,EAAE,CAACo9B,WAAW,IAAI,CAAC;QACzB50B,GAAG,EAAExI,EAAE,CAACk9B,UAAU,IAAI,CAAC;QACvBz0B,KAAK,EAAEzI,EAAE,CAACq9B,YAAY,IAAI,CAAC;QAC3B30B,MAAM,EAAE1I,EAAE,CAACm9B,aAAa,IAAI;MAC9B,CAAC;IACH;EAAC;IAAAt+B,GAAA;IAAAC,KAAA,EACD,SAAA0/B,SAAA,EAAW;MACT,OAAO,IAAI,CAACxmB,KAAK;IACnB;EAAC;IAAAnZ,GAAA;IAAAC,KAAA,EACD,SAAAgT,UAAA,EAAY;MACV,IAAMlI,IAAI,GAAG,IAAI,CAAC5K,KAAK,CAAC4K,IAAI;MAC5B,OAAO,IAAI,CAAC1C,OAAO,CAAC2K,MAAM,KAAK,IAAI,CAAC+H,YAAY,CAAC,CAAC,GAAGhQ,IAAI,CAAC60B,OAAO,GAAG70B,IAAI,CAAC80B,OAAO,CAAC,IAAI90B,IAAI,CAACiI,MAAM,IAAI,EAAE;IACxG;EAAC;IAAAhT,GAAA;IAAAC,KAAA,EACD,SAAAuyB,aAAA,EAAe;MACb,IAAI,CAAC/Z,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAAC4mB,iBAAiB,GAAG,KAAK;IAChC;EAAC;IAAAr/B,GAAA;IAAAC,KAAA,EACD,SAAA6/B,aAAA,EAAe;MACbxnC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACy3B,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C;EAAC;IAAA9/B,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOkd,QAAQ,EAAEC,SAAS,EAAE+c,OAAO,EAAE;MACnC,IAAM5+B,EAAE,GAAG,IAAI;MACf,IAAMw5B,QAAQ,GAAGx5B,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MACjC,IAAM6mB,UAAU,GAAGrF,QAAQ,CAACqF,UAAU;MACtC7+B,EAAE,CAAC2+B,YAAY,CAAC,CAAC;MACjB3+B,EAAE,CAAC4hB,QAAQ,GAAGA,QAAQ;MACtB5hB,EAAE,CAAC6hB,SAAS,GAAGA,SAAS;MACxB7hB,EAAE,CAACi9B,QAAQ,GAAG2B,OAAO,GAAGr5B,MAAM,CAACqC,MAAM,CAAC;QACpCe,IAAI,EAAE,CAAC;QACPF,KAAK,EAAE,CAAC;QACRD,GAAG,EAAE,CAAC;QACNE,MAAM,EAAE;MACV,CAAC,EAAEk2B,OAAO,CAAC;MACX5+B,EAAE,CAACgY,KAAK,GAAG,IAAI;MACfhY,EAAE,CAAC09B,WAAW,GAAG,IAAI;MACrB19B,EAAE,CAACw9B,cAAc,GAAG,IAAI;MACxBx9B,EAAE,CAACy9B,WAAW,GAAG,IAAI;MACrBz9B,EAAE,CAAC8+B,mBAAmB,CAAC,CAAC;MACxB9+B,EAAE,CAAC++B,aAAa,CAAC,CAAC;MAClB/+B,EAAE,CAACg/B,kBAAkB,CAAC,CAAC;MACvBh/B,EAAE,CAACy6B,UAAU,GAAGz6B,EAAE,CAAC4Z,YAAY,CAAC,CAAC,GAC7B5Z,EAAE,CAACmc,KAAK,GAAGyiB,OAAO,CAACj2B,IAAI,GAAGi2B,OAAO,CAACn2B,KAAK,GACvCzI,EAAE,CAACkc,MAAM,GAAG0iB,OAAO,CAACp2B,GAAG,GAAGo2B,OAAO,CAACl2B,MAAM;MAC5C,IAAI,CAAC1I,EAAE,CAACk+B,iBAAiB,EAAE;QACzBl+B,EAAE,CAACi/B,gBAAgB,CAAC,CAAC;QACrBj/B,EAAE,CAACk/B,mBAAmB,CAAC,CAAC;QACxBl/B,EAAE,CAACm/B,eAAe,CAAC,CAAC;QACpBn/B,EAAE,CAACu9B,MAAM,GAAGlmC,SAAS,CAAC2I,EAAE,EAAEA,EAAE,CAACkH,OAAO,CAAC4wB,KAAK,CAAC;QAC3C93B,EAAE,CAACk+B,iBAAiB,GAAG,IAAI;MAC7B;MACAl+B,EAAE,CAACo/B,gBAAgB,CAAC,CAAC;MACrBp/B,EAAE,CAACgY,KAAK,GAAGhY,EAAE,CAACq/B,UAAU,CAAC,CAAC,IAAI,EAAE;MAChCr/B,EAAE,CAACs/B,eAAe,CAAC,CAAC;MACpB,IAAMC,eAAe,GAAGV,UAAU,GAAG7+B,EAAE,CAACgY,KAAK,CAAC3X,MAAM;MACpDL,EAAE,CAACw/B,qBAAqB,CAACD,eAAe,GAAGnE,MAAM,CAACp7B,EAAE,CAACgY,KAAK,EAAE6mB,UAAU,CAAC,GAAG7+B,EAAE,CAACgY,KAAK,CAAC;MACnFhY,EAAE,CAACyG,SAAS,CAAC,CAAC;MACdzG,EAAE,CAACy/B,4BAA4B,CAAC,CAAC;MACjCz/B,EAAE,CAAC0/B,sBAAsB,CAAC,CAAC;MAC3B1/B,EAAE,CAAC2/B,2BAA2B,CAAC,CAAC;MAChC,IAAInG,QAAQ,CAAC3R,OAAO,KAAK2R,QAAQ,CAACZ,QAAQ,IAAIY,QAAQ,CAACoG,MAAM,KAAK,MAAM,CAAC,EAAE;QACzE5/B,EAAE,CAACgY,KAAK,GAAG4gB,QAAQ,CAAC54B,EAAE,EAAEA,EAAE,CAACgY,KAAK,CAAC;QACjChY,EAAE,CAAC09B,WAAW,GAAG,IAAI;MACvB;MACA,IAAI6B,eAAe,EAAE;QACnBv/B,EAAE,CAACw/B,qBAAqB,CAACx/B,EAAE,CAACgY,KAAK,CAAC;MACpC;MACAhY,EAAE,CAAC6/B,SAAS,CAAC,CAAC;MACd7/B,EAAE,CAAC8/B,GAAG,CAAC,CAAC;MACR9/B,EAAE,CAAC+/B,QAAQ,CAAC,CAAC;MACb//B,EAAE,CAACggC,WAAW,CAAC,CAAC;IAClB;EAAC;IAAAnhC,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAIigC,aAAa,GAAGjgC,EAAE,CAACkH,OAAO,CAACiB,OAAO;MACtC,IAAI+3B,UAAU,EAAEC,QAAQ;MACxB,IAAIngC,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrBsmB,UAAU,GAAGlgC,EAAE,CAAC2I,IAAI;QACpBw3B,QAAQ,GAAGngC,EAAE,CAACyI,KAAK;MACrB,CAAC,MAAM;QACLy3B,UAAU,GAAGlgC,EAAE,CAACwI,GAAG;QACnB23B,QAAQ,GAAGngC,EAAE,CAAC0I,MAAM;QACpBu3B,aAAa,GAAG,CAACA,aAAa;MAChC;MACAjgC,EAAE,CAAC4c,WAAW,GAAGsjB,UAAU;MAC3BlgC,EAAE,CAAC6c,SAAS,GAAGsjB,QAAQ;MACvBngC,EAAE,CAAC0qB,cAAc,GAAGuV,aAAa;MACjCjgC,EAAE,CAAC2X,OAAO,GAAGwoB,QAAQ,GAAGD,UAAU;MAClClgC,EAAE,CAACogC,cAAc,GAAGpgC,EAAE,CAACkH,OAAO,CAACm5B,aAAa;IAC9C;EAAC;IAAAxhC,GAAA;IAAAC,KAAA,EACD,SAAAkhC,YAAA,EAAc;MACZ7oC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC84B,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C;EAAC;IAAAnhC,GAAA;IAAAC,KAAA,EACD,SAAAggC,oBAAA,EAAsB;MACpB3nC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC43B,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC;IACpD;EAAC;IAAAjgC,GAAA;IAAAC,KAAA,EACD,SAAAigC,cAAA,EAAgB;MACd,IAAM/+B,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrB5Z,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAAC4hB,QAAQ;QACtB5hB,EAAE,CAAC2I,IAAI,GAAG,CAAC;QACX3I,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACmc,KAAK;MACrB,CAAC,MAAM;QACLnc,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAAC6hB,SAAS;QACxB7hB,EAAE,CAACwI,GAAG,GAAG,CAAC;QACVxI,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACkc,MAAM;MACvB;MACAlc,EAAE,CAACo9B,WAAW,GAAG,CAAC;MAClBp9B,EAAE,CAACk9B,UAAU,GAAG,CAAC;MACjBl9B,EAAE,CAACq9B,YAAY,GAAG,CAAC;MACnBr9B,EAAE,CAACm9B,aAAa,GAAG,CAAC;IACtB;EAAC;IAAAt+B,GAAA;IAAAC,KAAA,EACD,SAAAkgC,mBAAA,EAAqB;MACnB7nC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC83B,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC;IACnD;EAAC;IAAAngC,GAAA;IAAAC,KAAA,EACD,SAAAwhC,WAAWx6B,IAAI,EAAE;MACf,IAAM9F,EAAE,GAAG,IAAI;MACfA,EAAE,CAAChB,KAAK,CAACuhC,aAAa,CAACz6B,IAAI,EAAE9F,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MAC7C/Z,QAAQ,CAAC6I,EAAE,CAACkH,OAAO,CAACpB,IAAI,CAAC,EAAE,CAAC9F,EAAE,CAAC,CAAC;IAClC;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAmgC,iBAAA,EAAmB;MACjB,IAAI,CAACqB,UAAU,CAAC,kBAAkB,CAAC;IACrC;EAAC;IAAAzhC,GAAA;IAAAC,KAAA,EACD,SAAAogC,oBAAA,EAAsB,CAAC;EAAC;IAAArgC,GAAA;IAAAC,KAAA,EACxB,SAAAqgC,gBAAA,EAAkB;MAChB,IAAI,CAACmB,UAAU,CAAC,iBAAiB,CAAC;IACpC;EAAC;IAAAzhC,GAAA;IAAAC,KAAA,EACD,SAAAsgC,iBAAA,EAAmB;MACjB,IAAI,CAACkB,UAAU,CAAC,kBAAkB,CAAC;IACrC;EAAC;IAAAzhC,GAAA;IAAAC,KAAA,EACD,SAAAugC,WAAA,EAAa;MACX,OAAO,EAAE;IACX;EAAC;IAAAxgC,GAAA;IAAAC,KAAA,EACD,SAAAwgC,gBAAA,EAAkB;MAChB,IAAI,CAACgB,UAAU,CAAC,iBAAiB,CAAC;IACpC;EAAC;IAAAzhC,GAAA;IAAAC,KAAA,EACD,SAAA0hC,4BAAA,EAA8B;MAC5BrpC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACs5B,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;EAAC;IAAA3hC,GAAA;IAAAC,KAAA,EACD,SAAA2hC,mBAAmBzoB,KAAK,EAAE;MACxB,IAAMhY,EAAE,GAAG,IAAI;MACf,IAAMw5B,QAAQ,GAAGx5B,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MACjC,IAAItlB,CAAC,EAAEwW,IAAI,EAAEnI,IAAI;MACjB,KAAKrO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG8O,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC9CqO,IAAI,GAAGiX,KAAK,CAACtlB,CAAC,CAAC;QACfqO,IAAI,CAACwS,KAAK,GAAGpc,QAAQ,CAACqiC,QAAQ,CAACriC,QAAQ,EAAE,CAAC4J,IAAI,CAACjC,KAAK,EAAEpM,CAAC,EAAEslB,KAAK,CAAC,EAAEhY,EAAE,CAAC;MACtE;IACF;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA4hC,2BAAA,EAA6B;MAC3BvpC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACw5B,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D;EAAC;IAAA7hC,GAAA;IAAAC,KAAA,EACD,SAAA2gC,6BAAA,EAA+B;MAC7BtoC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACu4B,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7D;EAAC;IAAA5gC,GAAA;IAAAC,KAAA,EACD,SAAA4gC,uBAAA,EAAyB;MACvB,IAAM1/B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMsyB,QAAQ,GAAGtyB,OAAO,CAAC8Q,KAAK;MAC9B,IAAM2oB,QAAQ,GAAG3gC,EAAE,CAACgY,KAAK,CAAC3X,MAAM;MAChC,IAAMk4B,WAAW,GAAGiB,QAAQ,CAACjB,WAAW,IAAI,CAAC;MAC7C,IAAMC,WAAW,GAAGgB,QAAQ,CAAChB,WAAW;MACxC,IAAI8E,aAAa,GAAG/E,WAAW;MAC/B,IAAIJ,SAAS,EAAEtW,SAAS,EAAE+e,gBAAgB;MAC1C,IAAI,CAAC5gC,EAAE,CAAC6gC,UAAU,CAAC,CAAC,IAAI,CAACrH,QAAQ,CAAC3R,OAAO,IAAI0Q,WAAW,IAAIC,WAAW,IAAImI,QAAQ,IAAI,CAAC,IAAI,CAAC3gC,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QAC9G5Z,EAAE,CAACs9B,aAAa,GAAG/E,WAAW;QAC9B;MACF;MACA,IAAMuI,UAAU,GAAG9gC,EAAE,CAAC+gC,cAAc,CAAC,CAAC;MACtC,IAAMC,aAAa,GAAGF,UAAU,CAACG,MAAM,CAAC9kB,KAAK;MAC7C,IAAM+kB,cAAc,GAAGJ,UAAU,CAACK,OAAO,CAACjlB,MAAM;MAChD,IAAM0F,QAAQ,GAAGzsB,WAAW,CAAC6K,EAAE,CAAChB,KAAK,CAACmd,KAAK,GAAG6kB,aAAa,EAAE,CAAC,EAAEhhC,EAAE,CAAC4hB,QAAQ,CAAC;MAC5EuW,SAAS,GAAGjxB,OAAO,CAAC0W,MAAM,GAAG5d,EAAE,CAAC4hB,QAAQ,GAAG+e,QAAQ,GAAG/e,QAAQ,IAAI+e,QAAQ,GAAG,CAAC,CAAC;MAC/E,IAAIK,aAAa,GAAG,CAAC,GAAG7I,SAAS,EAAE;QACjCA,SAAS,GAAGvW,QAAQ,IAAI+e,QAAQ,IAAIz5B,OAAO,CAAC0W,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9DiE,SAAS,GAAG7hB,EAAE,CAAC6hB,SAAS,GAAGma,iBAAiB,CAAC90B,OAAO,CAAC2W,IAAI,CAAC,GAC1D2b,QAAQ,CAAC7I,OAAO,GAAGsL,cAAc,CAAC/0B,OAAO,CAAC+X,KAAK,EAAEjf,EAAE,CAAChB,KAAK,CAACkI,OAAO,CAACi1B,IAAI,CAAC;QACvEyE,gBAAgB,GAAGhhC,IAAI,CAAC4rB,IAAI,CAACwV,aAAa,GAAGA,aAAa,GAAGE,cAAc,GAAGA,cAAc,CAAC;QAC7F5D,aAAa,GAAG/lC,SAAS,CAACqI,IAAI,CAACC,GAAG,CAChCD,IAAI,CAACwhC,IAAI,CAACjsC,WAAW,CAAC,CAAC2rC,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAG,CAAC,IAAIic,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAC1Ev4B,IAAI,CAACwhC,IAAI,CAACjsC,WAAW,CAAC0sB,SAAS,GAAG+e,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGhhC,IAAI,CAACwhC,IAAI,CAACjsC,WAAW,CAAC+rC,cAAc,GAAGN,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAC/H,CAAC,CAAC;QACFtD,aAAa,GAAG19B,IAAI,CAACuC,GAAG,CAACo2B,WAAW,EAAE34B,IAAI,CAACC,GAAG,CAAC24B,WAAW,EAAE8E,aAAa,CAAC,CAAC;MAC7E;MACAt9B,EAAE,CAACs9B,aAAa,GAAGA,aAAa;IAClC;EAAC;IAAAz+B,GAAA;IAAAC,KAAA,EACD,SAAA6gC,4BAAA,EAA8B;MAC5BxoC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACy4B,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;EAAC;IAAA9gC,GAAA;IAAAC,KAAA,EACD,SAAA+gC,UAAA,EAAY;MACV1oC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC24B,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;IAC1C;EAAC;IAAAhhC,GAAA;IAAAC,KAAA,EACD,SAAAghC,IAAA,EAAM;MACJ,IAAM9/B,EAAE,GAAG,IAAI;MACf,IAAMgnB,OAAO,GAAG;QACd7K,KAAK,EAAE,CAAC;QACRD,MAAM,EAAE;MACV,CAAC;MACD,IAAOld,KAAK,GAAkEgB,EAAE,CAAzEhB,KAAK;QAAAqiC,YAAA,GAAkErhC,EAAE,CAAlEkH,OAAO;QAAUsyB,QAAQ,GAAA6H,YAAA,CAAfrpB,KAAK;QAAmBspB,SAAS,GAAAD,YAAA,CAAhBpiB,KAAK;QAAmBsiB,QAAQ,GAAAF,YAAA,CAAdxjB,IAAI;MAC/D,IAAMgK,OAAO,GAAG7nB,EAAE,CAAC6gC,UAAU,CAAC,CAAC;MAC/B,IAAMjnB,YAAY,GAAG5Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;MACtC,IAAIiO,OAAO,EAAE;QACX,IAAM2Z,WAAW,GAAGvF,cAAc,CAACqF,SAAS,EAAEtiC,KAAK,CAACkI,OAAO,CAACi1B,IAAI,CAAC;QACjE,IAAIviB,YAAY,EAAE;UAChBoN,OAAO,CAAC7K,KAAK,GAAGnc,EAAE,CAAC4hB,QAAQ;UAC3BoF,OAAO,CAAC9K,MAAM,GAAG8f,iBAAiB,CAACuF,QAAQ,CAAC,GAAGC,WAAW;QAC5D,CAAC,MAAM;UACLxa,OAAO,CAAC9K,MAAM,GAAGlc,EAAE,CAAC6hB,SAAS;UAC7BmF,OAAO,CAAC7K,KAAK,GAAG6f,iBAAiB,CAACuF,QAAQ,CAAC,GAAGC,WAAW;QAC3D;QACA,IAAIhI,QAAQ,CAAC3R,OAAO,IAAI7nB,EAAE,CAACgY,KAAK,CAAC3X,MAAM,EAAE;UACvC,IAAAohC,kBAAA,GAAuCzhC,EAAE,CAAC+gC,cAAc,CAAC,CAAC;YAAnD/G,KAAK,GAAAyH,kBAAA,CAALzH,KAAK;YAAE3d,IAAI,GAAAolB,kBAAA,CAAJplB,IAAI;YAAE4kB,MAAM,GAAAQ,kBAAA,CAANR,MAAM;YAAEE,OAAO,GAAAM,kBAAA,CAAPN,OAAO;UACnC,IAAMO,WAAW,GAAGlI,QAAQ,CAAC7I,OAAO,GAAG,CAAC;UACxC,IAAMgR,YAAY,GAAG1tC,SAAS,CAAC+L,EAAE,CAACs9B,aAAa,CAAC;UAChD,IAAMzd,GAAG,GAAGjgB,IAAI,CAACigB,GAAG,CAAC8hB,YAAY,CAAC;UAClC,IAAM5hB,GAAG,GAAGngB,IAAI,CAACmgB,GAAG,CAAC4hB,YAAY,CAAC;UAClC,IAAI/nB,YAAY,EAAE;YAChB,IAAMgoB,WAAW,GAAGpI,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAG1Y,GAAG,GAAGkhB,MAAM,CAAC9kB,KAAK,GAAG0D,GAAG,GAAGshB,OAAO,CAACjlB,MAAM;YACnF8K,OAAO,CAAC9K,MAAM,GAAGtc,IAAI,CAACC,GAAG,CAACG,EAAE,CAAC6hB,SAAS,EAAEmF,OAAO,CAAC9K,MAAM,GAAG0lB,WAAW,GAAGF,WAAW,CAAC;UACrF,CAAC,MAAM;YACL,IAAMG,UAAU,GAAGrI,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAG5Y,GAAG,GAAGohB,MAAM,CAAC9kB,KAAK,GAAG4D,GAAG,GAAGohB,OAAO,CAACjlB,MAAM;YAClF8K,OAAO,CAAC7K,KAAK,GAAGvc,IAAI,CAACC,GAAG,CAACG,EAAE,CAAC4hB,QAAQ,EAAEoF,OAAO,CAAC7K,KAAK,GAAG0lB,UAAU,GAAGH,WAAW,CAAC;UACjF;UACA1hC,EAAE,CAAC8hC,iBAAiB,CAAC9H,KAAK,EAAE3d,IAAI,EAAE0D,GAAG,EAAEF,GAAG,CAAC;QAC7C;MACF;MACA7f,EAAE,CAAC+hC,cAAc,CAAC,CAAC;MACnB,IAAInoB,YAAY,EAAE;QAChB5Z,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAAC2X,OAAO,GAAG3Y,KAAK,CAACmd,KAAK,GAAGnc,EAAE,CAACi9B,QAAQ,CAACt0B,IAAI,GAAG3I,EAAE,CAACi9B,QAAQ,CAACx0B,KAAK;QAC1EzI,EAAE,CAACkc,MAAM,GAAG8K,OAAO,CAAC9K,MAAM;MAC5B,CAAC,MAAM;QACLlc,EAAE,CAACmc,KAAK,GAAG6K,OAAO,CAAC7K,KAAK;QACxBnc,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAAC2X,OAAO,GAAG3Y,KAAK,CAACkd,MAAM,GAAGlc,EAAE,CAACi9B,QAAQ,CAACz0B,GAAG,GAAGxI,EAAE,CAACi9B,QAAQ,CAACv0B,MAAM;MAC9E;IACF;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAAgjC,kBAAkB9H,KAAK,EAAE3d,IAAI,EAAE0D,GAAG,EAAEF,GAAG,EAAE;MACvC,IAAM7f,EAAE,GAAG,IAAI;MACf,IAAAgiC,YAAA,GAA4ChiC,EAAE,CAACkH,OAAO;QAAA+6B,kBAAA,GAAAD,YAAA,CAA/ChqB,KAAK;QAAGihB,KAAK,GAAAgJ,kBAAA,CAALhJ,KAAK;QAAEtI,OAAO,GAAAsR,kBAAA,CAAPtR,OAAO;QAAG7F,QAAQ,GAAAkX,YAAA,CAARlX,QAAQ;MACxC,IAAMoX,SAAS,GAAGliC,EAAE,CAACs9B,aAAa,KAAK,CAAC;MACxC,IAAM6E,gBAAgB,GAAGrX,QAAQ,KAAK,KAAK,IAAI9qB,EAAE,CAACmM,IAAI,KAAK,GAAG;MAC9D,IAAInM,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrB,IAAMwoB,UAAU,GAAGpiC,EAAE,CAACiY,eAAe,CAAC,CAAC,CAAC,GAAGjY,EAAE,CAAC2I,IAAI;QAClD,IAAM05B,WAAW,GAAGriC,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACiY,eAAe,CAACjY,EAAE,CAACgY,KAAK,CAAC3X,MAAM,GAAG,CAAC,CAAC;QACtE,IAAI+8B,WAAW,GAAG,CAAC;QACnB,IAAIC,YAAY,GAAG,CAAC;QACpB,IAAI6E,SAAS,EAAE;UACb,IAAIC,gBAAgB,EAAE;YACpB/E,WAAW,GAAGvd,GAAG,GAAGma,KAAK,CAAC7d,KAAK;YAC/BkhB,YAAY,GAAGtd,GAAG,GAAG1D,IAAI,CAACH,MAAM;UAClC,CAAC,MAAM;YACLkhB,WAAW,GAAGrd,GAAG,GAAGia,KAAK,CAAC9d,MAAM;YAChCmhB,YAAY,GAAGxd,GAAG,GAAGxD,IAAI,CAACF,KAAK;UACjC;QACF,CAAC,MAAM,IAAI8c,KAAK,KAAK,OAAO,EAAE;UAC5BoE,YAAY,GAAGhhB,IAAI,CAACF,KAAK;QAC3B,CAAC,MAAM,IAAI8c,KAAK,KAAK,KAAK,EAAE;UAC1BmE,WAAW,GAAGpD,KAAK,CAAC7d,KAAK;QAC3B,CAAC,MAAM;UACLihB,WAAW,GAAGpD,KAAK,CAAC7d,KAAK,GAAG,CAAC;UAC7BkhB,YAAY,GAAGhhB,IAAI,CAACF,KAAK,GAAG,CAAC;QAC/B;QACAnc,EAAE,CAACo9B,WAAW,GAAGx9B,IAAI,CAACuC,GAAG,CAAC,CAACi7B,WAAW,GAAGgF,UAAU,GAAGzR,OAAO,IAAI3wB,EAAE,CAACmc,KAAK,IAAInc,EAAE,CAACmc,KAAK,GAAGimB,UAAU,CAAC,EAAE,CAAC,CAAC;QACvGpiC,EAAE,CAACq9B,YAAY,GAAGz9B,IAAI,CAACuC,GAAG,CAAC,CAACk7B,YAAY,GAAGgF,WAAW,GAAG1R,OAAO,IAAI3wB,EAAE,CAACmc,KAAK,IAAInc,EAAE,CAACmc,KAAK,GAAGkmB,WAAW,CAAC,EAAE,CAAC,CAAC;MAC7G,CAAC,MAAM;QACL,IAAInF,UAAU,GAAG7gB,IAAI,CAACH,MAAM,GAAG,CAAC;QAChC,IAAIihB,aAAa,GAAGnD,KAAK,CAAC9d,MAAM,GAAG,CAAC;QACpC,IAAI+c,KAAK,KAAK,OAAO,EAAE;UACrBiE,UAAU,GAAG,CAAC;UACdC,aAAa,GAAGnD,KAAK,CAAC9d,MAAM;QAC9B,CAAC,MAAM,IAAI+c,KAAK,KAAK,KAAK,EAAE;UAC1BiE,UAAU,GAAG7gB,IAAI,CAACH,MAAM;UACxBihB,aAAa,GAAG,CAAC;QACnB;QACAn9B,EAAE,CAACk9B,UAAU,GAAGA,UAAU,GAAGvM,OAAO;QACpC3wB,EAAE,CAACm9B,aAAa,GAAGA,aAAa,GAAGxM,OAAO;MAC5C;IACF;EAAC;IAAA9xB,GAAA;IAAAC,KAAA,EACD,SAAAijC,eAAA,EAAiB;MACf,IAAM/hC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACi9B,QAAQ,EAAE;QACfj9B,EAAE,CAACi9B,QAAQ,CAACt0B,IAAI,GAAG/I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACo9B,WAAW,EAAEp9B,EAAE,CAACi9B,QAAQ,CAACt0B,IAAI,CAAC;QAC7D3I,EAAE,CAACi9B,QAAQ,CAACz0B,GAAG,GAAG5I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACk9B,UAAU,EAAEl9B,EAAE,CAACi9B,QAAQ,CAACz0B,GAAG,CAAC;QAC1DxI,EAAE,CAACi9B,QAAQ,CAACx0B,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACq9B,YAAY,EAAEr9B,EAAE,CAACi9B,QAAQ,CAACx0B,KAAK,CAAC;QAChEzI,EAAE,CAACi9B,QAAQ,CAACv0B,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACm9B,aAAa,EAAEn9B,EAAE,CAACi9B,QAAQ,CAACv0B,MAAM,CAAC;MACrE;IACF;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAAihC,SAAA,EAAW;MACT5oC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC64B,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;IACzC;EAAC;IAAAlhC,GAAA;IAAAC,KAAA,EACD,SAAA8a,aAAA,EAAe;MACb,IAAA0oB,aAAA,GAAyB,IAAI,CAACp7B,OAAO;QAA9BiF,IAAI,GAAAm2B,aAAA,CAAJn2B,IAAI;QAAE2e,QAAQ,GAAAwX,aAAA,CAARxX,QAAQ;MACrB,OAAOA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAI3e,IAAI,KAAK,GAAG;IACpE;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAAyjC,WAAA,EAAa;MACX,OAAO,IAAI,CAACr7B,OAAO,CAAConB,QAAQ;IAC9B;EAAC;IAAAzvB,GAAA;IAAAC,KAAA,EACD,SAAA0gC,sBAAsBxnB,KAAK,EAAE;MAC3B,IAAMhY,EAAE,GAAG,IAAI;MACfA,EAAE,CAACwgC,2BAA2B,CAAC,CAAC;MAChCxgC,EAAE,CAACygC,kBAAkB,CAACzoB,KAAK,CAAC;MAC5B,IAAItlB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG8O,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC9C,IAAImB,aAAa,CAACmkB,KAAK,CAACtlB,CAAC,CAAC,CAAC6gB,KAAK,CAAC,EAAE;UACjCyE,KAAK,CAACrB,MAAM,CAACjkB,CAAC,EAAE,CAAC,CAAC;UAClBwW,IAAI,EAAE;UACNxW,CAAC,EAAE;QACL;MACF;MACAsN,EAAE,CAAC0gC,0BAA0B,CAAC,CAAC;IACjC;EAAC;IAAA7hC,GAAA;IAAAC,KAAA,EACD,SAAAiiC,eAAA,EAAiB;MACf,IAAM/gC,EAAE,GAAG,IAAI;MACf,IAAI8gC,UAAU,GAAG9gC,EAAE,CAAC09B,WAAW;MAC/B,IAAI,CAACoD,UAAU,EAAE;QACf,IAAMjC,UAAU,GAAG7+B,EAAE,CAACkH,OAAO,CAAC8Q,KAAK,CAAC6mB,UAAU;QAC9C,IAAI7mB,KAAK,GAAGhY,EAAE,CAACgY,KAAK;QACpB,IAAI6mB,UAAU,GAAG7mB,KAAK,CAAC3X,MAAM,EAAE;UAC7B2X,KAAK,GAAGojB,MAAM,CAACpjB,KAAK,EAAE6mB,UAAU,CAAC;QACnC;QACA7+B,EAAE,CAAC09B,WAAW,GAAGoD,UAAU,GAAG9gC,EAAE,CAACwiC,kBAAkB,CAACxqB,KAAK,EAAEA,KAAK,CAAC3X,MAAM,CAAC;MAC1E;MACA,OAAOygC,UAAU;IACnB;EAAC;IAAAjiC,GAAA;IAAAC,KAAA,EACD,SAAA0jC,mBAAmBxqB,KAAK,EAAE3X,MAAM,EAAE;MAChC,IAAOyN,GAAG,GAA+B,IAAI,CAAtCA,GAAG;QAAqB+tB,MAAM,GAAI,IAAI,CAAjC8B,iBAAiB;MAC7B,IAAM8E,MAAM,GAAG,EAAE;MACjB,IAAMC,OAAO,GAAG,EAAE;MAClB,IAAIC,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAIlwC,CAAC,EAAEkB,CAAC,EAAEy2B,IAAI,EAAE9W,KAAK,EAAEsvB,QAAQ,EAAEC,UAAU,EAAExuB,KAAK,EAAE+nB,UAAU,EAAElgB,KAAK,EAAED,MAAM,EAAE6mB,WAAW;MAC1F,KAAKrwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAC3B6gB,KAAK,GAAGyE,KAAK,CAACtlB,CAAC,CAAC,CAAC6gB,KAAK;QACtBsvB,QAAQ,GAAG,IAAI,CAACG,uBAAuB,CAACtwC,CAAC,CAAC;QAC1Cob,GAAG,CAACquB,IAAI,GAAG2G,UAAU,GAAGD,QAAQ,CAACI,MAAM;QACvC3uB,KAAK,GAAGunB,MAAM,CAACiH,UAAU,CAAC,GAAGjH,MAAM,CAACiH,UAAU,CAAC,IAAI;UAACl5B,IAAI,EAAE,CAAC,CAAC;UAAEkyB,EAAE,EAAE;QAAE,CAAC;QACrEO,UAAU,GAAGwG,QAAQ,CAACxG,UAAU;QAChClgB,KAAK,GAAGD,MAAM,GAAG,CAAC;QAClB,IAAI,CAACroB,aAAa,CAAC0f,KAAK,CAAC,IAAI,CAAC1gB,OAAO,CAAC0gB,KAAK,CAAC,EAAE;UAC5C4I,KAAK,GAAG1kB,YAAY,CAACqW,GAAG,EAAEwG,KAAK,CAAC1K,IAAI,EAAE0K,KAAK,CAACwnB,EAAE,EAAE3f,KAAK,EAAE5I,KAAK,CAAC;UAC7D2I,MAAM,GAAGmgB,UAAU;QACrB,CAAC,MAAM,IAAIxpC,OAAO,CAAC0gB,KAAK,CAAC,EAAE;UACzB,KAAK3f,CAAC,GAAG,CAAC,EAAEy2B,IAAI,GAAG9W,KAAK,CAAClT,MAAM,EAAEzM,CAAC,GAAGy2B,IAAI,EAAE,EAAEz2B,CAAC,EAAE;YAC9CmvC,WAAW,GAAGxvB,KAAK,CAAC3f,CAAC,CAAC;YACtB,IAAI,CAACC,aAAa,CAACkvC,WAAW,CAAC,IAAI,CAAClwC,OAAO,CAACkwC,WAAW,CAAC,EAAE;cACxD5mB,KAAK,GAAG1kB,YAAY,CAACqW,GAAG,EAAEwG,KAAK,CAAC1K,IAAI,EAAE0K,KAAK,CAACwnB,EAAE,EAAE3f,KAAK,EAAE4mB,WAAW,CAAC;cACnE7mB,MAAM,IAAImgB,UAAU;YACtB;UACF;QACF;QACAoG,MAAM,CAAC/gC,IAAI,CAACya,KAAK,CAAC;QAClBumB,OAAO,CAAChhC,IAAI,CAACwa,MAAM,CAAC;QACpBymB,eAAe,GAAG/iC,IAAI,CAACuC,GAAG,CAACga,KAAK,EAAEwmB,eAAe,CAAC;QAClDC,gBAAgB,GAAGhjC,IAAI,CAACuC,GAAG,CAAC+Z,MAAM,EAAE0mB,gBAAgB,CAAC;MACvD;MACAhH,cAAc,CAACC,MAAM,EAAEx7B,MAAM,CAAC;MAC9B,IAAM4gC,MAAM,GAAGwB,MAAM,CAAChmB,OAAO,CAACkmB,eAAe,CAAC;MAC9C,IAAMxB,OAAO,GAAGuB,OAAO,CAACjmB,OAAO,CAACmmB,gBAAgB,CAAC;MACjD,IAAMM,OAAO,GAAG,SAAVA,OAAOA,CAAIC,GAAG;QAAA,OAAM;UAAChnB,KAAK,EAAEsmB,MAAM,CAACU,GAAG,CAAC,IAAI,CAAC;UAAEjnB,MAAM,EAAEwmB,OAAO,CAACS,GAAG,CAAC,IAAI;QAAC,CAAC;MAAA,CAAC;MAC/E,OAAO;QACLnJ,KAAK,EAAEkJ,OAAO,CAAC,CAAC,CAAC;QACjB7mB,IAAI,EAAE6mB,OAAO,CAAC7iC,MAAM,GAAG,CAAC,CAAC;QACzB4gC,MAAM,EAAEiC,OAAO,CAACjC,MAAM,CAAC;QACvBE,OAAO,EAAE+B,OAAO,CAAC/B,OAAO,CAAC;QACzBsB,MAAM,EAANA,MAAM;QACNC,OAAO,EAAPA;MACF,CAAC;IACH;EAAC;IAAA7jC,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOA,KAAK;IACd;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAiZ,iBAAiBjZ,KAAK,EAAEqK,KAAK,EAAE;MAC7B,OAAOyJ,GAAG;IACZ;EAAC;IAAA/T,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE,CAAC;EAAC;IAAAxkC,GAAA;IAAAC,KAAA,EAC1B,SAAAmZ,gBAAgB9O,KAAK,EAAE;MACrB,IAAM6O,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI7O,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG6O,KAAK,CAAC3X,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAO,IAAI,CAAC0X,gBAAgB,CAACC,KAAK,CAAC7O,KAAK,CAAC,CAACrK,KAAK,CAAC;IAClD;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA6f,mBAAmB2kB,OAAO,EAAE;MAC1B,IAAMtjC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC0qB,cAAc,EAAE;QACrB4Y,OAAO,GAAG,CAAC,GAAGA,OAAO;MACvB;MACA,IAAMD,KAAK,GAAGrjC,EAAE,CAAC4c,WAAW,GAAG0mB,OAAO,GAAGtjC,EAAE,CAAC2X,OAAO;MACnD,OAAOhgB,WAAW,CAACqI,EAAE,CAACogC,cAAc,GAAGvoC,WAAW,CAACmI,EAAE,CAAChB,KAAK,EAAEqkC,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;IACjF;EAAC;IAAAxkC,GAAA;IAAAC,KAAA,EACD,SAAAykC,mBAAmBF,KAAK,EAAE;MACxB,IAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,IAAI,CAACzmB,WAAW,IAAI,IAAI,CAACjF,OAAO;MACzD,OAAO,IAAI,CAAC+S,cAAc,GAAG,CAAC,GAAG4Y,OAAO,GAAGA,OAAO;IACpD;EAAC;IAAAzkC,GAAA;IAAAC,KAAA,EACD,SAAA2c,aAAA,EAAe;MACb,OAAO,IAAI,CAAC1D,gBAAgB,CAAC,IAAI,CAACyrB,YAAY,CAAC,CAAC,CAAC;IACnD;EAAC;IAAA3kC,GAAA;IAAAC,KAAA,EACD,SAAA0kC,aAAA,EAAe;MACb,IAAO3jC,GAAG,GAAS,IAAI,CAAhBA,GAAG;QAAEsC,GAAG,GAAI,IAAI,CAAXA,GAAG;MACf,OAAOtC,GAAG,GAAG,CAAC,IAAIsC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAC7BtC,GAAG,GAAG,CAAC,IAAIsC,GAAG,GAAG,CAAC,GAAGtC,GAAG,GACxB,CAAC;IACL;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAW/H,KAAK,EAAE;MAChB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgY,KAAK,GAAGhY,EAAE,CAACgY,KAAK,IAAI,EAAE;MAC5B,IAAI7O,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG6O,KAAK,CAAC3X,MAAM,EAAE;QACtC,IAAMU,IAAI,GAAGiX,KAAK,CAAC7O,KAAK,CAAC;QACzB,OAAOpI,IAAI,CAAC0N,QAAQ,KACrB1N,IAAI,CAAC0N,QAAQ,GAAG8tB,iBAAiB,CAACv8B,EAAE,CAACkR,UAAU,CAAC,CAAC,EAAE/H,KAAK,EAAEpI,IAAI,CAAC,CAAC;MACjE;MACA,OAAOf,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAG6tB,kBAAkB,CAACt8B,EAAE,CAAChB,KAAK,CAACkS,UAAU,CAAC,CAAC,EAAElR,EAAE,CAAC,CAAC;IAC9D;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAw7B,UAAA,EAAY;MACV,IAAMt6B,EAAE,GAAG,IAAI;MACf,IAAMyjC,WAAW,GAAGzjC,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MACpC,IAAM0rB,GAAG,GAAGzvC,SAAS,CAAC+L,EAAE,CAACs9B,aAAa,CAAC;MACvC,IAAMzd,GAAG,GAAGjgB,IAAI,CAACkY,GAAG,CAAClY,IAAI,CAACigB,GAAG,CAAC6jB,GAAG,CAAC,CAAC;MACnC,IAAM3jB,GAAG,GAAGngB,IAAI,CAACkY,GAAG,CAAClY,IAAI,CAACmgB,GAAG,CAAC2jB,GAAG,CAAC,CAAC;MACnC,IAAM5C,UAAU,GAAG9gC,EAAE,CAAC+gC,cAAc,CAAC,CAAC;MACtC,IAAMpQ,OAAO,GAAG8S,WAAW,CAAC5K,eAAe,IAAI,CAAC;MAChD,IAAMzjC,CAAC,GAAG0rC,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC9kB,KAAK,GAAGwU,OAAO,GAAG,CAAC;MAC5D,IAAMn9B,CAAC,GAAGstC,UAAU,GAAGA,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAGyU,OAAO,GAAG,CAAC;MAC9D,OAAO3wB,EAAE,CAAC4Z,YAAY,CAAC,CAAC,GACpBpmB,CAAC,GAAGqsB,GAAG,GAAGzqB,CAAC,GAAG2qB,GAAG,GAAG3qB,CAAC,GAAGyqB,GAAG,GAAGrsB,CAAC,GAAGusB,GAAG,GACrCvsB,CAAC,GAAGusB,GAAG,GAAG3qB,CAAC,GAAGyqB,GAAG,GAAGrsB,CAAC,GAAGqsB,GAAG,GAAGzqB,CAAC,GAAG2qB,GAAG;IAC3C;EAAC;IAAAlhB,GAAA;IAAAC,KAAA,EACD,SAAA+hC,WAAA,EAAa;MACX,IAAMhZ,OAAO,GAAG,IAAI,CAAC3gB,OAAO,CAAC2gB,OAAO;MACpC,IAAIA,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,CAAC,CAACA,OAAO;MAClB;MACA,OAAO,IAAI,CAACrc,uBAAuB,CAAC,CAAC,CAACnL,MAAM,GAAG,CAAC;IAClD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAA6kC,sBAAsB9vB,SAAS,EAAE;MAC/B,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAMmM,IAAI,GAAGnM,EAAE,CAACmM,IAAI;MACpB,IAAMnN,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMkI,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAO2W,IAAI,GAAc3W,OAAO,CAAzB2W,IAAI;QAAEiN,QAAQ,GAAI5jB,OAAO,CAAnB4jB,QAAQ;MACrB,IAAMlN,MAAM,GAAGC,IAAI,CAACD,MAAM;MAC1B,IAAMhE,YAAY,GAAG5Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;MACtC,IAAM5B,KAAK,GAAGhY,EAAE,CAACgY,KAAK;MACtB,IAAM4rB,WAAW,GAAG5rB,KAAK,CAAC3X,MAAM,IAAIud,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;MACnD,IAAMimB,EAAE,GAAG7H,iBAAiB,CAACne,IAAI,CAAC;MAClC,IAAMnd,KAAK,GAAG,EAAE;MAChB,IAAMojC,UAAU,GAAGjmB,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MACnD,IAAM6yB,SAAS,GAAGD,UAAU,CAAC/L,UAAU,GAAG+L,UAAU,CAAC/gB,WAAW,GAAG,CAAC;MACpE,IAAMihB,aAAa,GAAGD,SAAS,GAAG,CAAC;MACnC,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAYZ,KAAK,EAAE;QACvC,OAAOxrC,WAAW,CAACmH,KAAK,EAAEqkC,KAAK,EAAEU,SAAS,CAAC;MAC7C,CAAC;MACD,IAAIG,WAAW,EAAExxC,CAAC,EAAEipC,SAAS,EAAEwI,gBAAgB;MAC/C,IAAIC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACtC,IAAI7Z,QAAQ,KAAK,KAAK,EAAE;QACtBoZ,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAAC0I,MAAM,CAAC;QACzC27B,GAAG,GAAGrkC,EAAE,CAAC0I,MAAM,GAAGm7B,EAAE;QACpBU,GAAG,GAAGL,WAAW,GAAGF,aAAa;QACjCS,EAAE,GAAGR,gBAAgB,CAACpwB,SAAS,CAACrL,GAAG,CAAC,GAAGw7B,aAAa;QACpDW,EAAE,GAAG9wB,SAAS,CAACnL,MAAM;MACvB,CAAC,MAAM,IAAIoiB,QAAQ,KAAK,QAAQ,EAAE;QAChCoZ,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAACwI,GAAG,CAAC;QACtCi8B,EAAE,GAAG5wB,SAAS,CAACrL,GAAG;QAClBm8B,EAAE,GAAGV,gBAAgB,CAACpwB,SAAS,CAACnL,MAAM,CAAC,GAAGs7B,aAAa;QACvDK,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAGvkC,EAAE,CAACwI,GAAG,GAAGq7B,EAAE;MACnB,CAAC,MAAM,IAAI/Y,QAAQ,KAAK,MAAM,EAAE;QAC9BoZ,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAACyI,KAAK,CAAC;QACxC27B,GAAG,GAAGpkC,EAAE,CAACyI,KAAK,GAAGo7B,EAAE;QACnBS,GAAG,GAAGJ,WAAW,GAAGF,aAAa;QACjCQ,EAAE,GAAGP,gBAAgB,CAACpwB,SAAS,CAAClL,IAAI,CAAC,GAAGq7B,aAAa;QACrDU,EAAE,GAAG7wB,SAAS,CAACpL,KAAK;MACtB,CAAC,MAAM,IAAIqiB,QAAQ,KAAK,OAAO,EAAE;QAC/BoZ,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAAC2I,IAAI,CAAC;QACvC67B,EAAE,GAAG3wB,SAAS,CAAClL,IAAI;QACnB+7B,EAAE,GAAGT,gBAAgB,CAACpwB,SAAS,CAACpL,KAAK,CAAC,GAAGu7B,aAAa;QACtDI,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAGtkC,EAAE,CAAC2I,IAAI,GAAGk7B,EAAE;MACpB,CAAC,MAAM,IAAI13B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2e,QAAQ,KAAK,QAAQ,EAAE;UACzBoZ,WAAW,GAAGD,gBAAgB,CAAC,CAACpwB,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;QAC9E,CAAC,MAAM,IAAI/V,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;UAC7B,IAAM8R,cAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhsB,KAAK,GAAGgsB,QAAQ,CAAC8R,cAAc,CAAC;UACtCsH,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACmwB,cAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,KAAK,CAAC,CAAC;QACzF;QACA2lC,EAAE,GAAG5wB,SAAS,CAACrL,GAAG;QAClBm8B,EAAE,GAAG9wB,SAAS,CAACnL,MAAM;QACrB27B,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAGF,GAAG,GAAGR,EAAE;MAChB,CAAC,MAAM,IAAI13B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2e,QAAQ,KAAK,QAAQ,EAAE;UACzBoZ,WAAW,GAAGD,gBAAgB,CAAC,CAACpwB,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC,CAAC;QACxE,CAAC,MAAM,IAAI9V,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;UAC7B,IAAM8R,gBAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhsB,OAAK,GAAGgsB,QAAQ,CAAC8R,gBAAc,CAAC;UACtCsH,WAAW,GAAGD,gBAAgB,CAACjkC,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACmwB,gBAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,OAAK,CAAC,CAAC;QACzF;QACAslC,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAGF,GAAG,GAAGP,EAAE;QACdW,EAAE,GAAG3wB,SAAS,CAAClL,IAAI;QACnB+7B,EAAE,GAAG7wB,SAAS,CAACpL,KAAK;MACtB;MACA,IAAMm8B,KAAK,GAAG7xC,cAAc,CAACmU,OAAO,CAAC8Q,KAAK,CAAC0hB,aAAa,EAAEkK,WAAW,CAAC;MACtE,IAAMiB,IAAI,GAAGjlC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEvC,IAAI,CAACk7B,IAAI,CAAC8I,WAAW,GAAGgB,KAAK,CAAC,CAAC;MACxD,KAAKlyC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkxC,WAAW,EAAElxC,CAAC,IAAImyC,IAAI,EAAE;QACtC,IAAMC,WAAW,GAAGjnB,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAACxe,CAAC,CAAC,CAAC;QACrD,IAAMqxB,SAAS,GAAG+gB,WAAW,CAAC/gB,SAAS;QACvC,IAAMghB,SAAS,GAAGD,WAAW,CAACvyC,KAAK;QACnC,IAAM8lC,UAAU,GAAGxa,IAAI,CAACwa,UAAU,IAAI,EAAE;QACxC,IAAMC,gBAAgB,GAAGwM,WAAW,CAACxM,gBAAgB;QACrD,IAAMH,SAAS,GAAG2M,WAAW,CAAC3M,SAAS;QACvC,IAAMC,SAAS,GAAG0M,WAAW,CAAC1M,SAAS;QACvC,IAAM4M,cAAc,GAAGF,WAAW,CAACE,cAAc,IAAI,EAAE;QACvD,IAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAoB;QAC7DtJ,SAAS,GAAGJ,mBAAmB,CAACv7B,EAAE,EAAEtN,CAAC,EAAEkrB,MAAM,CAAC;QAC9C,IAAI+d,SAAS,KAAKh9B,SAAS,EAAE;UAC3B;QACF;QACAwlC,gBAAgB,GAAGtsC,WAAW,CAACmH,KAAK,EAAE28B,SAAS,EAAE5X,SAAS,CAAC;QAC3D,IAAInK,YAAY,EAAE;UAChBwqB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAgB;QACxC,CAAC,MAAM;UACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAgB;QACxC;QACAzjC,KAAK,CAACgB,IAAI,CAAC;UACT0iC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACFxoB,KAAK,EAAE4H,SAAS;UAChBxxB,KAAK,EAAEwyC,SAAS;UAChB1M,UAAU,EAAVA,UAAU;UACVC,gBAAgB,EAAhBA,gBAAgB;UAChBH,SAAS,EAATA,SAAS;UACTC,SAAS,EAATA,SAAS;UACT4M,cAAc,EAAdA,cAAc;UACdC,oBAAoB,EAApBA;QACF,CAAC,CAAC;MACJ;MACAjlC,EAAE,CAACg+B,YAAY,GAAG4F,WAAW;MAC7B5jC,EAAE,CAACi+B,YAAY,GAAGiG,WAAW;MAC7B,OAAOxjC,KAAK;IACd;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAAomC,mBAAmBrxB,SAAS,EAAE;MAC5B,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAMmM,IAAI,GAAGnM,EAAE,CAACmM,IAAI;MACpB,IAAMjF,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAO4jB,QAAQ,GAAwB5jB,OAAO,CAAvC4jB,QAAQ;QAAS2Y,WAAW,GAAIv8B,OAAO,CAA7B8Q,KAAK;MACtB,IAAM4B,YAAY,GAAG5Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;MACtC,IAAM5B,KAAK,GAAGhY,EAAE,CAACgY,KAAK;MACtB,IAAOihB,KAAK,GAAiCwK,WAAW,CAAjDxK,KAAK;QAAEC,UAAU,GAAqBuK,WAAW,CAA1CvK,UAAU;QAAEvI,OAAO,GAAY8S,WAAW,CAA9B9S,OAAO;QAAE8H,MAAM,GAAIgL,WAAW,CAArBhL,MAAM;MACzC,IAAMoL,EAAE,GAAG7H,iBAAiB,CAAC90B,OAAO,CAAC2W,IAAI,CAAC;MAC1C,IAAMsnB,cAAc,GAAGtB,EAAE,GAAGlT,OAAO;MACnC,IAAMyU,eAAe,GAAG3M,MAAM,GAAG,CAAC9H,OAAO,GAAGwU,cAAc;MAC1D,IAAMhmB,QAAQ,GAAG,CAAClrB,SAAS,CAAC+L,EAAE,CAACs9B,aAAa,CAAC;MAC7C,IAAM58B,KAAK,GAAG,EAAE;MAChB,IAAIhO,CAAC,EAAEwW,IAAI,EAAEnI,IAAI,EAAEwS,KAAK,EAAEje,CAAC,EAAEE,CAAC,EAAE6vC,SAAS,EAAEhC,KAAK,EAAElH,IAAI,EAAEE,UAAU,EAAEiJ,SAAS,EAAEC,UAAU;MACzF,IAAIC,YAAY,GAAG,QAAQ;MAC3B,IAAI1a,QAAQ,KAAK,KAAK,EAAE;QACtBt1B,CAAC,GAAGwK,EAAE,CAAC0I,MAAM,GAAG08B,eAAe;QAC/BC,SAAS,GAAGrlC,EAAE,CAACylC,uBAAuB,CAAC,CAAC;MAC1C,CAAC,MAAM,IAAI3a,QAAQ,KAAK,QAAQ,EAAE;QAChCt1B,CAAC,GAAGwK,EAAE,CAACwI,GAAG,GAAG48B,eAAe;QAC5BC,SAAS,GAAGrlC,EAAE,CAACylC,uBAAuB,CAAC,CAAC;MAC1C,CAAC,MAAM,IAAI3a,QAAQ,KAAK,MAAM,EAAE;QAC9B,IAAMgM,GAAG,GAAG92B,EAAE,CAAC0lC,uBAAuB,CAAC7B,EAAE,CAAC;QAC1CwB,SAAS,GAAGvO,GAAG,CAACuO,SAAS;QACzB/vC,CAAC,GAAGwhC,GAAG,CAACxhC,CAAC;MACX,CAAC,MAAM,IAAIw1B,QAAQ,KAAK,OAAO,EAAE;QAC/B,IAAMgM,IAAG,GAAG92B,EAAE,CAAC0lC,uBAAuB,CAAC7B,EAAE,CAAC;QAC1CwB,SAAS,GAAGvO,IAAG,CAACuO,SAAS;QACzB/vC,CAAC,GAAGwhC,IAAG,CAACxhC,CAAC;MACX,CAAC,MAAM,IAAI6W,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2e,QAAQ,KAAK,QAAQ,EAAE;UACzBt1B,CAAC,GAAI,CAACqe,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC,GAAIy8B,cAAc;QAC/D,CAAC,MAAM,IAAIxyC,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;UAC7B,IAAM8R,cAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhsB,KAAK,GAAGgsB,QAAQ,CAAC8R,cAAc,CAAC;UACtCpnC,CAAC,GAAGwK,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACmwB,cAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,KAAK,CAAC,GAAGqmC,cAAc;QAC9E;QACAE,SAAS,GAAGrlC,EAAE,CAACylC,uBAAuB,CAAC,CAAC;MAC1C,CAAC,MAAM,IAAIt5B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2e,QAAQ,KAAK,QAAQ,EAAE;UACzBx1B,CAAC,GAAI,CAACue,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC,GAAI08B,cAAc;QAC/D,CAAC,MAAM,IAAIxyC,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;UAC7B,IAAM8R,gBAAc,GAAGr3B,MAAM,CAACC,IAAI,CAACslB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhsB,OAAK,GAAGgsB,QAAQ,CAAC8R,gBAAc,CAAC;UACtCtnC,CAAC,GAAG0K,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACmwB,gBAAc,CAAC,CAAC7kB,gBAAgB,CAACjZ,OAAK,CAAC;QAC7D;QACAumC,SAAS,GAAGrlC,EAAE,CAAC0lC,uBAAuB,CAAC7B,EAAE,CAAC,CAACwB,SAAS;MACtD;MACA,IAAIl5B,IAAI,KAAK,GAAG,EAAE;QAChB,IAAI8sB,KAAK,KAAK,OAAO,EAAE;UACrBuM,YAAY,GAAG,KAAK;QACtB,CAAC,MAAM,IAAIvM,KAAK,KAAK,KAAK,EAAE;UAC1BuM,YAAY,GAAG,QAAQ;QACzB;MACF;MACA,IAAM1E,UAAU,GAAG9gC,EAAE,CAAC+gC,cAAc,CAAC,CAAC;MACtC,KAAKruC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG8O,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CqO,IAAI,GAAGiX,KAAK,CAACtlB,CAAC,CAAC;QACf6gB,KAAK,GAAGxS,IAAI,CAACwS,KAAK;QAClB,IAAMuxB,WAAW,GAAGrB,WAAW,CAACrF,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAACxe,CAAC,CAAC,CAAC;QAC5D2wC,KAAK,GAAGrjC,EAAE,CAACiY,eAAe,CAACvlB,CAAC,CAAC,GAAG+wC,WAAW,CAAC3K,WAAW;QACvDqD,IAAI,GAAGn8B,EAAE,CAACgjC,uBAAuB,CAACtwC,CAAC,CAAC;QACpC2pC,UAAU,GAAGF,IAAI,CAACE,UAAU;QAC5BiJ,SAAS,GAAGzyC,OAAO,CAAC0gB,KAAK,CAAC,GAAGA,KAAK,CAAClT,MAAM,GAAG,CAAC;QAC7C,IAAMslC,SAAS,GAAGL,SAAS,GAAG,CAAC;QAC/B,IAAM/yC,KAAK,GAAGuyC,WAAW,CAACvyC,KAAK;QAC/B,IAAMqzC,WAAW,GAAGd,WAAW,CAACnM,eAAe;QAC/C,IAAMkN,WAAW,GAAGf,WAAW,CAACpM,eAAe;QAC/C,IAAI9e,YAAY,EAAE;UAChBtkB,CAAC,GAAG+tC,KAAK;UACT,IAAIvY,QAAQ,KAAK,KAAK,EAAE;YACtB,IAAIoO,UAAU,KAAK,MAAM,IAAI/Z,QAAQ,KAAK,CAAC,EAAE;cAC3ComB,UAAU,GAAG,CAACD,SAAS,GAAGjJ,UAAU,GAAGA,UAAU,GAAG,CAAC;YACvD,CAAC,MAAM,IAAInD,UAAU,KAAK,QAAQ,EAAE;cAClCqM,UAAU,GAAG,CAACzE,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAG,CAAC,GAAGypB,SAAS,GAAGtJ,UAAU,GAAGA,UAAU;YACnF,CAAC,MAAM;cACLkJ,UAAU,GAAG,CAACzE,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAGmgB,UAAU,GAAG,CAAC;YAC1D;UACF,CAAC,MAAM;YACL,IAAInD,UAAU,KAAK,MAAM,IAAI/Z,QAAQ,KAAK,CAAC,EAAE;cAC3ComB,UAAU,GAAGlJ,UAAU,GAAG,CAAC;YAC7B,CAAC,MAAM,IAAInD,UAAU,KAAK,QAAQ,EAAE;cAClCqM,UAAU,GAAGzE,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAG,CAAC,GAAGypB,SAAS,GAAGtJ,UAAU;YACrE,CAAC,MAAM;cACLkJ,UAAU,GAAGzE,UAAU,CAACK,OAAO,CAACjlB,MAAM,GAAGopB,SAAS,GAAGjJ,UAAU;YACjE;UACF;UACA,IAAI5D,MAAM,EAAE;YACV8M,UAAU,IAAI,CAAC,CAAC;UAClB;QACF,CAAC,MAAM;UACL/vC,CAAC,GAAG6tC,KAAK;UACTkC,UAAU,GAAG,CAAC,CAAC,GAAGD,SAAS,IAAIjJ,UAAU,GAAG,CAAC;QAC/C;QACA,IAAIyJ,QAAQ;QACZ,IAAIhB,WAAW,CAAC3L,iBAAiB,EAAE;UACjC,IAAM4M,YAAY,GAAGlwC,SAAS,CAACivC,WAAW,CAACzL,eAAe,CAAC;UAC3D,IAAMnd,MAAM,GAAG4kB,UAAU,CAAC4B,OAAO,CAAChwC,CAAC,CAAC;UACpC,IAAMypB,KAAK,GAAG2kB,UAAU,CAAC2B,MAAM,CAAC/vC,CAAC,CAAC;UAClC,IAAI8V,GAAG,GAAGhT,CAAC,GAAG+vC,UAAU,GAAGQ,YAAY,CAACv9B,GAAG;UAC3C,IAAIG,IAAI,GAAGrT,CAAC,GAAGywC,YAAY,CAACp9B,IAAI;UAChC,QAAQ68B,YAAY;YACpB,KAAK,QAAQ;cACXh9B,GAAG,IAAI0T,MAAM,GAAG,CAAC;cACjB;YACF,KAAK,QAAQ;cACX1T,GAAG,IAAI0T,MAAM;cACb;UACF;UACA,QAAQmpB,SAAS;YACjB,KAAK,QAAQ;cACX18B,IAAI,IAAIwT,KAAK,GAAG,CAAC;cACjB;YACF,KAAK,OAAO;cACVxT,IAAI,IAAIwT,KAAK;cACb;UACF;UACA2pB,QAAQ,GAAG;YACTn9B,IAAI,EAAJA,IAAI;YACJH,GAAG,EAAHA,GAAG;YACH2T,KAAK,EAAEA,KAAK,GAAG4pB,YAAY,CAAC5pB,KAAK;YACjCD,MAAM,EAAEA,MAAM,GAAG6pB,YAAY,CAAC7pB,MAAM;YACpC3pB,KAAK,EAAEuyC,WAAW,CAAC1L;UACrB,CAAC;QACH;QACA14B,KAAK,CAACgB,IAAI,CAAC;UACTyd,QAAQ,EAARA,QAAQ;UACR5L,KAAK,EAALA,KAAK;UACL4oB,IAAI,EAAJA,IAAI;UACJ5pC,KAAK,EAALA,KAAK;UACLqzC,WAAW,EAAXA,WAAW;UACXC,WAAW,EAAXA,WAAW;UACXN,UAAU,EAAVA,UAAU;UACVF,SAAS,EAATA,SAAS;UACTG,YAAY,EAAZA,YAAY;UACZQ,WAAW,EAAE,CAAC1wC,CAAC,EAAEE,CAAC,CAAC;UACnBswC,QAAQ,EAARA;QACF,CAAC,CAAC;MACJ;MACA,OAAOplC,KAAK;IACd;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAA2mC,wBAAA,EAA0B;MACxB,IAAMzlC,EAAE,GAAG,IAAI;MACf,IAAAimC,YAAA,GAA0BjmC,EAAE,CAACkH,OAAO;QAA7B4jB,QAAQ,GAAAmb,YAAA,CAARnb,QAAQ;QAAE9S,KAAK,GAAAiuB,YAAA,CAALjuB,KAAK;MACtB,IAAMmH,QAAQ,GAAG,CAAClrB,SAAS,CAAC+L,EAAE,CAACs9B,aAAa,CAAC;MAC7C,IAAIne,QAAQ,EAAE;QACZ,OAAO2L,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;MAC9C;MACA,IAAImO,KAAK,GAAG,QAAQ;MACpB,IAAIjhB,KAAK,CAACihB,KAAK,KAAK,OAAO,EAAE;QAC3BA,KAAK,GAAG,MAAM;MAChB,CAAC,MAAM,IAAIjhB,KAAK,CAACihB,KAAK,KAAK,KAAK,EAAE;QAChCA,KAAK,GAAG,OAAO;MACjB;MACA,OAAOA,KAAK;IACd;EAAC;IAAAp6B,GAAA;IAAAC,KAAA,EACD,SAAA4mC,wBAAwB7B,EAAE,EAAE;MAC1B,IAAM7jC,EAAE,GAAG,IAAI;MACf,IAAAkmC,YAAA,GAAyDlmC,EAAE,CAACkH,OAAO;QAA5D4jB,QAAQ,GAAAob,YAAA,CAARpb,QAAQ;QAAAqb,kBAAA,GAAAD,YAAA,CAAEluB,KAAK;QAAGkhB,UAAU,GAAAiN,kBAAA,CAAVjN,UAAU;QAAET,MAAM,GAAA0N,kBAAA,CAAN1N,MAAM;QAAE9H,OAAO,GAAAwV,kBAAA,CAAPxV,OAAO;MACpD,IAAMmQ,UAAU,GAAG9gC,EAAE,CAAC+gC,cAAc,CAAC,CAAC;MACtC,IAAMoE,cAAc,GAAGtB,EAAE,GAAGlT,OAAO;MACnC,IAAMsQ,MAAM,GAAGH,UAAU,CAACG,MAAM,CAAC9kB,KAAK;MACtC,IAAIkpB,SAAS;MACb,IAAI/vC,CAAC;MACL,IAAIw1B,QAAQ,KAAK,MAAM,EAAE;QACvB,IAAI2N,MAAM,EAAE;UACVnjC,CAAC,GAAG0K,EAAE,CAACyI,KAAK,GAAGkoB,OAAO;UACtB,IAAIuI,UAAU,KAAK,MAAM,EAAE;YACzBmM,SAAS,GAAG,MAAM;UACpB,CAAC,MAAM,IAAInM,UAAU,KAAK,QAAQ,EAAE;YAClCmM,SAAS,GAAG,QAAQ;YACpB/vC,CAAC,IAAK2rC,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLoE,SAAS,GAAG,OAAO;YACnB/vC,CAAC,IAAI2rC,MAAM;UACb;QACF,CAAC,MAAM;UACL3rC,CAAC,GAAG0K,EAAE,CAACyI,KAAK,GAAG08B,cAAc;UAC7B,IAAIjM,UAAU,KAAK,MAAM,EAAE;YACzBmM,SAAS,GAAG,OAAO;UACrB,CAAC,MAAM,IAAInM,UAAU,KAAK,QAAQ,EAAE;YAClCmM,SAAS,GAAG,QAAQ;YACpB/vC,CAAC,IAAK2rC,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLoE,SAAS,GAAG,MAAM;YAClB/vC,CAAC,GAAG0K,EAAE,CAAC2I,IAAI;UACb;QACF;MACF,CAAC,MAAM,IAAImiB,QAAQ,KAAK,OAAO,EAAE;QAC/B,IAAI2N,MAAM,EAAE;UACVnjC,CAAC,GAAG0K,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO;UACrB,IAAIuI,UAAU,KAAK,MAAM,EAAE;YACzBmM,SAAS,GAAG,OAAO;UACrB,CAAC,MAAM,IAAInM,UAAU,KAAK,QAAQ,EAAE;YAClCmM,SAAS,GAAG,QAAQ;YACpB/vC,CAAC,IAAK2rC,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLoE,SAAS,GAAG,MAAM;YAClB/vC,CAAC,IAAI2rC,MAAM;UACb;QACF,CAAC,MAAM;UACL3rC,CAAC,GAAG0K,EAAE,CAAC2I,IAAI,GAAGw8B,cAAc;UAC5B,IAAIjM,UAAU,KAAK,MAAM,EAAE;YACzBmM,SAAS,GAAG,MAAM;UACpB,CAAC,MAAM,IAAInM,UAAU,KAAK,QAAQ,EAAE;YAClCmM,SAAS,GAAG,QAAQ;YACpB/vC,CAAC,IAAI2rC,MAAM,GAAG,CAAC;UACjB,CAAC,MAAM;YACLoE,SAAS,GAAG,OAAO;YACnB/vC,CAAC,GAAG0K,EAAE,CAACyI,KAAK;UACd;QACF;MACF,CAAC,MAAM;QACL48B,SAAS,GAAG,OAAO;MACrB;MACA,OAAO;QAACA,SAAS,EAATA,SAAS;QAAE/vC,CAAC,EAADA;MAAC,CAAC;IACvB;EAAC;IAAAuJ,GAAA;IAAAC,KAAA,EACD,SAAAsnC,kBAAA,EAAoB;MAClB,IAAMpmC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACkH,OAAO,CAAC8Q,KAAK,CAACygB,MAAM,EAAE;QAC3B;MACF;MACA,IAAMz5B,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM8rB,QAAQ,GAAG9qB,EAAE,CAACkH,OAAO,CAAC4jB,QAAQ;MACpC,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;QAC/C,OAAO;UAACtiB,GAAG,EAAE,CAAC;UAAEG,IAAI,EAAE3I,EAAE,CAAC2I,IAAI;UAAED,MAAM,EAAE1J,KAAK,CAACkd,MAAM;UAAEzT,KAAK,EAAEzI,EAAE,CAACyI;QAAK,CAAC;MACvE;MAAE,IAAIqiB,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;QACjD,OAAO;UAACtiB,GAAG,EAAExI,EAAE,CAACwI,GAAG;UAAEG,IAAI,EAAE,CAAC;UAAED,MAAM,EAAE1I,EAAE,CAAC0I,MAAM;UAAED,KAAK,EAAEzJ,KAAK,CAACmd;QAAK,CAAC;MACtE;IACF;EAAC;IAAAtd,GAAA;IAAAC,KAAA,EACD,SAAAunC,eAAA,EAAiB;MACf,IAAOv4B,GAAG,GAA0D,IAAI,CAAjEA,GAAG;QAAY8V,eAAe,GAA+B,IAAI,CAA5D1c,OAAO,CAAG0c,eAAe;QAAGjb,IAAI,GAAwB,IAAI,CAAhCA,IAAI;QAAEH,GAAG,GAAmB,IAAI,CAA1BA,GAAG;QAAE2T,KAAK,GAAY,IAAI,CAArBA,KAAK;QAAED,MAAM,GAAI,IAAI,CAAdA,MAAM;MAChE,IAAI0H,eAAe,EAAE;QACnB9V,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACVx4B,GAAG,CAAC6V,SAAS,GAAGC,eAAe;QAC/B9V,GAAG,CAACy4B,QAAQ,CAAC59B,IAAI,EAAEH,GAAG,EAAE2T,KAAK,EAAED,MAAM,CAAC;QACtCpO,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf;IACF;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAue,qBAAqBve,KAAK,EAAE;MAC1B,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM6d,IAAI,GAAG7d,EAAE,CAACkH,OAAO,CAAC2W,IAAI;MAC5B,IAAI,CAAC7d,EAAE,CAAC6gC,UAAU,CAAC,CAAC,IAAI,CAAChjB,IAAI,CAACgK,OAAO,EAAE;QACrC,OAAO,CAAC;MACV;MACA,IAAM7P,KAAK,GAAGhY,EAAE,CAACgY,KAAK;MACtB,IAAM7O,KAAK,GAAG6O,KAAK,CAACyuB,SAAS,CAAC,UAAAzyC,CAAC;QAAA,OAAIA,CAAC,CAAC8K,KAAK,KAAKA,KAAK;MAAA,EAAC;MACrD,IAAIqK,KAAK,IAAI,CAAC,EAAE;QACd,IAAMjB,IAAI,GAAG2V,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,CAAC,CAAC;QAClD,OAAOjB,IAAI,CAAC6b,SAAS;MACvB;MACA,OAAO,CAAC;IACV;EAAC;IAAAllB,GAAA;IAAAC,KAAA,EACD,SAAA4nC,SAAS7yB,SAAS,EAAE;MAClB,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAM6d,IAAI,GAAG7d,EAAE,CAACkH,OAAO,CAAC2W,IAAI;MAC5B,IAAM/P,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAMpN,KAAK,GAAGV,EAAE,CAACw9B,cAAc,KAAKx9B,EAAE,CAACw9B,cAAc,GAAGx9B,EAAE,CAAC2jC,qBAAqB,CAAC9vB,SAAS,CAAC,CAAC;MAC5F,IAAInhB,CAAC,EAAEwW,IAAI;MACX,IAAMy9B,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,EAAE,EAAEC,EAAE,EAAEpjB,KAAK,EAAK;QAClC,IAAI,CAACA,KAAK,CAACtH,KAAK,IAAI,CAACsH,KAAK,CAAClxB,KAAK,EAAE;UAChC;QACF;QACAub,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACVx4B,GAAG,CAACiW,SAAS,GAAGN,KAAK,CAACtH,KAAK;QAC3BrO,GAAG,CAAC+V,WAAW,GAAGJ,KAAK,CAAClxB,KAAK;QAC7Bub,GAAG,CAACg5B,WAAW,CAACrjB,KAAK,CAAC4U,UAAU,IAAI,EAAE,CAAC;QACvCvqB,GAAG,CAACi5B,cAAc,GAAGtjB,KAAK,CAAC6U,gBAAgB;QAC3CxqB,GAAG,CAACk5B,SAAS,CAAC,CAAC;QACfl5B,GAAG,CAACm5B,MAAM,CAACL,EAAE,CAACtxC,CAAC,EAAEsxC,EAAE,CAACpxC,CAAC,CAAC;QACtBsY,GAAG,CAACo5B,MAAM,CAACL,EAAE,CAACvxC,CAAC,EAAEuxC,EAAE,CAACrxC,CAAC,CAAC;QACtBsY,GAAG,CAACq5B,MAAM,CAAC,CAAC;QACZr5B,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf,CAAC;MACD,IAAI3oB,IAAI,CAACgK,OAAO,EAAE;QAChB,KAAKn1B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;UAC9C,IAAMkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;UACrB,IAAImrB,IAAI,CAACma,eAAe,EAAE;YACxB2O,QAAQ,CACN;cAACrxC,CAAC,EAAEsL,IAAI,CAAC4jC,EAAE;cAAEhvC,CAAC,EAAEoL,IAAI,CAAC6jC;YAAE,CAAC,EACxB;cAACnvC,CAAC,EAAEsL,IAAI,CAAC8jC,EAAE;cAAElvC,CAAC,EAAEoL,IAAI,CAAC+jC;YAAE,CAAC,EACxB/jC,IACF,CAAC;UACH;UACA,IAAIid,IAAI,CAACoa,SAAS,EAAE;YAClB0O,QAAQ,CACN;cAACrxC,CAAC,EAAEsL,IAAI,CAACwjC,GAAG;cAAE5uC,CAAC,EAAEoL,IAAI,CAACyjC;YAAG,CAAC,EAC1B;cAAC/uC,CAAC,EAAEsL,IAAI,CAAC0jC,GAAG;cAAE9uC,CAAC,EAAEoL,IAAI,CAAC2jC;YAAG,CAAC,EAC1B;cACEhyC,KAAK,EAAEqO,IAAI,CAACw3B,SAAS;cACrBjc,KAAK,EAAEvb,IAAI,CAACu3B,SAAS;cACrBE,UAAU,EAAEz3B,IAAI,CAACokC,cAAc;cAC/B1M,gBAAgB,EAAE13B,IAAI,CAACqkC;YACzB,CACF,CAAC;UACH;QACF;MACF;IACF;EAAC;IAAApmC,GAAA;IAAAC,KAAA,EACD,SAAAi5B,WAAA,EAAa;MACX,IAAM/3B,EAAE,GAAG,IAAI;MACf,IAAOhB,KAAK,GAA0BgB,EAAE,CAAjChB,KAAK;QAAE8O,GAAG,GAAqB9N,EAAE,CAA1B8N,GAAG;QAAY+P,IAAI,GAAK7d,EAAE,CAArBkH,OAAO,CAAG2W,IAAI;MACjC,IAAMimB,UAAU,GAAGjmB,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MACnD,IAAM6yB,SAAS,GAAGlmB,IAAI,CAACka,UAAU,GAAG+L,UAAU,CAAC/gB,WAAW,GAAG,CAAC;MAC9D,IAAI,CAACghB,SAAS,EAAE;QACd;MACF;MACA,IAAMqD,aAAa,GAAGvpB,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC6S,SAAS;MACjE,IAAMmgB,WAAW,GAAGlkC,EAAE,CAACi+B,YAAY;MACnC,IAAIuG,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;MAClB,IAAI3kC,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrB4qB,EAAE,GAAG3sC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAAC2I,IAAI,EAAEo7B,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC3DW,EAAE,GAAG7sC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAACyI,KAAK,EAAE2+B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACpE3C,EAAE,GAAGE,EAAE,GAAGT,WAAW;MACvB,CAAC,MAAM;QACLO,EAAE,GAAG5sC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAACwI,GAAG,EAAEu7B,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC1DY,EAAE,GAAG9sC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAAC0I,MAAM,EAAE0+B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACrE5C,EAAE,GAAGE,EAAE,GAAGR,WAAW;MACvB;MACAp2B,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACVx4B,GAAG,CAACiW,SAAS,GAAG+f,UAAU,CAAC/gB,WAAW;MACtCjV,GAAG,CAAC+V,WAAW,GAAGigB,UAAU,CAAChgB,WAAW;MACxChW,GAAG,CAACk5B,SAAS,CAAC,CAAC;MACfl5B,GAAG,CAACm5B,MAAM,CAACzC,EAAE,EAAEC,EAAE,CAAC;MAClB32B,GAAG,CAACo5B,MAAM,CAACxC,EAAE,EAAEC,EAAE,CAAC;MAClB72B,GAAG,CAACq5B,MAAM,CAAC,CAAC;MACZr5B,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACf;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAuoC,WAAWxzB,SAAS,EAAE;MACpB,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAMyjC,WAAW,GAAGzjC,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MACpC,IAAI,CAACyrB,WAAW,CAAC5b,OAAO,EAAE;QACxB;MACF;MACA,IAAM/Z,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM8F,IAAI,GAAG5T,EAAE,CAAComC,iBAAiB,CAAC,CAAC;MACnC,IAAIxyB,IAAI,EAAE;QACR7b,QAAQ,CAAC+V,GAAG,EAAE8F,IAAI,CAAC;MACrB;MACA,IAAMlT,KAAK,GAAGV,EAAE,CAACy9B,WAAW,KAAKz9B,EAAE,CAACy9B,WAAW,GAAGz9B,EAAE,CAACklC,kBAAkB,CAACrxB,SAAS,CAAC,CAAC;MACnF,IAAInhB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9C,IAAMkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;QACrB,IAAMmwC,QAAQ,GAAGjiC,IAAI,CAACu7B,IAAI;QAC1B,IAAM5oB,KAAK,GAAG3S,IAAI,CAAC2S,KAAK;QACxB,IAAI3S,IAAI,CAACklC,QAAQ,EAAE;UACjBh4B,GAAG,CAAC6V,SAAS,GAAG/iB,IAAI,CAACklC,QAAQ,CAACvzC,KAAK;UACnCub,GAAG,CAACy4B,QAAQ,CAAC3lC,IAAI,CAACklC,QAAQ,CAACn9B,IAAI,EAAE/H,IAAI,CAACklC,QAAQ,CAACt9B,GAAG,EAAE5H,IAAI,CAACklC,QAAQ,CAAC3pB,KAAK,EAAEvb,IAAI,CAACklC,QAAQ,CAAC5pB,MAAM,CAAC;QAChG;QACA,IAAI1mB,CAAC,GAAGoL,IAAI,CAAC2kC,UAAU;QACvBttC,UAAU,CAAC6V,GAAG,EAAEyF,KAAK,EAAE,CAAC,EAAE/d,CAAC,EAAEqtC,QAAQ,EAAEjiC,IAAI,CAAC;MAC9C;MACA,IAAIgT,IAAI,EAAE;QACRzb,UAAU,CAAC2V,GAAG,CAAC;MACjB;IACF;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAAwoC,UAAA,EAAY;MACV,IAAOx5B,GAAG,GAAyC,IAAI,CAAhDA,GAAG;QAAAy5B,cAAA,GAAyC,IAAI,CAA3CrgC,OAAO;QAAG4jB,QAAQ,GAAAyc,cAAA,CAARzc,QAAQ;QAAE7L,KAAK,GAAAsoB,cAAA,CAALtoB,KAAK;QAAE9W,OAAO,GAAAo/B,cAAA,CAAPp/B,OAAO;MAC9C,IAAI,CAAC8W,KAAK,CAAC4I,OAAO,EAAE;QAClB;MACF;MACA,IAAMsU,IAAI,GAAG9jC,MAAM,CAAC4mB,KAAK,CAACkd,IAAI,CAAC;MAC/B,IAAMxL,OAAO,GAAG96B,SAAS,CAACopB,KAAK,CAAC0R,OAAO,CAAC;MACxC,IAAMsI,KAAK,GAAGha,KAAK,CAACga,KAAK;MACzB,IAAIrb,MAAM,GAAGue,IAAI,CAACE,UAAU,GAAG,CAAC;MAChC,IAAIvR,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,QAAQ,IAAIn4B,QAAQ,CAACm4B,QAAQ,CAAC,EAAE;QACxElN,MAAM,IAAI+S,OAAO,CAACjoB,MAAM;QACxB,IAAI7V,OAAO,CAACosB,KAAK,CAACyE,IAAI,CAAC,EAAE;UACvB9F,MAAM,IAAIue,IAAI,CAACE,UAAU,IAAIpd,KAAK,CAACyE,IAAI,CAACrjB,MAAM,GAAG,CAAC,CAAC;QACrD;MACF,CAAC,MAAM;QACLud,MAAM,IAAI+S,OAAO,CAACnoB,GAAG;MACvB;MACA,IAAAg/B,UAAA,GAA6C/K,SAAS,CAAC,IAAI,EAAE7e,MAAM,EAAEkN,QAAQ,EAAEmO,KAAK,CAAC;QAA9EyD,MAAM,GAAA8K,UAAA,CAAN9K,MAAM;QAAEC,MAAM,GAAA6K,UAAA,CAAN7K,MAAM;QAAE/a,QAAQ,GAAA4lB,UAAA,CAAR5lB,QAAQ;QAAEzC,QAAQ,GAAAqoB,UAAA,CAARroB,QAAQ;MACzClnB,UAAU,CAAC6V,GAAG,EAAEmR,KAAK,CAACyE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEyY,IAAI,EAAE;QACtC5pC,KAAK,EAAE0sB,KAAK,CAAC1sB,KAAK;QAClBqvB,QAAQ,EAARA,QAAQ;QACRzC,QAAQ,EAARA,QAAQ;QACRkmB,SAAS,EAAE7I,UAAU,CAACvD,KAAK,EAAEnO,QAAQ,EAAE3iB,OAAO,CAAC;QAC/Cq9B,YAAY,EAAE,QAAQ;QACtBQ,WAAW,EAAE,CAACtJ,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;EAAC;IAAA99B,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKkT,SAAS,EAAE;MACd,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAAC6gC,UAAU,CAAC,CAAC,EAAE;QACpB;MACF;MACA7gC,EAAE,CAACqmC,cAAc,CAAC,CAAC;MACnBrmC,EAAE,CAAC0mC,QAAQ,CAAC7yB,SAAS,CAAC;MACtB7T,EAAE,CAAC+3B,UAAU,CAAC,CAAC;MACf/3B,EAAE,CAACsnC,SAAS,CAAC,CAAC;MACdtnC,EAAE,CAACqnC,UAAU,CAACxzB,SAAS,CAAC;IAC1B;EAAC;IAAAhV,GAAA;IAAAC,KAAA,EACD,SAAAiyB,QAAA,EAAU;MACR,IAAM/wB,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMugC,EAAE,GAAGv/B,IAAI,CAAC8P,KAAK,IAAI9P,IAAI,CAAC8P,KAAK,CAACtiB,CAAC,IAAI,CAAC;MAC1C,IAAMgyC,EAAE,GAAG30C,cAAc,CAACmV,IAAI,CAAC2V,IAAI,IAAI3V,IAAI,CAAC2V,IAAI,CAACnoB,CAAC,EAAE,CAAC,CAAC,CAAC;MACvD,IAAI,CAACsK,EAAE,CAAC6gC,UAAU,CAAC,CAAC,IAAI7gC,EAAE,CAACW,IAAI,KAAKk8B,KAAK,CAACzlB,SAAS,CAACzW,IAAI,EAAE;QACxD,OAAO,CAAC;UACNjL,CAAC,EAAE+xC,EAAE;UACL9mC,IAAI,WAAAA,KAACkT,SAAS,EAAE;YACd7T,EAAE,CAACW,IAAI,CAACkT,SAAS,CAAC;UACpB;QACF,CAAC,CAAC;MACJ;MACA,OAAO,CAAC;QACNne,CAAC,EAAEgyC,EAAE;QACL/mC,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACd7T,EAAE,CAACqmC,cAAc,CAAC,CAAC;UACnBrmC,EAAE,CAAC0mC,QAAQ,CAAC7yB,SAAS,CAAC;UACtB7T,EAAE,CAACsnC,SAAS,CAAC,CAAC;QAChB;MACF,CAAC,EAAE;QACD5xC,CAAC,EAAEgyC,EAAE,GAAG,CAAC;QACT/mC,IAAI,WAAAA,KAAA,EAAG;UACLX,EAAE,CAAC+3B,UAAU,CAAC,CAAC;QACjB;MACF,CAAC,EAAE;QACDriC,CAAC,EAAE+xC,EAAE;QACL9mC,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACd7T,EAAE,CAACqnC,UAAU,CAACxzB,SAAS,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ;EAAC;IAAAhV,GAAA;IAAAC,KAAA,EACD,SAAA0M,wBAAwBrM,IAAI,EAAE;MAC5B,IAAMa,EAAE,GAAG,IAAI;MACf,IAAMwX,KAAK,GAAGxX,EAAE,CAAChB,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;MACrD,IAAMwd,MAAM,GAAG3nC,EAAE,CAACmM,IAAI,GAAG,QAAQ;MACjC,IAAM0uB,MAAM,GAAG,EAAE;MACjB,IAAInoC,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGsO,KAAK,CAACnX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9C,IAAMsX,IAAI,GAAGwN,KAAK,CAAC9kB,CAAC,CAAC;QACrB,IAAIsX,IAAI,CAAC29B,MAAM,CAAC,KAAK3nC,EAAE,CAACsK,EAAE,KAAK,CAACnL,IAAI,IAAI6K,IAAI,CAAC7K,IAAI,KAAKA,IAAI,CAAC,EAAE;UAC3D07B,MAAM,CAACn5B,IAAI,CAACsI,IAAI,CAAC;QACnB;MACF;MACA,OAAO6wB,MAAM;IACf;EAAC;IAAAh8B,GAAA;IAAAC,KAAA,EACD,SAAAkkC,wBAAwB75B,KAAK,EAAE;MAC7B,IAAMjB,IAAI,GAAG,IAAI,CAAChB,OAAO,CAAC8Q,KAAK,CAAComB,UAAU,CAAC,IAAI,CAACltB,UAAU,CAAC/H,KAAK,CAAC,CAAC;MAClE,OAAO9Q,MAAM,CAAC6P,IAAI,CAACi0B,IAAI,CAAC;IAC1B;EAAC;IAAAt9B,GAAA;IAAAC,KAAA,EACD,SAAA8oC,WAAA,EAAa;MACX,IAAM5nC,EAAE,GAAG,IAAI;MACf,IAAM6nC,QAAQ,GAAG7nC,EAAE,CAACgjC,uBAAuB,CAAC,CAAC,CAAC,CAAC3G,UAAU;MACzD,OAAO,CAACr8B,EAAE,CAAC4Z,YAAY,CAAC,CAAC,GAAG5Z,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAACkc,MAAM,IAAI2rB,QAAQ;IAC9D;EAAC;EAAA,OAAAhL,KAAA;AAAA,EAvkCiBrG,OAAO;AAAA,IA0kCrBsR,aAAa;EACjB,SAAAA,cAAY3oC,IAAI,EAAE4oC,KAAK,EAAEne,QAAQ,EAAE;IAAAvrB,eAAA,OAAAypC,aAAA;IACjC,IAAI,CAAC3oC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC4oC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACne,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAClpB,KAAK,GAAG6E,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EAClC;EAAClO,YAAA,CAAAkpC,aAAA;IAAAjpC,GAAA;IAAAC,KAAA,EACD,SAAAkpC,UAAU7oC,IAAI,EAAE;MACd,OAAOoG,MAAM,CAAC6R,SAAS,CAAC6wB,aAAa,CAAChoC,IAAI,CAAC,IAAI,CAACd,IAAI,CAACiY,SAAS,EAAEjY,IAAI,CAACiY,SAAS,CAAC;IACjF;EAAC;IAAAvY,GAAA;IAAAC,KAAA,EACD,SAAAopC,SAAStnC,IAAI,EAAE;MACb,IAAMZ,EAAE,GAAG,IAAI;MACf,IAAMmoC,KAAK,GAAG5iC,MAAM,CAAC6iC,cAAc,CAACxnC,IAAI,CAAC;MACzC,IAAIynC,WAAW;MACf,IAAIC,iBAAiB,CAACH,KAAK,CAAC,EAAE;QAC5BE,WAAW,GAAGroC,EAAE,CAACkoC,QAAQ,CAACC,KAAK,CAAC;MAClC;MACA,IAAMznC,KAAK,GAAGV,EAAE,CAACU,KAAK;MACtB,IAAM4J,EAAE,GAAG1J,IAAI,CAAC0J,EAAE;MAClB,IAAMy9B,KAAK,GAAG/nC,EAAE,CAAC+nC,KAAK,GAAG,GAAG,GAAGz9B,EAAE;MACjC,IAAI,CAACA,EAAE,EAAE;QACP,MAAM,IAAI2e,KAAK,CAAC,0BAA0B,GAAGroB,IAAI,CAAC;MACpD;MACA,IAAI0J,EAAE,IAAI5J,KAAK,EAAE;QACf,OAAOqnC,KAAK;MACd;MACArnC,KAAK,CAAC4J,EAAE,CAAC,GAAG1J,IAAI;MAChB2nC,gBAAgB,CAAC3nC,IAAI,EAAEmnC,KAAK,EAAEM,WAAW,CAAC;MAC1C,IAAIroC,EAAE,CAAC4pB,QAAQ,EAAE;QACfn3B,QAAQ,CAACm3B,QAAQ,CAAChpB,IAAI,CAAC0J,EAAE,EAAE1J,IAAI,CAACjI,SAAS,CAAC;MAC5C;MACA,OAAOovC,KAAK;IACd;EAAC;IAAAlpC,GAAA;IAAAC,KAAA,EACD,SAAAqC,IAAImJ,EAAE,EAAE;MACN,OAAO,IAAI,CAAC5J,KAAK,CAAC4J,EAAE,CAAC;IACvB;EAAC;IAAAzL,GAAA;IAAAC,KAAA,EACD,SAAA0pC,WAAW5nC,IAAI,EAAE;MACf,IAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAM4J,EAAE,GAAG1J,IAAI,CAAC0J,EAAE;MAClB,IAAMy9B,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIz9B,EAAE,IAAI5J,KAAK,EAAE;QACf,OAAOA,KAAK,CAAC4J,EAAE,CAAC;MAClB;MACA,IAAIy9B,KAAK,IAAIz9B,EAAE,IAAI7X,QAAQ,CAACs1C,KAAK,CAAC,EAAE;QAClC,OAAOt1C,QAAQ,CAACs1C,KAAK,CAAC,CAACz9B,EAAE,CAAC;QAC1B,IAAI,IAAI,CAACsf,QAAQ,EAAE;UACjB,OAAOjxB,SAAS,CAAC2R,EAAE,CAAC;QACtB;MACF;IACF;EAAC;EAAA,OAAAw9B,aAAA;AAAA;AAEH,SAASS,gBAAgBA,CAAC3nC,IAAI,EAAEmnC,KAAK,EAAEM,WAAW,EAAE;EAClD,IAAMI,YAAY,GAAG5vC,KAAK,CAAC0M,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC,EAAE,CAC9Cu7B,WAAW,GAAG51C,QAAQ,CAAC0O,GAAG,CAACknC,WAAW,CAAC,GAAG,CAAC,CAAC,EAC5C51C,QAAQ,CAAC0O,GAAG,CAAC4mC,KAAK,CAAC,EACnBnnC,IAAI,CAACnO,QAAQ,CACd,CAAC;EACFA,QAAQ,CAAC6O,GAAG,CAACymC,KAAK,EAAEU,YAAY,CAAC;EACjC,IAAI7nC,IAAI,CAACm2B,aAAa,EAAE;IACtB2R,aAAa,CAACX,KAAK,EAAEnnC,IAAI,CAACm2B,aAAa,CAAC;EAC1C;EACA,IAAIn2B,IAAI,CAAC3H,WAAW,EAAE;IACpBxG,QAAQ,CAACiT,QAAQ,CAACqiC,KAAK,EAAEnnC,IAAI,CAAC3H,WAAW,CAAC;EAC5C;AACF;AACA,SAASyvC,aAAaA,CAACX,KAAK,EAAEY,MAAM,EAAE;EACpCpjC,MAAM,CAACC,IAAI,CAACmjC,MAAM,CAAC,CAACnpC,OAAO,CAAC,UAAAopC,QAAQ,EAAI;IACtC,IAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,IAAMC,UAAU,GAAGF,aAAa,CAAC7nC,GAAG,CAAC,CAAC;IACtC,IAAMgoC,WAAW,GAAG,CAACjB,KAAK,CAAC,CAAC19B,MAAM,CAACw+B,aAAa,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAC3D,IAAMC,KAAK,GAAGP,MAAM,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,IAAMK,UAAU,GAAGD,KAAK,CAACloC,GAAG,CAAC,CAAC;IAC9B,IAAMooC,WAAW,GAAGF,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;IACnCx2C,QAAQ,CAAC6mC,KAAK,CAAC0P,WAAW,EAAED,UAAU,EAAEK,WAAW,EAAED,UAAU,CAAC;EAClE,CAAC,CAAC;AACJ;AACA,SAASb,iBAAiBA,CAACH,KAAK,EAAE;EAChC,OAAO,IAAI,IAAIA,KAAK,IAAI,UAAU,IAAIA,KAAK;AAC7C;AAAC,IAEKkB,QAAQ;EACZ,SAAAA,SAAA,EAAc;IAAAhrC,eAAA,OAAAgrC,QAAA;IACZ,IAAI,CAACvgB,WAAW,GAAG,IAAIgf,aAAa,CAACl6B,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC;IACzE,IAAI,CAAC+F,QAAQ,GAAG,IAAIm0B,aAAa,CAACtR,OAAO,EAAE,UAAU,CAAC;IACtD,IAAI,CAACzX,OAAO,GAAG,IAAI+oB,aAAa,CAACviC,MAAM,EAAE,SAAS,CAAC;IACnD,IAAI,CAACkH,MAAM,GAAG,IAAIq7B,aAAa,CAACjL,KAAK,EAAE,QAAQ,CAAC;IAChD,IAAI,CAACyM,gBAAgB,GAAG,CAAC,IAAI,CAACxgB,WAAW,EAAE,IAAI,CAACrc,MAAM,EAAE,IAAI,CAACkH,QAAQ,CAAC;EACxE;EAAC/U,YAAA,CAAAyqC,QAAA;IAAAxqC,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAA,EAAa;MAAA,SAAA4nC,IAAA,GAAAnpC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAy/B,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;QAAJ3yB,IAAI,CAAA2yB,IAAA,IAAAppC,SAAA,CAAAopC,IAAA;MAAA;MACT,IAAI,CAACC,KAAK,CAAC,UAAU,EAAE5yB,IAAI,CAAC;IAC9B;EAAC;IAAAhY,GAAA;IAAAC,KAAA,EACD,SAAAyD,OAAA,EAAgB;MAAA,SAAAmnC,KAAA,GAAAtpC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAA4/B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJ9yB,IAAI,CAAA8yB,KAAA,IAAAvpC,SAAA,CAAAupC,KAAA;MAAA;MACZ,IAAI,CAACF,KAAK,CAAC,YAAY,EAAE5yB,IAAI,CAAC;IAChC;EAAC;IAAAhY,GAAA;IAAAC,KAAA,EACD,SAAA8qC,eAAA,EAAwB;MAAA,SAAAC,KAAA,GAAAzpC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAA+/B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJjzB,IAAI,CAAAizB,KAAA,IAAA1pC,SAAA,CAAA0pC,KAAA;MAAA;MACpB,IAAI,CAACL,KAAK,CAAC,UAAU,EAAE5yB,IAAI,EAAE,IAAI,CAACiS,WAAW,CAAC;IAChD;EAAC;IAAAjqB,GAAA;IAAAC,KAAA,EACD,SAAAgQ,YAAA,EAAqB;MAAA,SAAAi7B,KAAA,GAAA3pC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAigC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJnzB,IAAI,CAAAmzB,KAAA,IAAA5pC,SAAA,CAAA4pC,KAAA;MAAA;MACjB,IAAI,CAACP,KAAK,CAAC,UAAU,EAAE5yB,IAAI,EAAE,IAAI,CAAClD,QAAQ,CAAC;IAC7C;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAAmrC,WAAA,EAAoB;MAAA,SAAAC,KAAA,GAAA9pC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAogC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJtzB,IAAI,CAAAszB,KAAA,IAAA/pC,SAAA,CAAA+pC,KAAA;MAAA;MAChB,IAAI,CAACV,KAAK,CAAC,UAAU,EAAE5yB,IAAI,EAAE,IAAI,CAACkI,OAAO,CAAC;IAC5C;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAAsrC,UAAA,EAAmB;MAAA,SAAAC,KAAA,GAAAjqC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAugC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJzzB,IAAI,CAAAyzB,KAAA,IAAAlqC,SAAA,CAAAkqC,KAAA;MAAA;MACf,IAAI,CAACb,KAAK,CAAC,UAAU,EAAE5yB,IAAI,EAAE,IAAI,CAACpK,MAAM,CAAC;IAC3C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAAyrC,cAAcjgC,EAAE,EAAE;MAChB,OAAO,IAAI,CAACgR,IAAI,CAAChR,EAAE,EAAE,IAAI,CAACwe,WAAW,EAAE,YAAY,CAAC;IACtD;EAAC;IAAAjqB,GAAA;IAAAC,KAAA,EACD,SAAA0rC,WAAWlgC,EAAE,EAAE;MACb,OAAO,IAAI,CAACgR,IAAI,CAAChR,EAAE,EAAE,IAAI,CAACqJ,QAAQ,EAAE,SAAS,CAAC;IAChD;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAA2rC,UAAUngC,EAAE,EAAE;MACZ,OAAO,IAAI,CAACgR,IAAI,CAAChR,EAAE,EAAE,IAAI,CAACyU,OAAO,EAAE,QAAQ,CAAC;IAC9C;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAA4rC,SAASpgC,EAAE,EAAE;MACX,OAAO,IAAI,CAACgR,IAAI,CAAChR,EAAE,EAAE,IAAI,CAACmC,MAAM,EAAE,OAAO,CAAC;IAC5C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAA6rC,kBAAA,EAA2B;MAAA,SAAAC,KAAA,GAAAxqC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAA8gC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJh0B,IAAI,CAAAg0B,KAAA,IAAAzqC,SAAA,CAAAyqC,KAAA;MAAA;MACvB,IAAI,CAACpB,KAAK,CAAC,YAAY,EAAE5yB,IAAI,EAAE,IAAI,CAACiS,WAAW,CAAC;IAClD;EAAC;IAAAjqB,GAAA;IAAAC,KAAA,EACD,SAAAgsC,eAAA,EAAwB;MAAA,SAAAC,KAAA,GAAA3qC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAihC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJn0B,IAAI,CAAAm0B,KAAA,IAAA5qC,SAAA,CAAA4qC,KAAA;MAAA;MACpB,IAAI,CAACvB,KAAK,CAAC,YAAY,EAAE5yB,IAAI,EAAE,IAAI,CAAClD,QAAQ,CAAC;IAC/C;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAAmsC,cAAA,EAAuB;MAAA,SAAAC,KAAA,GAAA9qC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAohC,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJt0B,IAAI,CAAAs0B,KAAA,IAAA/qC,SAAA,CAAA+qC,KAAA;MAAA;MACnB,IAAI,CAAC1B,KAAK,CAAC,YAAY,EAAE5yB,IAAI,EAAE,IAAI,CAACkI,OAAO,CAAC;IAC9C;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAAssC,aAAA,EAAsB;MAAA,SAAAC,MAAA,GAAAjrC,SAAA,CAAAC,MAAA,EAANwW,IAAI,OAAA/M,KAAA,CAAAuhC,MAAA,GAAAC,MAAA,MAAAA,MAAA,GAAAD,MAAA,EAAAC,MAAA;QAAJz0B,IAAI,CAAAy0B,MAAA,IAAAlrC,SAAA,CAAAkrC,MAAA;MAAA;MAClB,IAAI,CAAC7B,KAAK,CAAC,YAAY,EAAE5yB,IAAI,EAAE,IAAI,CAACpK,MAAM,CAAC;IAC7C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAA2qC,MAAMtkC,MAAM,EAAE0R,IAAI,EAAE00B,aAAa,EAAE;MACjC,IAAMvrC,EAAE,GAAG,IAAI;MACf8B,kBAAA,CAAI+U,IAAI,EAAErX,OAAO,CAAC,UAAAgsC,GAAG,EAAI;QACvB,IAAMC,GAAG,GAAGF,aAAa,IAAIvrC,EAAE,CAAC0rC,mBAAmB,CAACF,GAAG,CAAC;QACxD,IAAID,aAAa,IAAIE,GAAG,CAACzD,SAAS,CAACwD,GAAG,CAAC,IAAKC,GAAG,KAAKzrC,EAAE,CAAC+e,OAAO,IAAIysB,GAAG,CAAClhC,EAAG,EAAE;UACzEtK,EAAE,CAAC2rC,KAAK,CAACxmC,MAAM,EAAEsmC,GAAG,EAAED,GAAG,CAAC;QAC5B,CAAC,MAAM;UACLz1C,IAAI,CAACy1C,GAAG,EAAE,UAAA5qC,IAAI,EAAI;YAChB,IAAMgrC,OAAO,GAAGL,aAAa,IAAIvrC,EAAE,CAAC0rC,mBAAmB,CAAC9qC,IAAI,CAAC;YAC7DZ,EAAE,CAAC2rC,KAAK,CAACxmC,MAAM,EAAEymC,OAAO,EAAEhrC,IAAI,CAAC;UACjC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EAAC;IAAA/B,GAAA;IAAAC,KAAA,EACD,SAAA6sC,MAAMxmC,MAAM,EAAE0mC,QAAQ,EAAEC,SAAS,EAAE;MACjC,IAAMC,WAAW,GAAGhzC,WAAW,CAACoM,MAAM,CAAC;MACvChO,QAAQ,CAAC20C,SAAS,CAAC,QAAQ,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;MAC1DD,QAAQ,CAAC1mC,MAAM,CAAC,CAAC2mC,SAAS,CAAC;MAC3B30C,QAAQ,CAAC20C,SAAS,CAAC,OAAO,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;IAC3D;EAAC;IAAAjtC,GAAA;IAAAC,KAAA,EACD,SAAA4sC,oBAAoBvsC,IAAI,EAAE;MACxB,KAAK,IAAIzM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC42C,gBAAgB,CAACjpC,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACrD,IAAM+4C,GAAG,GAAG,IAAI,CAACnC,gBAAgB,CAAC52C,CAAC,CAAC;QACpC,IAAI+4C,GAAG,CAACzD,SAAS,CAAC7oC,IAAI,CAAC,EAAE;UACvB,OAAOssC,GAAG;QACZ;MACF;MACA,OAAO,IAAI,CAAC1sB,OAAO;IACrB;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAAwc,KAAKhR,EAAE,EAAEihC,aAAa,EAAEpsC,IAAI,EAAE;MAC5B,IAAMyB,IAAI,GAAG2qC,aAAa,CAACpqC,GAAG,CAACmJ,EAAE,CAAC;MAClC,IAAI1J,IAAI,KAAKjC,SAAS,EAAE;QACtB,MAAM,IAAIsqB,KAAK,CAAC,GAAG,GAAG3e,EAAE,GAAG,wBAAwB,GAAGnL,IAAI,GAAG,GAAG,CAAC;MACnE;MACA,OAAOyB,IAAI;IACb;EAAC;EAAA,OAAAyoC,QAAA;AAAA;AAEH,IAAIwC,QAAQ,GAAG,IAAIxC,QAAQ,CAAC,CAAC;AAAC,IAExB2C,aAAa;EACjB,SAAAA,cAAA,EAAc;IAAA3tC,eAAA,OAAA2tC,aAAA;IACZ,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;EAACrtC,YAAA,CAAAotC,aAAA;IAAAntC,GAAA;IAAAC,KAAA,EACD,SAAAotC,OAAOltC,KAAK,EAAEmtC,IAAI,EAAEt1B,IAAI,EAAEnK,MAAM,EAAE;MAChC,IAAM1M,EAAE,GAAG,IAAI;MACf,IAAImsC,IAAI,KAAK,YAAY,EAAE;QACzBnsC,EAAE,CAACisC,KAAK,GAAGjsC,EAAE,CAACosC,kBAAkB,CAACptC,KAAK,EAAE,IAAI,CAAC;QAC7CgB,EAAE,CAACjB,OAAO,CAACiB,EAAE,CAACisC,KAAK,EAAEjtC,KAAK,EAAE,SAAS,CAAC;MACxC;MACA,IAAM/F,WAAW,GAAGyT,MAAM,GAAG1M,EAAE,CAACvG,YAAY,CAACuF,KAAK,CAAC,CAAC0N,MAAM,CAACA,MAAM,CAAC,GAAG1M,EAAE,CAACvG,YAAY,CAACuF,KAAK,CAAC;MAC3F,IAAM67B,MAAM,GAAG76B,EAAE,CAACjB,OAAO,CAAC9F,WAAW,EAAE+F,KAAK,EAAEmtC,IAAI,EAAEt1B,IAAI,CAAC;MACzD,IAAIs1B,IAAI,KAAK,SAAS,EAAE;QACtBnsC,EAAE,CAACjB,OAAO,CAAC9F,WAAW,EAAE+F,KAAK,EAAE,MAAM,CAAC;QACtCgB,EAAE,CAACjB,OAAO,CAACiB,EAAE,CAACisC,KAAK,EAAEjtC,KAAK,EAAE,WAAW,CAAC;MAC1C;MACA,OAAO67B,MAAM;IACf;EAAC;IAAAh8B,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQ9F,WAAW,EAAE+F,KAAK,EAAEmtC,IAAI,EAAEt1B,IAAI,EAAE;MACtCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;MAAC,IAAAw1B,UAAA,GAAA9gC,0BAAA,CACOtS,WAAW;QAAAqzC,MAAA;MAAA;QAApC,KAAAD,UAAA,CAAA34C,CAAA,MAAA44C,MAAA,GAAAD,UAAA,CAAA73C,CAAA,IAAAkX,IAAA,GAAsC;UAAA,IAA3B6gC,UAAU,GAAAD,MAAA,CAAAxtC,KAAA;UACnB,IAAM0tC,MAAM,GAAGD,UAAU,CAACC,MAAM;UAChC,IAAMrnC,MAAM,GAAGqnC,MAAM,CAACL,IAAI,CAAC;UAC3B,IAAMje,MAAM,GAAG,CAAClvB,KAAK,EAAE6X,IAAI,EAAE01B,UAAU,CAACrlC,OAAO,CAAC;UAChD,IAAI/P,QAAQ,CAACgO,MAAM,EAAE+oB,MAAM,EAAEse,MAAM,CAAC,KAAK,KAAK,IAAI31B,IAAI,CAAC41B,UAAU,EAAE;YACjE,OAAO,KAAK;UACd;QACF;MAAC,SAAA9gC,GAAA;QAAA0gC,UAAA,CAAAj6C,CAAA,CAAAuZ,GAAA;MAAA;QAAA0gC,UAAA,CAAAj5C,CAAA;MAAA;MACD,OAAO,IAAI;IACb;EAAC;IAAAyL,GAAA;IAAAC,KAAA,EACD,SAAA4tC,WAAA,EAAa;MACX,IAAI,CAAC74C,aAAa,CAAC,IAAI,CAACyjB,MAAM,CAAC,EAAE;QAC/B,IAAI,CAACq1B,SAAS,GAAG,IAAI,CAACr1B,MAAM;QAC5B,IAAI,CAACA,MAAM,GAAG3Y,SAAS;MACzB;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAArF,aAAauF,KAAK,EAAE;MAClB,IAAI,IAAI,CAACsY,MAAM,EAAE;QACf,OAAO,IAAI,CAACA,MAAM;MACpB;MACA,IAAMre,WAAW,GAAG,IAAI,CAACqe,MAAM,GAAG,IAAI,CAAC80B,kBAAkB,CAACptC,KAAK,CAAC;MAChE,IAAI,CAAC4tC,mBAAmB,CAAC5tC,KAAK,CAAC;MAC/B,OAAO/F,WAAW;IACpB;EAAC;IAAA4F,GAAA;IAAAC,KAAA,EACD,SAAAstC,mBAAmBptC,KAAK,EAAE8I,GAAG,EAAE;MAC7B,IAAMxB,MAAM,GAAGtH,KAAK,IAAIA,KAAK,CAACsH,MAAM;MACpC,IAAMY,OAAO,GAAGnU,cAAc,CAACuT,MAAM,CAACY,OAAO,IAAIZ,MAAM,CAACY,OAAO,CAAC6X,OAAO,EAAE,CAAC,CAAC,CAAC;MAC5E,IAAMA,OAAO,GAAG8tB,UAAU,CAACvmC,MAAM,CAAC;MAClC,OAAOY,OAAO,KAAK,KAAK,IAAI,CAACY,GAAG,GAAG,EAAE,GAAGglC,iBAAiB,CAAC9tC,KAAK,EAAE+f,OAAO,EAAE7X,OAAO,EAAEY,GAAG,CAAC;IACzF;EAAC;IAAAjJ,GAAA;IAAAC,KAAA,EACD,SAAA8tC,oBAAoB5tC,KAAK,EAAE;MACzB,IAAM+tC,mBAAmB,GAAG,IAAI,CAACJ,SAAS,IAAI,EAAE;MAChD,IAAM1zC,WAAW,GAAG,IAAI,CAACqe,MAAM;MAC/B,IAAMkS,IAAI,GAAG,SAAPA,IAAIA,CAAIt3B,CAAC,EAAEU,CAAC;QAAA,OAAKV,CAAC,CAACwa,MAAM,CAAC,UAAApX,CAAC;UAAA,OAAI,CAAC1C,CAAC,CAACo6C,IAAI,CAAC,UAAAx3C,CAAC;YAAA,OAAIF,CAAC,CAACk3C,MAAM,CAACliC,EAAE,KAAK9U,CAAC,CAACg3C,MAAM,CAACliC,EAAE;UAAA,EAAC;QAAA,EAAC;MAAA;MAC/E,IAAI,CAACvL,OAAO,CAACyqB,IAAI,CAACujB,mBAAmB,EAAE9zC,WAAW,CAAC,EAAE+F,KAAK,EAAE,MAAM,CAAC;MACnE,IAAI,CAACD,OAAO,CAACyqB,IAAI,CAACvwB,WAAW,EAAE8zC,mBAAmB,CAAC,EAAE/tC,KAAK,EAAE,OAAO,CAAC;IACtE;EAAC;EAAA,OAAAgtC,aAAA;AAAA;AAEH,SAASa,UAAUA,CAACvmC,MAAM,EAAE;EAC1B,IAAMyY,OAAO,GAAG,EAAE;EAClB,IAAMvZ,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACqmC,QAAQ,CAAC9sB,OAAO,CAACre,KAAK,CAAC;EAChD,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8S,IAAI,CAACnF,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACpCqsB,OAAO,CAACrd,IAAI,CAACmqC,QAAQ,CAACpB,SAAS,CAACjlC,IAAI,CAAC9S,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,IAAMu6C,KAAK,GAAG3mC,MAAM,CAACyY,OAAO,IAAI,EAAE;EAClC,KAAK,IAAIrsB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGu6C,KAAK,CAAC5sC,MAAM,EAAE3N,GAAC,EAAE,EAAE;IACrC,IAAM85C,MAAM,GAAGS,KAAK,CAACv6C,GAAC,CAAC;IACvB,IAAIqsB,OAAO,CAACtC,OAAO,CAAC+vB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAClCztB,OAAO,CAACrd,IAAI,CAAC8qC,MAAM,CAAC;IACtB;EACF;EACA,OAAOztB,OAAO;AAChB;AACA,SAASmuB,OAAOA,CAAChmC,OAAO,EAAEY,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,IAAIZ,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,OAAO,CAAC,CAAC;EACX;EACA,OAAOA,OAAO;AAChB;AACA,SAAS4lC,iBAAiBA,CAAC9tC,KAAK,EAAE+f,OAAO,EAAE7X,OAAO,EAAEY,GAAG,EAAE;EACvD,IAAM+yB,MAAM,GAAG,EAAE;EACjB,IAAM3mB,OAAO,GAAGlV,KAAK,CAACkS,UAAU,CAAC,CAAC;EAClC,KAAK,IAAIxe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqsB,OAAO,CAAC1e,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACvC,IAAM85C,MAAM,GAAGztB,OAAO,CAACrsB,CAAC,CAAC;IACzB,IAAM4X,EAAE,GAAGkiC,MAAM,CAACliC,EAAE;IACpB,IAAMpC,IAAI,GAAGglC,OAAO,CAAChmC,OAAO,CAACoD,EAAE,CAAC,EAAExC,GAAG,CAAC;IACtC,IAAII,IAAI,KAAK,IAAI,EAAE;MACjB;IACF;IACA2yB,MAAM,CAACn5B,IAAI,CAAC;MACV8qC,MAAM,EAANA,MAAM;MACNtlC,OAAO,EAAEimC,UAAU,CAACnuC,KAAK,CAACsH,MAAM,EAAEkmC,MAAM,EAAEtkC,IAAI,EAAEgM,OAAO;IACzD,CAAC,CAAC;EACJ;EACA,OAAO2mB,MAAM;AACf;AACA,SAASsS,UAAUA,CAAC7mC,MAAM,EAAEkmC,MAAM,EAAEtkC,IAAI,EAAEgM,OAAO,EAAE;EACjD,IAAM1O,IAAI,GAAGc,MAAM,CAAC8mC,eAAe,CAACZ,MAAM,CAAC;EAC3C,IAAMz7B,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAC9I,IAAI,EAAE1C,IAAI,CAAC;EACjD,OAAOc,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAEmD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;IAACm5B,UAAU,EAAE,KAAK;IAAEC,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;AAC3G;AAEA,SAASC,YAAYA,CAACruC,IAAI,EAAE+H,OAAO,EAAE;EACnC,IAAMumC,eAAe,GAAGh7C,QAAQ,CAACsd,QAAQ,CAAC5Q,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD,IAAMuuC,cAAc,GAAG,CAACxmC,OAAO,CAAC6I,QAAQ,IAAI,CAAC,CAAC,EAAE5Q,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,OAAOuuC,cAAc,CAACl+B,SAAS,IAAItI,OAAO,CAACsI,SAAS,IAAIi+B,eAAe,CAACj+B,SAAS,IAAI,GAAG;AAC1F;AACA,SAASm+B,yBAAyBA,CAACrjC,EAAE,EAAEkF,SAAS,EAAE;EAChD,IAAIrD,IAAI,GAAG7B,EAAE;EACb,IAAIA,EAAE,KAAK,SAAS,EAAE;IACpB6B,IAAI,GAAGqD,SAAS;EAClB,CAAC,MAAM,IAAIlF,EAAE,KAAK,SAAS,EAAE;IAC3B6B,IAAI,GAAGqD,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EACtC;EACA,OAAOrD,IAAI;AACb;AACA,SAASyhC,yBAAyBA,CAACzhC,IAAI,EAAEqD,SAAS,EAAE;EAClD,OAAOrD,IAAI,KAAKqD,SAAS,GAAG,SAAS,GAAG,SAAS;AACnD;AACA,SAASq+B,gBAAgBA,CAAC/iB,QAAQ,EAAE;EAClC,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IAC/C,OAAO,GAAG;EACZ;EACA,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;IAC/C,OAAO,GAAG;EACZ;AACF;AACA,SAASgjB,aAAaA,CAACxjC,EAAE,EAAEyjC,YAAY,EAAE;EACvC,IAAIzjC,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5B,OAAOA,EAAE;EACX;EACA,OAAOyjC,YAAY,CAAC5hC,IAAI,IAAI0hC,gBAAgB,CAACE,YAAY,CAACjjB,QAAQ,CAAC,IAAIxgB,EAAE,CAAC5C,MAAM,CAAC,CAAC,CAAC,CAACsmC,WAAW,CAAC,CAAC;AACnG;AACA,SAASC,gBAAgBA,CAAC3nC,MAAM,EAAEY,OAAO,EAAE;EACzC,IAAMgnC,aAAa,GAAGv1C,SAAS,CAAC2N,MAAM,CAACnH,IAAI,CAAC,IAAI;IAACsN,MAAM,EAAE,CAAC;EAAC,CAAC;EAC5D,IAAM0hC,YAAY,GAAGjnC,OAAO,CAACuF,MAAM,IAAI,CAAC,CAAC;EACzC,IAAM2hC,cAAc,GAAGZ,YAAY,CAAClnC,MAAM,CAACnH,IAAI,EAAE+H,OAAO,CAAC;EACzD,IAAMmnC,QAAQ,GAAG9oC,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EACpC,IAAML,MAAM,GAAGlH,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EAClCvH,MAAM,CAACC,IAAI,CAAC2oC,YAAY,CAAC,CAAC3uC,OAAO,CAAC,UAAA8K,EAAE,EAAI;IACtC,IAAMgkC,SAAS,GAAGH,YAAY,CAAC7jC,EAAE,CAAC;IAClC,IAAM6B,IAAI,GAAG2hC,aAAa,CAACxjC,EAAE,EAAEgkC,SAAS,CAAC;IACzC,IAAMC,SAAS,GAAGX,yBAAyB,CAACzhC,IAAI,EAAEiiC,cAAc,CAAC;IACjE,IAAMI,mBAAmB,GAAGN,aAAa,CAACzhC,MAAM,IAAI,CAAC,CAAC;IACtD4hC,QAAQ,CAACliC,IAAI,CAAC,GAAGkiC,QAAQ,CAACliC,IAAI,CAAC,IAAI7B,EAAE;IACrCmC,MAAM,CAACnC,EAAE,CAAC,GAAG3Q,OAAO,CAAC4L,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;MAACX,IAAI,EAAJA;IAAI,CAAC,EAAEmiC,SAAS,EAAEE,mBAAmB,CAACriC,IAAI,CAAC,EAAEqiC,mBAAmB,CAACD,SAAS,CAAC,CAAC,CAAC;EAC3H,CAAC,CAAC;EACFjoC,MAAM,CAACsD,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAAAuN,OAAO,EAAI;IACtC,IAAM5N,IAAI,GAAG4N,OAAO,CAAC5N,IAAI,IAAImH,MAAM,CAACnH,IAAI;IACxC,IAAMqQ,SAAS,GAAGzC,OAAO,CAACyC,SAAS,IAAIg+B,YAAY,CAACruC,IAAI,EAAE+H,OAAO,CAAC;IAClE,IAAMumC,eAAe,GAAG90C,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAMqvC,mBAAmB,GAAGf,eAAe,CAAChhC,MAAM,IAAI,CAAC,CAAC;IACxDlH,MAAM,CAACC,IAAI,CAACgpC,mBAAmB,CAAC,CAAChvC,OAAO,CAAC,UAAAivC,SAAS,EAAI;MACpD,IAAMtiC,IAAI,GAAGwhC,yBAAyB,CAACc,SAAS,EAAEj/B,SAAS,CAAC;MAC5D,IAAMlF,EAAE,GAAGyC,OAAO,CAACZ,IAAI,GAAG,QAAQ,CAAC,IAAIkiC,QAAQ,CAACliC,IAAI,CAAC,IAAIA,IAAI;MAC7DM,MAAM,CAACnC,EAAE,CAAC,GAAGmC,MAAM,CAACnC,EAAE,CAAC,IAAI/E,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;MAC9CnT,OAAO,CAAC8S,MAAM,CAACnC,EAAE,CAAC,EAAE,CAAC;QAAC6B,IAAI,EAAJA;MAAI,CAAC,EAAEgiC,YAAY,CAAC7jC,EAAE,CAAC,EAAEkkC,mBAAmB,CAACC,SAAS,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFlpC,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACjN,OAAO,CAAC,UAAAX,GAAG,EAAI;IACjC,IAAMmJ,KAAK,GAAGyE,MAAM,CAAC5N,GAAG,CAAC;IACzBlF,OAAO,CAACqO,KAAK,EAAE,CAACvV,QAAQ,CAACga,MAAM,CAACzE,KAAK,CAAC7I,IAAI,CAAC,EAAE1M,QAAQ,CAACuV,KAAK,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF,OAAOyE,MAAM;AACf;AACA,SAASiiC,WAAWA,CAACpoC,MAAM,EAAE;EAC3B,IAAMY,OAAO,GAAGZ,MAAM,CAACY,OAAO,KAAKZ,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAAC;EACvDA,OAAO,CAAC6X,OAAO,GAAGhsB,cAAc,CAACmU,OAAO,CAAC6X,OAAO,EAAE,CAAC,CAAC,CAAC;EACrD7X,OAAO,CAACuF,MAAM,GAAGwhC,gBAAgB,CAAC3nC,MAAM,EAAEY,OAAO,CAAC;AACpD;AACA,SAASynC,QAAQA,CAAC/kC,IAAI,EAAE;EACtBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBA,IAAI,CAACmG,QAAQ,GAAGnG,IAAI,CAACmG,QAAQ,IAAI,EAAE;EACnCnG,IAAI,CAACiI,MAAM,GAAGjI,IAAI,CAACiI,MAAM,IAAI,EAAE;EAC/B,OAAOjI,IAAI;AACb;AACA,SAASglC,UAAUA,CAACtoC,MAAM,EAAE;EAC1BA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrBA,MAAM,CAACsD,IAAI,GAAG+kC,QAAQ,CAACroC,MAAM,CAACsD,IAAI,CAAC;EACnC8kC,WAAW,CAACpoC,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AACA,IAAMuoC,QAAQ,GAAG,IAAIrwC,GAAG,CAAC,CAAC;AAC1B,IAAMswC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC5B,SAASC,UAAUA,CAACz6B,QAAQ,EAAE06B,QAAQ,EAAE;EACtC,IAAIzpC,IAAI,GAAGqpC,QAAQ,CAAC1tC,GAAG,CAACoT,QAAQ,CAAC;EACjC,IAAI,CAAC/O,IAAI,EAAE;IACTA,IAAI,GAAGypC,QAAQ,CAAC,CAAC;IACjBJ,QAAQ,CAACvtC,GAAG,CAACiT,QAAQ,EAAE/O,IAAI,CAAC;IAC5BspC,UAAU,CAACntC,GAAG,CAAC6D,IAAI,CAAC;EACtB;EACA,OAAOA,IAAI;AACb;AACA,IAAM0pC,UAAU,GAAG,SAAbA,UAAUA,CAAI5tC,GAAG,EAAE+Z,GAAG,EAAExc,GAAG,EAAK;EACpC,IAAMqJ,IAAI,GAAG7U,gBAAgB,CAACgoB,GAAG,EAAExc,GAAG,CAAC;EACvC,IAAIqJ,IAAI,KAAKvJ,SAAS,EAAE;IACtB2C,GAAG,CAACK,GAAG,CAACuG,IAAI,CAAC;EACf;AACF,CAAC;AAAC,IACIinC,MAAM;EACV,SAAAA,OAAY7oC,MAAM,EAAE;IAAAjI,eAAA,OAAA8wC,MAAA;IAClB,IAAI,CAACC,OAAO,GAAGR,UAAU,CAACtoC,MAAM,CAAC;IACjC,IAAI,CAAC+oC,WAAW,GAAG,IAAI7wC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC8wC,cAAc,GAAG,IAAI9wC,GAAG,CAAC,CAAC;EACjC;EAACI,YAAA,CAAAuwC,MAAA;IAAAtwC,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACiuC,OAAO,CAACG,QAAQ;IAC9B;EAAC;IAAA1wC,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACiuC,OAAO,CAACjwC,IAAI;IAC1B,CAAC;IAAAmC,GAAA,EACD,SAAAA,IAASnC,IAAI,EAAE;MACb,IAAI,CAACiwC,OAAO,CAACjwC,IAAI,GAAGA,IAAI;IAC1B;EAAC;IAAAN,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACiuC,OAAO,CAACxlC,IAAI;IAC1B,CAAC;IAAAtI,GAAA,EACD,SAAAA,IAASsI,IAAI,EAAE;MACb,IAAI,CAACwlC,OAAO,CAACxlC,IAAI,GAAG+kC,QAAQ,CAAC/kC,IAAI,CAAC;IACpC;EAAC;IAAA/K,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACiuC,OAAO,CAACloC,OAAO;IAC7B,CAAC;IAAA5F,GAAA,EACD,SAAAA,IAAY4F,OAAO,EAAE;MACnB,IAAI,CAACkoC,OAAO,CAACloC,OAAO,GAAGA,OAAO;IAChC;EAAC;IAAArI,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACiuC,OAAO,CAACrwB,OAAO;IAC7B;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAA,EAAS;MACP,IAAM4B,MAAM,GAAG,IAAI,CAAC8oC,OAAO;MAC3B,IAAI,CAACI,UAAU,CAAC,CAAC;MACjBd,WAAW,CAACpoC,MAAM,CAAC;IACrB;EAAC;IAAAzH,GAAA;IAAAC,KAAA,EACD,SAAA0wC,WAAA,EAAa;MACX,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,CAAC;MACxB,IAAI,CAACH,cAAc,CAACG,KAAK,CAAC,CAAC;IAC7B;EAAC;IAAA5wC,GAAA;IAAAC,KAAA,EACD,SAAAgS,iBAAiB4+B,WAAW,EAAE;MAC5B,OAAOV,UAAU,CAACU,WAAW,EAC3B;QAAA,OAAM,CAAC,aAAArlC,MAAA,CACOqlC,WAAW,GACvB,EAAE,CACH,CAAC;MAAA,EAAC;IACP;EAAC;IAAA7wC,GAAA;IAAAC,KAAA,EACD,SAAAkW,0BAA0B06B,WAAW,EAAE36B,UAAU,EAAE;MACjD,OAAOi6B,UAAU,IAAA3kC,MAAA,CAAIqlC,WAAW,kBAAArlC,MAAA,CAAe0K,UAAU,GACvD;QAAA,OAAM,CACJ,aAAA1K,MAAA,CACcqlC,WAAW,mBAAArlC,MAAA,CAAgB0K,UAAU,kBAAA1K,MAAA,CAClC0K,UAAU,EAC1B,EACD,aAAA1K,MAAA,CACcqlC,WAAW,GACvB,EAAE,CACH,CACF;MAAA,EAAC;IACN;EAAC;IAAA7wC,GAAA;IAAAC,KAAA,EACD,SAAA2V,wBAAwBi7B,WAAW,EAAEr7B,WAAW,EAAE;MAChD,OAAO26B,UAAU,IAAA3kC,MAAA,CAAIqlC,WAAW,OAAArlC,MAAA,CAAIgK,WAAW,GAC7C;QAAA,OAAM,CAAC,aAAAhK,MAAA,CACOqlC,WAAW,gBAAArlC,MAAA,CAAagK,WAAW,eAAAhK,MAAA,CACnCqlC,WAAW,eAAArlC,MAAA,CACXgK,WAAW,GACvB,EAAE,CACH,CAAC;MAAA,EAAC;IACP;EAAC;IAAAxV,GAAA;IAAAC,KAAA,EACD,SAAAsuC,gBAAgBZ,MAAM,EAAE;MACtB,IAAMliC,EAAE,GAAGkiC,MAAM,CAACliC,EAAE;MACpB,IAAMnL,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,OAAO6vC,UAAU,IAAA3kC,MAAA,CAAIlL,IAAI,cAAAkL,MAAA,CAAWC,EAAE,GACpC;QAAA,OAAM,aAAAD,MAAA,CACOC,EAAE,GAAAD,MAAA,CAAAvI,kBAAA,CACV0qC,MAAM,CAACmD,sBAAsB,IAAI,EAAE,GACtC;MAAA,EAAC;IACP;EAAC;IAAA9wC,GAAA;IAAAC,KAAA,EACD,SAAA8wC,cAAcC,SAAS,EAAEC,UAAU,EAAE;MACnC,IAAMT,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAI/6B,KAAK,GAAG+6B,WAAW,CAACluC,GAAG,CAAC0uC,SAAS,CAAC;MACtC,IAAI,CAACv7B,KAAK,IAAIw7B,UAAU,EAAE;QACxBx7B,KAAK,GAAG,IAAI9V,GAAG,CAAC,CAAC;QACjB6wC,WAAW,CAAC/tC,GAAG,CAACuuC,SAAS,EAAEv7B,KAAK,CAAC;MACnC;MACA,OAAOA,KAAK;IACd;EAAC;IAAAzV,GAAA;IAAAC,KAAA,EACD,SAAAkS,gBAAgB6+B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;MAC/C,IAAO5oC,OAAO,GAAU,IAAI,CAArBA,OAAO;QAAE/H,IAAI,GAAI,IAAI,CAAZA,IAAI;MACpB,IAAMmV,KAAK,GAAG,IAAI,CAACs7B,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;MACvD,IAAMpiC,MAAM,GAAG4G,KAAK,CAACnT,GAAG,CAAC4uC,QAAQ,CAAC;MAClC,IAAIriC,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAMqD,MAAM,GAAG,IAAIg+B,GAAG,CAAC,CAAC;MACxBgB,QAAQ,CAACvwC,OAAO,CAAC,UAAAgG,IAAI,EAAI;QACvB,IAAIqqC,SAAS,EAAE;UACb9+B,MAAM,CAACpP,GAAG,CAACkuC,SAAS,CAAC;UACrBrqC,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;YAAA,OAAIqwC,UAAU,CAACn+B,MAAM,EAAE8+B,SAAS,EAAEhxC,GAAG,CAAC;UAAA,EAAC;QACzD;QACA2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIqwC,UAAU,CAACn+B,MAAM,EAAE7J,OAAO,EAAErI,GAAG,CAAC;QAAA,EAAC;QACrD2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIqwC,UAAU,CAACn+B,MAAM,EAAEpY,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEN,GAAG,CAAC;QAAA,EAAC;QACnE2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIqwC,UAAU,CAACn+B,MAAM,EAAEte,QAAQ,EAAEoM,GAAG,CAAC;QAAA,EAAC;QACtD2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIqwC,UAAU,CAACn+B,MAAM,EAAE9X,WAAW,EAAE4F,GAAG,CAAC;QAAA,EAAC;MAC3D,CAAC,CAAC;MACF,IAAM+tB,KAAK,GAAG9iB,KAAK,CAACjH,IAAI,CAACkO,MAAM,CAAC;MAChC,IAAI6b,KAAK,CAACvsB,MAAM,KAAK,CAAC,EAAE;QACtBusB,KAAK,CAAClrB,IAAI,CAAC6D,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC,CAAC;MACjC;MACA,IAAIgiC,UAAU,CAAC/sC,GAAG,CAACguC,QAAQ,CAAC,EAAE;QAC5Bz7B,KAAK,CAAChT,GAAG,CAACyuC,QAAQ,EAAEnjB,KAAK,CAAC;MAC5B;MACA,OAAOA,KAAK;IACd;EAAC;IAAA/tB,GAAA;IAAAC,KAAA,EACD,SAAAkxC,kBAAA,EAAoB;MAClB,IAAO9oC,OAAO,GAAU,IAAI,CAArBA,OAAO;QAAE/H,IAAI,GAAI,IAAI,CAAZA,IAAI;MACpB,OAAO,CACL+H,OAAO,EACPvO,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC,EACrB1M,QAAQ,CAACsd,QAAQ,CAAC5Q,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7B;QAACA,IAAI,EAAJA;MAAI,CAAC,EACN1M,QAAQ,EACRwG,WAAW,CACZ;IACH;EAAC;IAAA4F,GAAA;IAAAC,KAAA,EACD,SAAA8V,oBAAoB7D,MAAM,EAAE4D,KAAK,EAAET,OAAO,EAAmB;MAAA,IAAjBQ,QAAQ,GAAAtU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,EAAE,CAAC;MACzD,IAAMy6B,MAAM,GAAG;QAACxzB,OAAO,EAAE;MAAI,CAAC;MAC9B,IAAA4oC,YAAA,GAAgCC,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAEv+B,MAAM,EAAE2D,QAAQ,CAAC;QAA3Ey7B,QAAQ,GAAAF,YAAA,CAARE,QAAQ;QAAEC,WAAW,GAAAH,YAAA,CAAXG,WAAW;MAC5B,IAAIlpC,OAAO,GAAGipC,QAAQ;MACtB,IAAIE,WAAW,CAACF,QAAQ,EAAEx7B,KAAK,CAAC,EAAE;QAChCkmB,MAAM,CAACxzB,OAAO,GAAG,KAAK;QACtB6M,OAAO,GAAG/a,UAAU,CAAC+a,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO;QACnD,IAAMo8B,WAAW,GAAG,IAAI,CAACr/B,cAAc,CAACF,MAAM,EAAEmD,OAAO,EAAEk8B,WAAW,CAAC;QACrElpC,OAAO,GAAG7N,cAAc,CAAC82C,QAAQ,EAAEj8B,OAAO,EAAEo8B,WAAW,CAAC;MAC1D;MAAC,IAAAC,UAAA,GAAAhlC,0BAAA,CACkBoJ,KAAK;QAAA67B,MAAA;MAAA;QAAxB,KAAAD,UAAA,CAAA78C,CAAA,MAAA88C,MAAA,GAAAD,UAAA,CAAA/7C,CAAA,IAAAkX,IAAA,GAA0B;UAAA,IAAfjI,IAAI,GAAA+sC,MAAA,CAAA1xC,KAAA;UACb+7B,MAAM,CAACp3B,IAAI,CAAC,GAAGyD,OAAO,CAACzD,IAAI,CAAC;QAC9B;MAAC,SAAAkI,GAAA;QAAA4kC,UAAA,CAAAn+C,CAAA,CAAAuZ,GAAA;MAAA;QAAA4kC,UAAA,CAAAn9C,CAAA;MAAA;MACD,OAAOynC,MAAM;IACf;EAAC;IAAAh8B,GAAA;IAAAC,KAAA,EACD,SAAAmS,eAAeF,MAAM,EAAEmD,OAAO,EAAuC;MAAA,IAArCQ,QAAQ,GAAAtU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,EAAE,CAAC;MAAA,IAAEqwC,kBAAkB,GAAArwC,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAzB,SAAA;MACjE,IAAA+xC,aAAA,GAAmBR,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAEv+B,MAAM,EAAE2D,QAAQ,CAAC;QAA9Dy7B,QAAQ,GAAAO,aAAA,CAARP,QAAQ;MACf,OAAOx9C,QAAQ,CAACuhB,OAAO,CAAC,GACpB7a,cAAc,CAAC82C,QAAQ,EAAEj8B,OAAO,EAAEvV,SAAS,EAAE8xC,kBAAkB,CAAC,GAChEN,QAAQ;IACd;EAAC;EAAA,OAAAhB,MAAA;AAAA;AAEH,SAASe,WAAWA,CAACS,aAAa,EAAE5/B,MAAM,EAAE2D,QAAQ,EAAE;EACpD,IAAIJ,KAAK,GAAGq8B,aAAa,CAACxvC,GAAG,CAAC4P,MAAM,CAAC;EACrC,IAAI,CAACuD,KAAK,EAAE;IACVA,KAAK,GAAG,IAAI9V,GAAG,CAAC,CAAC;IACjBmyC,aAAa,CAACrvC,GAAG,CAACyP,MAAM,EAAEuD,KAAK,CAAC;EAClC;EACA,IAAMC,QAAQ,GAAGG,QAAQ,CAACu0B,IAAI,CAAC,CAAC;EAChC,IAAIv7B,MAAM,GAAG4G,KAAK,CAACnT,GAAG,CAACoT,QAAQ,CAAC;EAChC,IAAI,CAAC7G,MAAM,EAAE;IACX,IAAMyiC,QAAQ,GAAG52C,eAAe,CAACwX,MAAM,EAAE2D,QAAQ,CAAC;IAClDhH,MAAM,GAAG;MACPyiC,QAAQ,EAARA,QAAQ;MACRC,WAAW,EAAE17B,QAAQ,CAAChI,MAAM,CAAC,UAAA1X,CAAC;QAAA,OAAI,CAACA,CAAC,CAACg5C,WAAW,CAAC,CAAC,CAAClgB,QAAQ,CAAC,OAAO,CAAC;MAAA;IACtE,CAAC;IACDxZ,KAAK,CAAChT,GAAG,CAACiT,QAAQ,EAAE7G,MAAM,CAAC;EAC7B;EACA,OAAOA,MAAM;AACf;AACA,SAAS2iC,WAAWA,CAAC3a,KAAK,EAAE/gB,KAAK,EAAE;EACjC,IAAAi8B,aAAA,GAAoCn3C,YAAY,CAACi8B,KAAK,CAAC;IAAhDmb,YAAY,GAAAD,aAAA,CAAZC,YAAY;IAAEC,WAAW,GAAAF,aAAA,CAAXE,WAAW;EAAwB,IAAAC,UAAA,GAAAxlC,0BAAA,CACrCoJ,KAAK;IAAAq8B,MAAA;EAAA;IAAxB,KAAAD,UAAA,CAAAr9C,CAAA,MAAAs9C,MAAA,GAAAD,UAAA,CAAAv8C,CAAA,IAAAkX,IAAA,GAA0B;MAAA,IAAfjI,IAAI,GAAAutC,MAAA,CAAAlyC,KAAA;MACb,IAAK+xC,YAAY,CAACptC,IAAI,CAAC,IAAItK,UAAU,CAACu8B,KAAK,CAACjyB,IAAI,CAAC,CAAC,IAC5CqtC,WAAW,CAACrtC,IAAI,CAAC,IAAI5Q,OAAO,CAAC6iC,KAAK,CAACjyB,IAAI,CAAC,CAAE,EAAE;QAChD,OAAO,IAAI;MACb;IACF;EAAC,SAAAkI,GAAA;IAAAolC,UAAA,CAAA3+C,CAAA,CAAAuZ,GAAA;EAAA;IAAAolC,UAAA,CAAA39C,CAAA;EAAA;EACD,OAAO,KAAK;AACd;AAEA,IAAI69C,OAAO,GAAG,OAAO;AAErB,IAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;AACvE,SAASC,oBAAoBA,CAACrmB,QAAQ,EAAE3e,IAAI,EAAE;EAC5C,OAAO2e,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAKomB,eAAe,CAACz0B,OAAO,CAACqO,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI3e,IAAI,KAAK,GAAI;AAClH;AACA,SAASilC,aAAaA,CAACC,EAAE,EAAEC,EAAE,EAAE;EAC7B,OAAO,UAASp/C,CAAC,EAAEU,CAAC,EAAE;IACpB,OAAOV,CAAC,CAACm/C,EAAE,CAAC,KAAKz+C,CAAC,CAACy+C,EAAE,CAAC,GAClBn/C,CAAC,CAACo/C,EAAE,CAAC,GAAG1+C,CAAC,CAAC0+C,EAAE,CAAC,GACbp/C,CAAC,CAACm/C,EAAE,CAAC,GAAGz+C,CAAC,CAACy+C,EAAE,CAAC;EACnB,CAAC;AACH;AACA,SAASE,oBAAoBA,CAACr9B,OAAO,EAAE;EACrC,IAAMlV,KAAK,GAAGkV,OAAO,CAAClV,KAAK;EAC3B,IAAMsG,gBAAgB,GAAGtG,KAAK,CAACkI,OAAO,CAACzB,SAAS;EAChDzG,KAAK,CAACuhC,aAAa,CAAC,aAAa,CAAC;EAClCppC,QAAQ,CAACmO,gBAAgB,IAAIA,gBAAgB,CAACksC,UAAU,EAAE,CAACt9B,OAAO,CAAC,EAAElV,KAAK,CAAC;AAC7E;AACA,SAASyyC,mBAAmBA,CAACv9B,OAAO,EAAE;EACpC,IAAMlV,KAAK,GAAGkV,OAAO,CAAClV,KAAK;EAC3B,IAAMsG,gBAAgB,GAAGtG,KAAK,CAACkI,OAAO,CAACzB,SAAS;EAChDtO,QAAQ,CAACmO,gBAAgB,IAAIA,gBAAgB,CAACosC,UAAU,EAAE,CAACx9B,OAAO,CAAC,EAAElV,KAAK,CAAC;AAC7E;AACA,SAAS2yC,SAASA,CAAC/wC,IAAI,EAAE;EACvB,IAAIjK,eAAe,CAAC,CAAC,IAAI,OAAOiK,IAAI,KAAK,QAAQ,EAAE;IACjDA,IAAI,GAAG0zB,QAAQ,CAACsd,cAAc,CAAChxC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAACP,MAAM,EAAE;IAC9BO,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;EAChB;EACA,IAAIA,IAAI,IAAIA,IAAI,CAAC6wB,MAAM,EAAE;IACvB7wB,IAAI,GAAGA,IAAI,CAAC6wB,MAAM;EACpB;EACA,OAAO7wB,IAAI;AACb;AACA,IAAMixC,SAAS,GAAG,CAAC,CAAC;AACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIjzC,GAAG,EAAK;EACxB,IAAM4yB,MAAM,GAAGkgB,SAAS,CAAC9yC,GAAG,CAAC;EAC7B,OAAO0G,MAAM,CAACyB,MAAM,CAAC6qC,SAAS,CAAC,CAACnlC,MAAM,CAAC,UAACpa,CAAC;IAAA,OAAKA,CAAC,CAACm/B,MAAM,KAAKA,MAAM;EAAA,EAAC,CAACzwB,GAAG,CAAC,CAAC;AAC1E,CAAC;AAAC,IACI+wC,KAAK;EACT,SAAAA,MAAYnxC,IAAI,EAAEoxC,UAAU,EAAE;IAAA,IAAAC,MAAA;IAAA5zC,eAAA,OAAA0zC,KAAA;IAC5B,IAAM/xC,EAAE,GAAG,IAAI;IACf,IAAMsG,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,IAAI6oC,MAAM,CAAC6C,UAAU,CAAC;IACnD,IAAME,aAAa,GAAGP,SAAS,CAAC/wC,IAAI,CAAC;IACrC,IAAMuxC,aAAa,GAAGL,QAAQ,CAACI,aAAa,CAAC;IAC7C,IAAIC,aAAa,EAAE;MACjB,MAAM,IAAIlpB,KAAK,CACb,4CAA4C,GAAGkpB,aAAa,CAAC7nC,EAAE,GAAG,IAAI,GAC1E,qDACE,CAAC;IACH;IACA,IAAMpD,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAAC3K,MAAM,CAAC0pC,iBAAiB,CAAC,CAAC,EAAEhwC,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;IAClF,IAAI,CAACq+B,QAAQ,GAAG,KAAKjpC,MAAM,CAACipC,QAAQ,IAAIjZ,eAAe,CAAC4b,aAAa,CAAC,EAAE,CAAC;IACzE,IAAMh+B,OAAO,GAAGlU,EAAE,CAACuvC,QAAQ,CAAC/d,cAAc,CAAC0gB,aAAa,EAAEhrC,OAAO,CAACkc,WAAW,CAAC;IAC9E,IAAMqO,MAAM,GAAGvd,OAAO,IAAIA,OAAO,CAACud,MAAM;IACxC,IAAMvV,MAAM,GAAGuV,MAAM,IAAIA,MAAM,CAACvV,MAAM;IACtC,IAAMC,KAAK,GAAGsV,MAAM,IAAIA,MAAM,CAACtV,KAAK;IACpC,IAAI,CAAC7R,EAAE,GAAGzQ,GAAG,CAAC,CAAC;IACf,IAAI,CAACiU,GAAG,GAAGoG,OAAO;IAClB,IAAI,CAACud,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACtV,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACk2B,QAAQ,GAAGlrC,OAAO;IACvB,IAAI,CAACmrC,YAAY,GAAG,IAAI,CAACjvB,WAAW;IACpC,IAAI,CAAC2N,OAAO,GAAG,EAAE;IACjB,IAAI,CAACuhB,SAAS,GAAG,EAAE;IACnB,IAAI,CAACtmC,OAAO,GAAGrN,SAAS;IACxB,IAAI,CAACwuB,KAAK,GAAG,EAAE;IACf,IAAI,CAAC6H,uBAAuB,GAAGr2B,SAAS;IACxC,IAAI,CAACkV,SAAS,GAAGlV,SAAS;IAC1B,IAAI,CAACkC,OAAO,GAAG,EAAE;IACjB,IAAI,CAAC0xC,UAAU,GAAG5zC,SAAS;IAC3B,IAAI,CAAC6zC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,oBAAoB,GAAG9zC,SAAS;IACrC,IAAI,CAAC+zC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACjmC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACkmC,QAAQ,GAAG,IAAI3G,aAAa,CAAC,CAAC;IACnC,IAAI,CAAC/V,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC2c,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACx9B,mBAAmB,GAAG1W,SAAS;IACpC,IAAI,CAAC8P,QAAQ,GAAG9P,SAAS;IACzB,IAAI,CAACm0C,SAAS,GAAG/4C,QAAQ,CAAC;MAAA,OAAMk4C,MAAI,CAACvtC,MAAM,CAAC,QAAQ,CAAC;IAAA,GAAEwC,OAAO,CAAC6rC,WAAW,IAAI,CAAC,CAAC;IAChFlB,SAAS,CAAC7xC,EAAE,CAACsK,EAAE,CAAC,GAAGtK,EAAE;IACrB,IAAI,CAACkU,OAAO,IAAI,CAACud,MAAM,EAAE;MACvBuhB,OAAO,CAACC,KAAK,CAAC,mEAAmE,CAAC;MAClF;IACF;IACAxwC,QAAQ,CAAClB,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAEuxC,oBAAoB,CAAC;IACrD9uC,QAAQ,CAAClB,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAEyxC,mBAAmB,CAAC;IACpDzxC,EAAE,CAACkzC,WAAW,CAAC,CAAC;IAChB,IAAIlzC,EAAE,CAAC6yC,QAAQ,EAAE;MACf7yC,EAAE,CAAC0E,MAAM,CAAC,CAAC;IACb;EACF;EAAC9F,YAAA,CAAAmzC,KAAA;IAAAlzC,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAkB;MAChB,IAAAgyC,cAAA,GAAmF,IAAI,CAAhFjsC,OAAO;QAAGkc,WAAW,GAAA+vB,cAAA,CAAX/vB,WAAW;QAAEgwB,mBAAmB,GAAAD,cAAA,CAAnBC,mBAAmB;QAAGj3B,KAAK,GAA0B,IAAI,CAAnCA,KAAK;QAAED,MAAM,GAAkB,IAAI,CAA5BA,MAAM;QAAEm2B,YAAY,GAAI,IAAI,CAApBA,YAAY;MAC/E,IAAI,CAACx+C,aAAa,CAACuvB,WAAW,CAAC,EAAE;QAC/B,OAAOA,WAAW;MACpB;MACA,IAAIgwB,mBAAmB,IAAIf,YAAY,EAAE;QACvC,OAAOA,YAAY;MACrB;MACA,OAAOn2B,MAAM,GAAGC,KAAK,GAAGD,MAAM,GAAG,IAAI;IACvC;EAAC;IAAArd,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACmF,MAAM,CAACsD,IAAI;IACzB,CAAC;IAAAtI,GAAA,EACD,SAAAA,IAASsI,IAAI,EAAE;MACb,IAAI,CAACtD,MAAM,CAACsD,IAAI,GAAGA,IAAI;IACzB;EAAC;IAAA/K,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACixC,QAAQ;IACtB,CAAC;IAAA9wC,GAAA,EACD,SAAAA,IAAY4F,OAAO,EAAE;MACnB,IAAI,CAACZ,MAAM,CAACY,OAAO,GAAGA,OAAO;IAC/B;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAAo0C,YAAA,EAAc;MACZ,IAAMlzC,EAAE,GAAG,IAAI;MACfA,EAAE,CAACugC,aAAa,CAAC,YAAY,CAAC;MAC9B,IAAIvgC,EAAE,CAACkH,OAAO,CAACmsC,UAAU,EAAE;QACzBrzC,EAAE,CAACgG,MAAM,CAAC,CAAC;MACb,CAAC,MAAM;QACL/L,WAAW,CAAC+F,EAAE,EAAEA,EAAE,CAACkH,OAAO,CAAC6tB,gBAAgB,CAAC;MAC9C;MACA/0B,EAAE,CAACszC,UAAU,CAAC,CAAC;MACftzC,EAAE,CAACugC,aAAa,CAAC,WAAW,CAAC;MAC7B,OAAOvgC,EAAE;IACX;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA2wC,MAAA,EAAQ;MACNt1C,WAAW,CAAC,IAAI,CAACs3B,MAAM,EAAE,IAAI,CAAC3jB,GAAG,CAAC;MAClC,OAAO,IAAI;IACb;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAAuD,KAAA,EAAO;MACLI,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;MACnB,OAAO,IAAI;IACb;EAAC;IAAAxD,GAAA;IAAAC,KAAA,EACD,SAAAkH,OAAOmW,KAAK,EAAED,MAAM,EAAE;MACpB,IAAI,CAACzZ,QAAQ,CAAChC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC3B,IAAI,CAAC8yC,OAAO,CAACp3B,KAAK,EAAED,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAACs3B,iBAAiB,GAAG;UAACr3B,KAAK,EAALA,KAAK;UAAED,MAAM,EAANA;QAAM,CAAC;MAC1C;IACF;EAAC;IAAArd,GAAA;IAAAC,KAAA,EACD,SAAAy0C,QAAQp3B,KAAK,EAAED,MAAM,EAAE;MACrB,IAAMlc,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMuqB,MAAM,GAAGzxB,EAAE,CAACyxB,MAAM;MACxB,IAAMrO,WAAW,GAAGlc,OAAO,CAACksC,mBAAmB,IAAIpzC,EAAE,CAACojB,WAAW;MACjE,IAAMqwB,OAAO,GAAGzzC,EAAE,CAACuvC,QAAQ,CAACt5C,cAAc,CAACw7B,MAAM,EAAEtV,KAAK,EAAED,MAAM,EAAEkH,WAAW,CAAC;MAC9E,IAAMswB,QAAQ,GAAGxsC,OAAO,CAAC6tB,gBAAgB,IAAI/0B,EAAE,CAACuvC,QAAQ,CAACzd,mBAAmB,CAAC,CAAC;MAC9E9xB,EAAE,CAACmc,KAAK,GAAGs3B,OAAO,CAACt3B,KAAK;MACxBnc,EAAE,CAACkc,MAAM,GAAGu3B,OAAO,CAACv3B,MAAM;MAC1Blc,EAAE,CAACqyC,YAAY,GAAGryC,EAAE,CAACojB,WAAW;MAChC,IAAI,CAACnpB,WAAW,CAAC+F,EAAE,EAAE0zC,QAAQ,EAAE,IAAI,CAAC,EAAE;QACpC;MACF;MACA1zC,EAAE,CAACugC,aAAa,CAAC,QAAQ,EAAE;QAAC54B,IAAI,EAAE8rC;MAAO,CAAC,CAAC;MAC3Ct8C,QAAQ,CAAC+P,OAAO,CAACysC,QAAQ,EAAE,CAAC3zC,EAAE,EAAEyzC,OAAO,CAAC,EAAEzzC,EAAE,CAAC;MAC7C,IAAIA,EAAE,CAAC6yC,QAAQ,EAAE;QACf,IAAI7yC,EAAE,CAAC8yC,SAAS,CAAC,CAAC,EAAE;UAClB9yC,EAAE,CAAC4zC,MAAM,CAAC,CAAC;QACb;MACF;IACF;EAAC;IAAA/0C,GAAA;IAAAC,KAAA,EACD,SAAA+0C,oBAAA,EAAsB;MACpB,IAAM3sC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAM4sC,aAAa,GAAG5sC,OAAO,CAACuF,MAAM,IAAI,CAAC,CAAC;MAC1C1W,IAAI,CAAC+9C,aAAa,EAAE,UAACC,WAAW,EAAEpM,MAAM,EAAK;QAC3CoM,WAAW,CAACzpC,EAAE,GAAGq9B,MAAM;MACzB,CAAC,CAAC;IACJ;EAAC;IAAA9oC,GAAA;IAAAC,KAAA,EACD,SAAAk1C,oBAAA,EAAsB;MACpB,IAAMh0C,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM+sC,SAAS,GAAG/sC,OAAO,CAACuF,MAAM;MAChC,IAAMA,MAAM,GAAGzM,EAAE,CAACyM,MAAM;MACxB,IAAMynC,OAAO,GAAG3uC,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACzK,MAAM,CAAC,UAACqZ,GAAG,EAAE/Q,EAAE,EAAK;QACtD+Q,GAAG,CAAC/Q,EAAE,CAAC,GAAG,KAAK;QACf,OAAO+Q,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,IAAI3a,KAAK,GAAG,EAAE;MACd,IAAIuzC,SAAS,EAAE;QACbvzC,KAAK,GAAGA,KAAK,CAAC2J,MAAM,CAClB9E,MAAM,CAACC,IAAI,CAACyuC,SAAS,CAAC,CAACzwB,GAAG,CAAC,UAAClZ,EAAE,EAAK;UACjC,IAAMyjC,YAAY,GAAGkG,SAAS,CAAC3pC,EAAE,CAAC;UAClC,IAAM6B,IAAI,GAAG2hC,aAAa,CAACxjC,EAAE,EAAEyjC,YAAY,CAAC;UAC5C,IAAMoG,QAAQ,GAAGhoC,IAAI,KAAK,GAAG;UAC7B,IAAMyN,YAAY,GAAGzN,IAAI,KAAK,GAAG;UACjC,OAAO;YACLjF,OAAO,EAAE6mC,YAAY;YACrBqG,SAAS,EAAED,QAAQ,GAAG,WAAW,GAAGv6B,YAAY,GAAG,QAAQ,GAAG,MAAM;YACpEy6B,KAAK,EAAEF,QAAQ,GAAG,cAAc,GAAGv6B,YAAY,GAAG,UAAU,GAAG;UACjE,CAAC;QACH,CAAC,CACH,CAAC;MACH;MACA7jB,IAAI,CAAC2K,KAAK,EAAE,UAACE,IAAI,EAAK;QACpB,IAAMmtC,YAAY,GAAGntC,IAAI,CAACsG,OAAO;QACjC,IAAMoD,EAAE,GAAGyjC,YAAY,CAACzjC,EAAE;QAC1B,IAAM6B,IAAI,GAAG2hC,aAAa,CAACxjC,EAAE,EAAEyjC,YAAY,CAAC;QAC5C,IAAMuG,SAAS,GAAGvhD,cAAc,CAACg7C,YAAY,CAAC5uC,IAAI,EAAEyB,IAAI,CAACyzC,KAAK,CAAC;QAC/D,IAAItG,YAAY,CAACjjB,QAAQ,KAAKnsB,SAAS,IAAIwyC,oBAAoB,CAACpD,YAAY,CAACjjB,QAAQ,EAAE3e,IAAI,CAAC,KAAKglC,oBAAoB,CAACvwC,IAAI,CAACwzC,SAAS,CAAC,EAAE;UACrIrG,YAAY,CAACjjB,QAAQ,GAAGlqB,IAAI,CAACwzC,SAAS;QACxC;QACAF,OAAO,CAAC5pC,EAAE,CAAC,GAAG,IAAI;QAClB,IAAItC,KAAK,GAAG,IAAI;QAChB,IAAIsC,EAAE,IAAImC,MAAM,IAAIA,MAAM,CAACnC,EAAE,CAAC,CAACnL,IAAI,KAAKm1C,SAAS,EAAE;UACjDtsC,KAAK,GAAGyE,MAAM,CAACnC,EAAE,CAAC;QACpB,CAAC,MAAM;UACL,IAAMiqC,UAAU,GAAG1I,QAAQ,CAACnB,QAAQ,CAAC4J,SAAS,CAAC;UAC/CtsC,KAAK,GAAG,IAAIusC,UAAU,CAAC;YACrBjqC,EAAE,EAAFA,EAAE;YACFnL,IAAI,EAAEm1C,SAAS;YACfxmC,GAAG,EAAE9N,EAAE,CAAC8N,GAAG;YACX9O,KAAK,EAAEgB;UACT,CAAC,CAAC;UACFyM,MAAM,CAACzE,KAAK,CAACsC,EAAE,CAAC,GAAGtC,KAAK;QAC1B;QACAA,KAAK,CAACm2B,IAAI,CAAC4P,YAAY,EAAE7mC,OAAO,CAAC;MACnC,CAAC,CAAC;MACFnR,IAAI,CAACm+C,OAAO,EAAE,UAACM,UAAU,EAAElqC,EAAE,EAAK;QAChC,IAAI,CAACkqC,UAAU,EAAE;UACf,OAAO/nC,MAAM,CAACnC,EAAE,CAAC;QACnB;MACF,CAAC,CAAC;MACFvU,IAAI,CAAC0W,MAAM,EAAE,UAACzE,KAAK,EAAK;QACtB0lB,OAAO,CAACjnB,SAAS,CAACzG,EAAE,EAAEgI,KAAK,EAAEA,KAAK,CAACd,OAAO,CAAC;QAC3CwmB,OAAO,CAACoD,MAAM,CAAC9wB,EAAE,EAAEgI,KAAK,CAAC;MAC3B,CAAC,CAAC;IACJ;EAAC;IAAAnJ,GAAA;IAAAC,KAAA,EACD,SAAA21C,gBAAA,EAAkB;MAChB,IAAMz0C,EAAE,GAAG,IAAI;MACf,IAAMgJ,QAAQ,GAAGhJ,EAAE,CAACsyC,SAAS;MAC7B,IAAMl8B,OAAO,GAAGpW,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM;MACvC,IAAM8V,OAAO,GAAGnN,QAAQ,CAAC3I,MAAM;MAC/B2I,QAAQ,CAACyO,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC;QAAA,OAAKV,CAAC,CAACiX,KAAK,GAAGvW,CAAC,CAACuW,KAAK;MAAA,EAAC;MAC1C,IAAIgN,OAAO,GAAGC,OAAO,EAAE;QACrB,KAAK,IAAI1jB,CAAC,GAAG0jB,OAAO,EAAE1jB,CAAC,GAAGyjB,OAAO,EAAE,EAAEzjB,CAAC,EAAE;UACtCsN,EAAE,CAAC00C,mBAAmB,CAAChiD,CAAC,CAAC;QAC3B;QACAsW,QAAQ,CAAC2N,MAAM,CAACP,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAC7C;MACApW,EAAE,CAAC0yC,eAAe,GAAG1pC,QAAQ,CAACsb,KAAK,CAAC,CAAC,CAAC,CAAC7M,IAAI,CAAC25B,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC9E;EAAC;IAAAvyC,GAAA;IAAAC,KAAA,EACD,SAAA61C,4BAAA,EAA8B;MAC5B,IAAM30C,EAAE,GAAG,IAAI;MACf,IAAkBgJ,QAAQ,GAAsBhJ,EAAE,CAA3CsyC,SAAS;QAAmBviC,QAAQ,GAAK/P,EAAE,CAAtB4J,IAAI,CAAGmG,QAAQ;MAC3C,IAAI/G,QAAQ,CAAC3I,MAAM,GAAG0P,QAAQ,CAAC1P,MAAM,EAAE;QACrC,OAAOL,EAAE,CAACgM,OAAO;MACnB;MACAhD,QAAQ,CAACxJ,OAAO,CAAC,UAACwK,IAAI,EAAEb,KAAK,EAAK;QAChC,IAAI4G,QAAQ,CAACrD,MAAM,CAAC,UAAApX,CAAC;UAAA,OAAIA,CAAC,KAAK0U,IAAI,CAAC4a,QAAQ;QAAA,EAAC,CAACvkB,MAAM,KAAK,CAAC,EAAE;UAC1DL,EAAE,CAAC00C,mBAAmB,CAACvrC,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA81C,yBAAA,EAA2B;MACzB,IAAM50C,EAAE,GAAG,IAAI;MACf,IAAM60C,cAAc,GAAG,EAAE;MACzB,IAAM9kC,QAAQ,GAAG/P,EAAE,CAAC4J,IAAI,CAACmG,QAAQ;MACjC,IAAIrd,CAAC,EAAEwW,IAAI;MACXlJ,EAAE,CAAC20C,2BAA2B,CAAC,CAAC;MAChC,KAAKjiD,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG6G,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QACjD,IAAMqa,OAAO,GAAGgD,QAAQ,CAACrd,CAAC,CAAC;QAC3B,IAAIsX,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;QAC/B,IAAMyM,IAAI,GAAG4N,OAAO,CAAC5N,IAAI,IAAIa,EAAE,CAACsG,MAAM,CAACnH,IAAI;QAC3C,IAAI6K,IAAI,CAAC7K,IAAI,IAAI6K,IAAI,CAAC7K,IAAI,KAAKA,IAAI,EAAE;UACnCa,EAAE,CAAC00C,mBAAmB,CAAChiD,CAAC,CAAC;UACzBsX,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;QAC7B;QACAsX,IAAI,CAAC7K,IAAI,GAAGA,IAAI;QAChB6K,IAAI,CAACwF,SAAS,GAAGzC,OAAO,CAACyC,SAAS,IAAIg+B,YAAY,CAACruC,IAAI,EAAEa,EAAE,CAACkH,OAAO,CAAC;QACpE8C,IAAI,CAAC8qC,KAAK,GAAG/nC,OAAO,CAAC+nC,KAAK,IAAI,CAAC;QAC/B9qC,IAAI,CAACb,KAAK,GAAGzW,CAAC;QACdsX,IAAI,CAACuJ,KAAK,GAAG,EAAE,GAAGxG,OAAO,CAACwG,KAAK;QAC/BvJ,IAAI,CAAC7D,OAAO,GAAGnG,EAAE,CAACkhB,gBAAgB,CAACxuB,CAAC,CAAC;QACrC,IAAIsX,IAAI,CAAC6B,UAAU,EAAE;UACnB7B,IAAI,CAAC6B,UAAU,CAACkD,WAAW,CAACrc,CAAC,CAAC;UAC9BsX,IAAI,CAAC6B,UAAU,CAAC+C,UAAU,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL,IAAMmmC,eAAe,GAAGlJ,QAAQ,CAACtB,aAAa,CAACprC,IAAI,CAAC;UACpD,IAAA61C,qBAAA,GAA8CviD,QAAQ,CAACsd,QAAQ,CAAC5Q,IAAI,CAAC;YAA9DoR,kBAAkB,GAAAykC,qBAAA,CAAlBzkC,kBAAkB;YAAE6D,eAAe,GAAA4gC,qBAAA,CAAf5gC,eAAe;UAC1C7O,MAAM,CAACqC,MAAM,CAACmtC,eAAe,CAAC39B,SAAS,EAAE;YACvChD,eAAe,EAAEy3B,QAAQ,CAACrB,UAAU,CAACp2B,eAAe,CAAC;YACrD7D,kBAAkB,EAAEA,kBAAkB,IAAIs7B,QAAQ,CAACrB,UAAU,CAACj6B,kBAAkB;UAClF,CAAC,CAAC;UACFvG,IAAI,CAAC6B,UAAU,GAAG,IAAIkpC,eAAe,CAAC/0C,EAAE,EAAEtN,CAAC,CAAC;UAC5CmiD,cAAc,CAACnzC,IAAI,CAACsI,IAAI,CAAC6B,UAAU,CAAC;QACtC;MACF;MACA7L,EAAE,CAACy0C,eAAe,CAAC,CAAC;MACpB,OAAOI,cAAc;IACvB;EAAC;IAAAh2C,GAAA;IAAAC,KAAA,EACD,SAAAm2C,eAAA,EAAiB;MACf,IAAMj1C,EAAE,GAAG,IAAI;MACfjK,IAAI,CAACiK,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,EAAE,UAAChD,OAAO,EAAEtD,YAAY,EAAK;QAChDzJ,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC,CAACoC,UAAU,CAACsE,KAAK,CAAC,CAAC;MACpD,CAAC,EAAEnQ,EAAE,CAAC;IACR;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAqR,MAAA,EAAQ;MACN,IAAI,CAAC8kC,cAAc,CAAC,CAAC;MACrB,IAAI,CAAC1U,aAAa,CAAC,OAAO,CAAC;IAC7B;EAAC;IAAA1hC,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMsG,MAAM,GAAGtG,EAAE,CAACsG,MAAM;MACxBA,MAAM,CAAC5B,MAAM,CAAC,CAAC;MACf1E,EAAE,CAACoyC,QAAQ,GAAG9rC,MAAM,CAAC2K,cAAc,CAAC3K,MAAM,CAAC0pC,iBAAiB,CAAC,CAAC,EAAEhwC,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MAChFnb,IAAI,CAACiK,EAAE,CAACyM,MAAM,EAAE,UAACzE,KAAK,EAAK;QACzB0lB,OAAO,CAACsD,SAAS,CAAChxB,EAAE,EAAEgI,KAAK,CAAC;MAC9B,CAAC,CAAC;MACF,IAAMktC,aAAa,GAAGl1C,EAAE,CAACqV,mBAAmB,GAAG,CAACrV,EAAE,CAACkH,OAAO,CAACzB,SAAS;MACpEzF,EAAE,CAAC6zC,mBAAmB,CAAC,CAAC;MACxB7zC,EAAE,CAACg0C,mBAAmB,CAAC,CAAC;MACxB,IAAMmB,cAAc,GAAG,IAAIpG,GAAG,CAACxpC,MAAM,CAACC,IAAI,CAACxF,EAAE,CAACwyC,UAAU,CAAC,CAAC;MAC1D,IAAM4C,SAAS,GAAG,IAAIrG,GAAG,CAAC/uC,EAAE,CAACkH,OAAO,CAACmuC,MAAM,CAAC;MAC5C,IAAI,CAACh7C,SAAS,CAAC86C,cAAc,EAAEC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC3C,oBAAoB,KAAKzyC,EAAE,CAACkH,OAAO,CAACmsC,UAAU,EAAE;QAClGrzC,EAAE,CAACs1C,YAAY,CAAC,CAAC;QACjBt1C,EAAE,CAACszC,UAAU,CAAC,CAAC;MACjB;MACAtzC,EAAE,CAAC2yC,QAAQ,CAACjG,UAAU,CAAC,CAAC;MACxB,IAAI1sC,EAAE,CAACugC,aAAa,CAAC,cAAc,EAAE;QAAC/2B,IAAI,EAAJA,IAAI;QAAEijC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACxE;MACF;MACA,IAAMoI,cAAc,GAAG70C,EAAE,CAAC40C,wBAAwB,CAAC,CAAC;MACpD50C,EAAE,CAACugC,aAAa,CAAC,sBAAsB,CAAC;MACxC,IAAIrP,UAAU,GAAG,CAAC;MAClB,KAAK,IAAIx+B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC7D,IAAA6iD,kBAAA,GAAqBv1C,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;UAAlCmZ,UAAU,GAAA0pC,kBAAA,CAAV1pC,UAAU;QACjB,IAAMsE,KAAK,GAAG,CAAC+kC,aAAa,IAAIL,cAAc,CAACp4B,OAAO,CAAC5Q,UAAU,CAAC,KAAK,CAAC,CAAC;QACzEA,UAAU,CAAC2E,qBAAqB,CAACL,KAAK,CAAC;QACvC+gB,UAAU,GAAGtxB,IAAI,CAACuC,GAAG,CAAC,CAAC0J,UAAU,CAACwH,cAAc,CAAC,CAAC,EAAE6d,UAAU,CAAC;MACjE;MACAlxB,EAAE,CAAC4rB,WAAW,GAAGsF,UAAU;MAC3BlxB,EAAE,CAACw1C,aAAa,CAACtkB,UAAU,CAAC;MAC5B,IAAI,CAACgkB,aAAa,EAAE;QAClBn/C,IAAI,CAAC8+C,cAAc,EAAE,UAAChpC,UAAU,EAAK;UACnCA,UAAU,CAACsE,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;MACJ;MACAnQ,EAAE,CAACy1C,eAAe,CAACjsC,IAAI,CAAC;MACxBxJ,EAAE,CAACugC,aAAa,CAAC,aAAa,EAAE;QAAC/2B,IAAI,EAAJA;MAAI,CAAC,CAAC;MACvCxJ,EAAE,CAAC+wB,OAAO,CAACtZ,IAAI,CAAC25B,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;MAC3C,IAAIpxC,EAAE,CAACuyC,UAAU,EAAE;QACjBvyC,EAAE,CAAC01C,aAAa,CAAC11C,EAAE,CAACuyC,UAAU,EAAE,IAAI,CAAC;MACvC;MACAvyC,EAAE,CAAC4zC,MAAM,CAAC,CAAC;IACb;EAAC;IAAA/0C,GAAA;IAAAC,KAAA,EACD,SAAA02C,cAActkB,UAAU,EAAE;MACxB,IAAMlxB,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACugC,aAAa,CAAC,cAAc,EAAE;QAACkM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACA/e,OAAO,CAAChpB,MAAM,CAAC1E,EAAE,EAAEA,EAAE,CAACmc,KAAK,EAAEnc,EAAE,CAACkc,MAAM,EAAEgV,UAAU,CAAC;MACnD,IAAMtd,IAAI,GAAG5T,EAAE,CAAC6T,SAAS;MACzB,IAAM8hC,MAAM,GAAG/hC,IAAI,CAACuI,KAAK,IAAI,CAAC,IAAIvI,IAAI,CAACsI,MAAM,IAAI,CAAC;MAClDlc,EAAE,CAAC+wB,OAAO,GAAG,EAAE;MACfh7B,IAAI,CAACiK,EAAE,CAACmtB,KAAK,EAAE,UAACJ,GAAG,EAAK;QAAA,IAAA6oB,WAAA;QACtB,IAAID,MAAM,IAAI5oB,GAAG,CAACjC,QAAQ,KAAK,WAAW,EAAE;UAC1C;QACF;QACA,IAAIiC,GAAG,CAACtmB,SAAS,EAAE;UACjBsmB,GAAG,CAACtmB,SAAS,CAAC,CAAC;QACjB;QACA,CAAAmvC,WAAA,GAAA51C,EAAE,CAAC+wB,OAAO,EAACrvB,IAAI,CAAAG,KAAA,CAAA+zC,WAAA,EAAA9zC,kBAAA,CAAIirB,GAAG,CAACgE,OAAO,CAAC,CAAC,EAAC;MACnC,CAAC,EAAE/wB,EAAE,CAAC;MACNA,EAAE,CAAC+wB,OAAO,CAACvxB,OAAO,CAAC,UAACoB,IAAI,EAAEuI,KAAK,EAAK;QAClCvI,IAAI,CAACi1C,IAAI,GAAG1sC,KAAK;MACnB,CAAC,CAAC;MACFnJ,EAAE,CAACugC,aAAa,CAAC,aAAa,CAAC;IACjC;EAAC;IAAA1hC,GAAA;IAAAC,KAAA,EACD,SAAA22C,gBAAgBjsC,IAAI,EAAE;MACpB,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM7G,UAAU,GAAG,OAAOqQ,IAAI,KAAK,UAAU;MAC7C,IAAIxJ,EAAE,CAACugC,aAAa,CAAC,sBAAsB,EAAE;QAAC/2B,IAAI,EAAJA,IAAI;QAAEijC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAChF;MACF;MACA,KAAK,IAAI/5C,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7DsN,EAAE,CAAC81C,cAAc,CAACpjD,CAAC,EAAEyG,UAAU,GAAGqQ,IAAI,CAAC;UAACC,YAAY,EAAE/W;QAAC,CAAC,CAAC,GAAG8W,IAAI,CAAC;MACnE;MACAxJ,EAAE,CAACugC,aAAa,CAAC,qBAAqB,EAAE;QAAC/2B,IAAI,EAAJA;MAAI,CAAC,CAAC;IACjD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAg3C,eAAe3sC,KAAK,EAAEK,IAAI,EAAE;MAC1B,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAAC7G,KAAK,CAAC;MACrC,IAAM0N,IAAI,GAAG;QAAC7M,IAAI,EAAJA,IAAI;QAAEb,KAAK,EAALA,KAAK;QAAEK,IAAI,EAAJA,IAAI;QAAEijC,UAAU,EAAE;MAAI,CAAC;MAClD,IAAIzsC,EAAE,CAACugC,aAAa,CAAC,qBAAqB,EAAE1pB,IAAI,CAAC,KAAK,KAAK,EAAE;QAC3D;MACF;MACA7M,IAAI,CAAC6B,UAAU,CAAC1L,OAAO,CAACqJ,IAAI,CAAC;MAC7BqN,IAAI,CAAC41B,UAAU,GAAG,KAAK;MACvBzsC,EAAE,CAACugC,aAAa,CAAC,oBAAoB,EAAE1pB,IAAI,CAAC;IAC9C;EAAC;IAAAhY,GAAA;IAAAC,KAAA,EACD,SAAA80C,OAAA,EAAS;MACP,IAAM5zC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACugC,aAAa,CAAC,cAAc,EAAE;QAACkM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACA,IAAIhqC,QAAQ,CAACV,GAAG,CAAC/B,EAAE,CAAC,EAAE;QACpB,IAAIA,EAAE,CAAC6yC,QAAQ,IAAI,CAACpwC,QAAQ,CAAChC,OAAO,CAACT,EAAE,CAAC,EAAE;UACxCyC,QAAQ,CAAC3C,KAAK,CAACE,EAAE,CAAC;QACpB;MACF,CAAC,MAAM;QACLA,EAAE,CAACW,IAAI,CAAC,CAAC;QACT4wC,oBAAoB,CAAC;UAACvyC,KAAK,EAAEgB;QAAE,CAAC,CAAC;MACnC;IACF;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAItN,CAAC;MACL,IAAIsN,EAAE,CAACwzC,iBAAiB,EAAE;QACxB,IAAAuC,qBAAA,GAAwB/1C,EAAE,CAACwzC,iBAAiB;UAArCr3B,KAAK,GAAA45B,qBAAA,CAAL55B,KAAK;UAAED,MAAM,GAAA65B,qBAAA,CAAN75B,MAAM;QACpBlc,EAAE,CAACuzC,OAAO,CAACp3B,KAAK,EAAED,MAAM,CAAC;QACzBlc,EAAE,CAACwzC,iBAAiB,GAAG,IAAI;MAC7B;MACAxzC,EAAE,CAACyvC,KAAK,CAAC,CAAC;MACV,IAAIzvC,EAAE,CAACmc,KAAK,IAAI,CAAC,IAAInc,EAAE,CAACkc,MAAM,IAAI,CAAC,EAAE;QACnC;MACF;MACA,IAAIlc,EAAE,CAACugC,aAAa,CAAC,YAAY,EAAE;QAACkM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAChE;MACF;MACA,IAAMuJ,MAAM,GAAGh2C,EAAE,CAAC+wB,OAAO;MACzB,KAAKr+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsjD,MAAM,CAAC31C,MAAM,IAAI21C,MAAM,CAACtjD,CAAC,CAAC,CAACgD,CAAC,IAAI,CAAC,EAAE,EAAEhD,CAAC,EAAE;QACtDsjD,MAAM,CAACtjD,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6T,SAAS,CAAC;MAC9B;MACA7T,EAAE,CAACi2C,aAAa,CAAC,CAAC;MAClB,OAAOvjD,CAAC,GAAGsjD,MAAM,CAAC31C,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAC7BsjD,MAAM,CAACtjD,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6T,SAAS,CAAC;MAC9B;MACA7T,EAAE,CAACugC,aAAa,CAAC,WAAW,CAAC;IAC/B;EAAC;IAAA1hC,GAAA;IAAAC,KAAA,EACD,SAAAmK,uBAAuBF,aAAa,EAAE;MACpC,IAAM/I,EAAE,GAAG,IAAI;MACf,IAAMgJ,QAAQ,GAAGhJ,EAAE,CAAC0yC,eAAe;MACnC,IAAM7X,MAAM,GAAG,EAAE;MACjB,IAAInoC,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAMsX,IAAI,GAAGhB,QAAQ,CAACtW,CAAC,CAAC;QACxB,IAAI,CAACqW,aAAa,IAAIiB,IAAI,CAAC7D,OAAO,EAAE;UAClC00B,MAAM,CAACn5B,IAAI,CAACsI,IAAI,CAAC;QACnB;MACF;MACA,OAAO6wB,MAAM;IACf;EAAC;IAAAh8B,GAAA;IAAAC,KAAA,EACD,SAAAqrB,6BAAA,EAA+B;MAC7B,OAAO,IAAI,CAAClhB,sBAAsB,CAAC,IAAI,CAAC;IAC1C;EAAC;IAAApK,GAAA;IAAAC,KAAA,EACD,SAAAm3C,cAAA,EAAgB;MACd,IAAMj2C,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACugC,aAAa,CAAC,oBAAoB,EAAE;QAACkM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACxE;MACF;MACA,IAAMzjC,QAAQ,GAAGhJ,EAAE,CAACmqB,4BAA4B,CAAC,CAAC;MAClD,KAAK,IAAIz3B,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC7CsN,EAAE,CAACk2C,YAAY,CAACltC,QAAQ,CAACtW,CAAC,CAAC,CAAC;MAC9B;MACAsN,EAAE,CAACugC,aAAa,CAAC,mBAAmB,CAAC;IACvC;EAAC;IAAA1hC,GAAA;IAAAC,KAAA,EACD,SAAAo3C,aAAalsC,IAAI,EAAE;MACjB,IAAMhK,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM4F,IAAI,GAAG1J,IAAI,CAACyJ,KAAK;MACvB,IAAM0iC,OAAO,GAAG,CAACziC,IAAI,CAAC7K,QAAQ;MAC9B,IAAM+K,IAAI,GAAG5T,EAAE,CAAC6T,SAAS;MACzB,IAAMgD,IAAI,GAAG;QACX7M,IAAI,EAAJA,IAAI;QACJb,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjBsjC,UAAU,EAAE;MACd,CAAC;MACD,IAAIzsC,EAAE,CAACugC,aAAa,CAAC,mBAAmB,EAAE1pB,IAAI,CAAC,KAAK,KAAK,EAAE;QACzD;MACF;MACA,IAAIs/B,OAAO,EAAE;QACXp+C,QAAQ,CAAC+V,GAAG,EAAE;UACZnF,IAAI,EAAE+K,IAAI,CAAC/K,IAAI,KAAK,KAAK,GAAG,CAAC,GAAGiL,IAAI,CAACjL,IAAI,GAAG+K,IAAI,CAAC/K,IAAI;UACrDF,KAAK,EAAEiL,IAAI,CAACjL,KAAK,KAAK,KAAK,GAAGzI,EAAE,CAACmc,KAAK,GAAGvI,IAAI,CAACnL,KAAK,GAAGiL,IAAI,CAACjL,KAAK;UAChED,GAAG,EAAEkL,IAAI,CAAClL,GAAG,KAAK,KAAK,GAAG,CAAC,GAAGoL,IAAI,CAACpL,GAAG,GAAGkL,IAAI,CAAClL,GAAG;UACjDE,MAAM,EAAEgL,IAAI,CAAChL,MAAM,KAAK,KAAK,GAAG1I,EAAE,CAACkc,MAAM,GAAGtI,IAAI,CAAClL,MAAM,GAAGgL,IAAI,CAAChL;QACjE,CAAC,CAAC;MACJ;MACAsB,IAAI,CAAC6B,UAAU,CAAClL,IAAI,CAAC,CAAC;MACtB,IAAIw1C,OAAO,EAAE;QACXh+C,UAAU,CAAC2V,GAAG,CAAC;MACjB;MACA+I,IAAI,CAAC41B,UAAU,GAAG,KAAK;MACvBzsC,EAAE,CAACugC,aAAa,CAAC,kBAAkB,EAAE1pB,IAAI,CAAC;IAC5C;EAAC;IAAAhY,GAAA;IAAAC,KAAA,EACD,SAAAs3C,0BAA0BhkD,CAAC,EAAEoX,IAAI,EAAEtC,OAAO,EAAEykB,gBAAgB,EAAE;MAC5D,IAAMxmB,MAAM,GAAGonB,WAAW,CAACC,KAAK,CAAChjB,IAAI,CAAC;MACtC,IAAI,OAAOrE,MAAM,KAAK,UAAU,EAAE;QAChC,OAAOA,MAAM,CAAC,IAAI,EAAE/S,CAAC,EAAE8U,OAAO,EAAEykB,gBAAgB,CAAC;MACnD;MACA,OAAO,EAAE;IACX;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAAkR,eAAevG,YAAY,EAAE;MAC3B,IAAMzJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC;MAC9C,IAAMT,QAAQ,GAAGhJ,EAAE,CAACsyC,SAAS;MAC7B,IAAItoC,IAAI,GAAGhB,QAAQ,CAAC0D,MAAM,CAAC,UAAApX,CAAC;QAAA,OAAIA,CAAC,IAAIA,CAAC,CAACsvB,QAAQ,KAAK7X,OAAO;MAAA,EAAC,CAAC/L,GAAG,CAAC,CAAC;MAClE,IAAI,CAACgJ,IAAI,EAAE;QACTA,IAAI,GAAG;UACL7K,IAAI,EAAE,IAAI;UACVyK,IAAI,EAAE,EAAE;UACRmD,OAAO,EAAE,IAAI;UACblB,UAAU,EAAE,IAAI;UAChBiI,MAAM,EAAE,IAAI;UACZ3E,OAAO,EAAE,IAAI;UACbE,OAAO,EAAE,IAAI;UACbylC,KAAK,EAAE/nC,OAAO,IAAIA,OAAO,CAAC+nC,KAAK,IAAI,CAAC;UACpC3rC,KAAK,EAAEM,YAAY;UACnBmb,QAAQ,EAAE7X,OAAO;UACjBM,OAAO,EAAE,EAAE;UACXkE,OAAO,EAAE;QACX,CAAC;QACDvI,QAAQ,CAACtH,IAAI,CAACsI,IAAI,CAAC;MACrB;MACA,OAAOA,IAAI;IACb;EAAC;IAAAnL,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAA,EAAa;MACX,OAAO,IAAI,CAACzC,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAG;QAACzP,KAAK,EAAE,IAAI;QAAEG,IAAI,EAAE;MAAO,CAAC,CAAC;IACxE;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAooB,uBAAA,EAAyB;MACvB,OAAO,IAAI,CAACiD,4BAA4B,CAAC,CAAC,CAAC9pB,MAAM;IACnD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAoiB,iBAAiBzX,YAAY,EAAE;MAC7B,IAAMsD,OAAO,GAAG,IAAI,CAACnD,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC;MAChD,IAAI,CAACsD,OAAO,EAAE;QACZ,OAAO,KAAK;MACd;MACA,IAAM/C,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACvG,YAAY,CAAC;MAC9C,OAAO,OAAOO,IAAI,CAAC8J,MAAM,KAAK,SAAS,GAAG,CAAC9J,IAAI,CAAC8J,MAAM,GAAG,CAAC/G,OAAO,CAAC+G,MAAM;IAC1E;EAAC;IAAAjV,GAAA;IAAAC,KAAA,EACD,SAAAu3C,qBAAqB5sC,YAAY,EAAEtD,OAAO,EAAE;MAC1C,IAAM6D,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACvG,YAAY,CAAC;MAC9CO,IAAI,CAAC8J,MAAM,GAAG,CAAC3N,OAAO;IACxB;EAAC;IAAAtH,GAAA;IAAAC,KAAA,EACD,SAAAolB,qBAAqB/a,KAAK,EAAE;MAC1B,IAAI,CAACypC,cAAc,CAACzpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAACypC,cAAc,CAACzpC,KAAK,CAAC;IAC1D;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAqe,kBAAkBhU,KAAK,EAAE;MACvB,OAAO,CAAC,IAAI,CAACypC,cAAc,CAACzpC,KAAK,CAAC;IACpC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAw3C,kBAAkB7sC,YAAY,EAAEyD,SAAS,EAAE/G,OAAO,EAAE;MAClD,IAAMnG,EAAE,GAAG,IAAI;MACf,IAAMwJ,IAAI,GAAGrD,OAAO,GAAG,MAAM,GAAG,MAAM;MACtC,IAAM6D,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC;MAC5C,IAAMxK,KAAK,GAAG+K,IAAI,CAAC6B,UAAU,CAACiJ,kBAAkB,CAACnW,SAAS,EAAE6K,IAAI,CAAC;MACjE,IAAI/V,OAAO,CAACyZ,SAAS,CAAC,EAAE;QACtBlD,IAAI,CAACJ,IAAI,CAACsD,SAAS,CAAC,CAAC4G,MAAM,GAAG,CAAC3N,OAAO;QACtCnG,EAAE,CAAC0E,MAAM,CAAC,CAAC;MACb,CAAC,MAAM;QACL1E,EAAE,CAACq2C,oBAAoB,CAAC5sC,YAAY,EAAEtD,OAAO,CAAC;QAC9ClH,KAAK,CAACyF,MAAM,CAACsF,IAAI,EAAE;UAAC7D,OAAO,EAAPA;QAAO,CAAC,CAAC;QAC7BnG,EAAE,CAAC0E,MAAM,CAAC,UAACoJ,GAAG;UAAA,OAAKA,GAAG,CAACrE,YAAY,KAAKA,YAAY,GAAGD,IAAI,GAAG7K,SAAS;QAAA,EAAC;MAC1E;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAsH,KAAKqD,YAAY,EAAEyD,SAAS,EAAE;MAC5B,IAAI,CAACopC,iBAAiB,CAAC7sC,YAAY,EAAEyD,SAAS,EAAE,KAAK,CAAC;IACxD;EAAC;IAAArO,GAAA;IAAAC,KAAA,EACD,SAAAmH,KAAKwD,YAAY,EAAEyD,SAAS,EAAE;MAC5B,IAAI,CAACopC,iBAAiB,CAAC7sC,YAAY,EAAEyD,SAAS,EAAE,IAAI,CAAC;IACvD;EAAC;IAAArO,GAAA;IAAAC,KAAA,EACD,SAAA41C,oBAAoBjrC,YAAY,EAAE;MAChC,IAAMzJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAACsyC,SAAS,IAAItyC,EAAE,CAACsyC,SAAS,CAAC7oC,YAAY,CAAC;MACvD,IAAIO,IAAI,IAAIA,IAAI,CAAC6B,UAAU,EAAE;QAC3B7B,IAAI,CAAC6B,UAAU,CAACuE,QAAQ,CAAC,CAAC;QAC1B,OAAOpQ,EAAE,CAACsyC,SAAS,CAAC7oC,YAAY,CAAC;MACnC;IACF;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAAy3C,QAAA,EAAU;MACR,IAAMv2C,EAAE,GAAG,IAAI;MACf,IAAOyxB,MAAM,GAASzxB,EAAE,CAAjByxB,MAAM;QAAE3jB,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MAClB,IAAIpb,CAAC,EAAEwW,IAAI;MACXlJ,EAAE,CAACqC,IAAI,CAAC,CAAC;MACTI,QAAQ,CAACF,MAAM,CAACvC,EAAE,CAAC;MACnB,KAAKtN,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzDsN,EAAE,CAAC00C,mBAAmB,CAAChiD,CAAC,CAAC;MAC3B;MACAsN,EAAE,CAACsG,MAAM,CAACkpC,UAAU,CAAC,CAAC;MACtB,IAAI/d,MAAM,EAAE;QACVzxB,EAAE,CAACs1C,YAAY,CAAC,CAAC;QACjBn7C,WAAW,CAACs3B,MAAM,EAAE3jB,GAAG,CAAC;QACxB9N,EAAE,CAACuvC,QAAQ,CAAC7d,cAAc,CAAC5jB,GAAG,CAAC;QAC/B9N,EAAE,CAACyxB,MAAM,GAAG,IAAI;QAChBzxB,EAAE,CAAC8N,GAAG,GAAG,IAAI;MACf;MACA9N,EAAE,CAACugC,aAAa,CAAC,SAAS,CAAC;MAC3B,OAAOsR,SAAS,CAAC7xC,EAAE,CAACsK,EAAE,CAAC;IACzB;EAAC;IAAAzL,GAAA;IAAAC,KAAA,EACD,SAAA03C,cAAA,EAAuB;MAAA,IAAAC,YAAA;MACrB,OAAO,CAAAA,YAAA,OAAI,CAAChlB,MAAM,EAACilB,SAAS,CAAA70C,KAAA,CAAA40C,YAAA,EAAAr2C,SAAQ,CAAC;IACvC;EAAC;IAAAvB,GAAA;IAAAC,KAAA,EACD,SAAAw0C,WAAA,EAAa;MACX,IAAI,CAACqD,cAAc,CAAC,CAAC;MACrB,IAAI,IAAI,CAACzvC,OAAO,CAACmsC,UAAU,EAAE;QAC3B,IAAI,CAACuD,oBAAoB,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAAC/D,QAAQ,GAAG,IAAI;MACtB;IACF;EAAC;IAAAh0C,GAAA;IAAAC,KAAA,EACD,SAAA63C,eAAA,EAAiB;MACf,IAAM32C,EAAE,GAAG,IAAI;MACf,IAAMX,SAAS,GAAGW,EAAE,CAACwyC,UAAU;MAC/B,IAAMjD,QAAQ,GAAGvvC,EAAE,CAACuvC,QAAQ;MAC5B,IAAMsH,IAAI,GAAG,SAAPA,IAAIA,CAAI13C,IAAI,EAAEyyB,QAAQ,EAAK;QAC/B2d,QAAQ,CAAC5d,gBAAgB,CAAC3xB,EAAE,EAAEb,IAAI,EAAEyyB,QAAQ,CAAC;QAC7CvyB,SAAS,CAACF,IAAI,CAAC,GAAGyyB,QAAQ;MAC5B,CAAC;MACD,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CAAYx/B,CAAC,EAAEkD,CAAC,EAAEE,CAAC,EAAE;QACjCpD,CAAC,CAACotB,OAAO,GAAGlqB,CAAC;QACblD,CAAC,CAACqtB,OAAO,GAAGjqB,CAAC;QACbwK,EAAE,CAAC01C,aAAa,CAACtjD,CAAC,CAAC;MACrB,CAAC;MACD2D,IAAI,CAACiK,EAAE,CAACkH,OAAO,CAACmuC,MAAM,EAAE,UAACl2C,IAAI;QAAA,OAAK03C,IAAI,CAAC13C,IAAI,EAAEyyB,QAAQ,CAAC;MAAA,EAAC;IACzD;EAAC;IAAA/yB,GAAA;IAAAC,KAAA,EACD,SAAA83C,qBAAA,EAAuB;MACrB,IAAM52C,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAACyyC,oBAAoB,EAAE;QAC5BzyC,EAAE,CAACyyC,oBAAoB,GAAG,CAAC,CAAC;MAC9B;MACA,IAAMpzC,SAAS,GAAGW,EAAE,CAACyyC,oBAAoB;MACzC,IAAMlD,QAAQ,GAAGvvC,EAAE,CAACuvC,QAAQ;MAC5B,IAAMsH,IAAI,GAAG,SAAPA,IAAIA,CAAI13C,IAAI,EAAEyyB,QAAQ,EAAK;QAC/B2d,QAAQ,CAAC5d,gBAAgB,CAAC3xB,EAAE,EAAEb,IAAI,EAAEyyB,QAAQ,CAAC;QAC7CvyB,SAAS,CAACF,IAAI,CAAC,GAAGyyB,QAAQ;MAC5B,CAAC;MACD,IAAMklB,OAAO,GAAG,SAAVA,OAAOA,CAAI33C,IAAI,EAAEyyB,QAAQ,EAAK;QAClC,IAAIvyB,SAAS,CAACF,IAAI,CAAC,EAAE;UACnBowC,QAAQ,CAAC1d,mBAAmB,CAAC7xB,EAAE,EAAEb,IAAI,EAAEyyB,QAAQ,CAAC;UAChD,OAAOvyB,SAAS,CAACF,IAAI,CAAC;QACxB;MACF,CAAC;MACD,IAAMyyB,QAAQ,GAAG,SAAXA,QAAQA,CAAIzV,KAAK,EAAED,MAAM,EAAK;QAClC,IAAIlc,EAAE,CAACyxB,MAAM,EAAE;UACbzxB,EAAE,CAACgG,MAAM,CAACmW,KAAK,EAAED,MAAM,CAAC;QAC1B;MACF,CAAC;MACD,IAAI66B,QAAQ;MACZ,IAAMlE,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;QACrBiE,OAAO,CAAC,QAAQ,EAAEjE,QAAQ,CAAC;QAC3B7yC,EAAE,CAAC6yC,QAAQ,GAAG,IAAI;QAClB7yC,EAAE,CAACgG,MAAM,CAAC,CAAC;QACX6wC,IAAI,CAAC,QAAQ,EAAEjlB,QAAQ,CAAC;QACxBilB,IAAI,CAAC,QAAQ,EAAEE,QAAQ,CAAC;MAC1B,CAAC;MACDA,QAAQ,GAAG,SAAAA,SAAA,EAAM;QACf/2C,EAAE,CAAC6yC,QAAQ,GAAG,KAAK;QACnBiE,OAAO,CAAC,QAAQ,EAAEllB,QAAQ,CAAC;QAC3BilB,IAAI,CAAC,QAAQ,EAAEhE,QAAQ,CAAC;MAC1B,CAAC;MACD,IAAItD,QAAQ,CAACxd,UAAU,CAAC/xB,EAAE,CAACyxB,MAAM,CAAC,EAAE;QAClCohB,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACLkE,QAAQ,CAAC,CAAC;MACZ;IACF;EAAC;IAAAl4C,GAAA;IAAAC,KAAA,EACD,SAAAw2C,aAAA,EAAe;MACb,IAAMt1C,EAAE,GAAG,IAAI;MACfjK,IAAI,CAACiK,EAAE,CAACwyC,UAAU,EAAE,UAAC5gB,QAAQ,EAAEzyB,IAAI,EAAK;QACtCa,EAAE,CAACuvC,QAAQ,CAAC1d,mBAAmB,CAAC7xB,EAAE,EAAEb,IAAI,EAAEyyB,QAAQ,CAAC;MACrD,CAAC,CAAC;MACF5xB,EAAE,CAACwyC,UAAU,GAAG,CAAC,CAAC;MAClBz8C,IAAI,CAACiK,EAAE,CAACyyC,oBAAoB,EAAE,UAAC7gB,QAAQ,EAAEzyB,IAAI,EAAK;QAChDa,EAAE,CAACuvC,QAAQ,CAAC1d,mBAAmB,CAAC7xB,EAAE,EAAEb,IAAI,EAAEyyB,QAAQ,CAAC;MACrD,CAAC,CAAC;MACF5xB,EAAE,CAACyyC,oBAAoB,GAAG9zC,SAAS;IACrC;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAk4C,iBAAiBt2C,KAAK,EAAE8I,IAAI,EAAEqwB,OAAO,EAAE;MACrC,IAAMod,MAAM,GAAGpd,OAAO,GAAG,KAAK,GAAG,QAAQ;MACzC,IAAI7vB,IAAI,EAAEpJ,IAAI,EAAElO,CAAC,EAAEwW,IAAI;MACvB,IAAIM,IAAI,KAAK,SAAS,EAAE;QACtBQ,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACtP,KAAK,CAAC,CAAC,CAAC,CAAC+I,YAAY,CAAC;QACjDO,IAAI,CAAC6B,UAAU,CAAC,GAAG,GAAGorC,MAAM,GAAG,mBAAmB,CAAC,CAAC,CAAC;MACvD;MACA,KAAKvkD,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;QACf,IAAMmZ,UAAU,GAAGjL,IAAI,IAAI,IAAI,CAACoP,cAAc,CAACpP,IAAI,CAAC6I,YAAY,CAAC,CAACoC,UAAU;QAC5E,IAAIA,UAAU,EAAE;UACdA,UAAU,CAACorC,MAAM,GAAG,YAAY,CAAC,CAACr2C,IAAI,CAACqM,OAAO,EAAErM,IAAI,CAAC6I,YAAY,EAAE7I,IAAI,CAACuI,KAAK,CAAC;QAChF;MACF;IACF;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAo4C,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAACr2C,OAAO,IAAI,EAAE;IAC3B;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAAq4C,kBAAkBC,cAAc,EAAE;MAChC,IAAMp3C,EAAE,GAAG,IAAI;MACf,IAAMq3C,UAAU,GAAGr3C,EAAE,CAACa,OAAO,IAAI,EAAE;MACnC,IAAM4D,MAAM,GAAG2yC,cAAc,CAAC5zB,GAAG,CAAC,UAAA8zB,IAAA,EAA2B;QAAA,IAAzB7tC,YAAY,GAAA6tC,IAAA,CAAZ7tC,YAAY;UAAEN,KAAK,GAAAmuC,IAAA,CAALnuC,KAAK;QACrD,IAAMa,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC;QAC5C,IAAI,CAACO,IAAI,EAAE;UACT,MAAM,IAAIif,KAAK,CAAC,4BAA4B,GAAGxf,YAAY,CAAC;QAC9D;QACA,OAAO;UACLA,YAAY,EAAZA,YAAY;UACZwD,OAAO,EAAEjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;UACzBA,KAAK,EAALA;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAMud,OAAO,GAAG,CAACnsB,cAAc,CAACkK,MAAM,EAAE4yC,UAAU,CAAC;MACnD,IAAI3wB,OAAO,EAAE;QACX1mB,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAACu3C,kBAAkB,CAAC9yC,MAAM,EAAE4yC,UAAU,CAAC;MAC3C;IACF;EAAC;IAAAx4C,GAAA;IAAAC,KAAA,EACD,SAAAyhC,cAAc4L,IAAI,EAAEt1B,IAAI,EAAEnK,MAAM,EAAE;MAChC,OAAO,IAAI,CAACimC,QAAQ,CAACzG,MAAM,CAAC,IAAI,EAAEC,IAAI,EAAEt1B,IAAI,EAAEnK,MAAM,CAAC;IACvD;EAAC;IAAA7N,GAAA;IAAAC,KAAA,EACD,SAAAy4C,mBAAmB9yC,MAAM,EAAE4yC,UAAU,EAAEG,MAAM,EAAE;MAC7C,IAAMx3C,EAAE,GAAG,IAAI;MACf,IAAMy3C,YAAY,GAAGz3C,EAAE,CAACkH,OAAO,CAACwwC,KAAK;MACrC,IAAMluB,IAAI,GAAG,SAAPA,IAAIA,CAAIt3B,CAAC,EAAEU,CAAC;QAAA,OAAKV,CAAC,CAACwa,MAAM,CAAC,UAAApX,CAAC;UAAA,OAAI,CAAC1C,CAAC,CAACo6C,IAAI,CAAC,UAAAx3C,CAAC;YAAA,OAAIF,CAAC,CAACmU,YAAY,KAAKjU,CAAC,CAACiU,YAAY,IAAInU,CAAC,CAAC6T,KAAK,KAAK3T,CAAC,CAAC2T,KAAK;UAAA,EAAC;QAAA,EAAC;MAAA;MAC5G,IAAMwuC,WAAW,GAAGnuB,IAAI,CAAC6tB,UAAU,EAAE5yC,MAAM,CAAC;MAC5C,IAAMmzC,SAAS,GAAGJ,MAAM,GAAG/yC,MAAM,GAAG+kB,IAAI,CAAC/kB,MAAM,EAAE4yC,UAAU,CAAC;MAC5D,IAAIM,WAAW,CAACt3C,MAAM,EAAE;QACtBL,EAAE,CAACg3C,gBAAgB,CAACW,WAAW,EAAEF,YAAY,CAACjuC,IAAI,EAAE,KAAK,CAAC;MAC5D;MACA,IAAIouC,SAAS,CAACv3C,MAAM,IAAIo3C,YAAY,CAACjuC,IAAI,EAAE;QACzCxJ,EAAE,CAACg3C,gBAAgB,CAACY,SAAS,EAAEH,YAAY,CAACjuC,IAAI,EAAE,IAAI,CAAC;MACzD;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA42C,cAActjD,CAAC,EAAEolD,MAAM,EAAE;MAAA,IAAAK,MAAA;MACvB,IAAM73C,EAAE,GAAG,IAAI;MACf,IAAM6W,IAAI,GAAG;QAACrV,KAAK,EAAEpP,CAAC;QAAEolD,MAAM,EAANA,MAAM;QAAE/K,UAAU,EAAE;MAAI,CAAC;MACjD,IAAMqL,WAAW,GAAG,SAAdA,WAAWA,CAAItL,MAAM;QAAA,OAAK,CAACA,MAAM,CAACtlC,OAAO,CAACmuC,MAAM,IAAIwC,MAAI,CAAC3wC,OAAO,CAACmuC,MAAM,EAAEvnB,QAAQ,CAAC17B,CAAC,CAAC+M,IAAI,CAAC;MAAA;MAC/F,IAAIa,EAAE,CAACugC,aAAa,CAAC,aAAa,EAAE1pB,IAAI,EAAEihC,WAAW,CAAC,KAAK,KAAK,EAAE;QAChE;MACF;MACA,IAAMpxB,OAAO,GAAG1mB,EAAE,CAAC+3C,YAAY,CAAC3lD,CAAC,EAAEolD,MAAM,CAAC;MAC1C3gC,IAAI,CAAC41B,UAAU,GAAG,KAAK;MACvBzsC,EAAE,CAACugC,aAAa,CAAC,YAAY,EAAE1pB,IAAI,EAAEihC,WAAW,CAAC;MACjD,IAAIpxB,OAAO,IAAI7P,IAAI,CAAC6P,OAAO,EAAE;QAC3B1mB,EAAE,CAAC4zC,MAAM,CAAC,CAAC;MACb;MACA,OAAO5zC,EAAE;IACX;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAi5C,aAAa3lD,CAAC,EAAEolD,MAAM,EAAE;MACtB,IAAMx3C,EAAE,GAAG,IAAI;MACf,IAAAg4C,WAAA,GAA4Ch4C,EAAE,CAAvCa,OAAO;QAAEw2C,UAAU,GAAAW,WAAA,cAAG,EAAE,GAAAA,WAAA;QAAE9wC,OAAO,GAAIlH,EAAE,CAAbkH,OAAO;MACxC,IAAMuwC,YAAY,GAAGvwC,OAAO,CAACwwC,KAAK;MAClC,IAAM/rB,gBAAgB,GAAG6rB,MAAM;MAC/B,IAAI/yC,MAAM,GAAG,EAAE;MACf,IAAIiiB,OAAO,GAAG,KAAK;MACnB,IAAIuxB,SAAS,GAAG,IAAI;MACpB,IAAI7lD,CAAC,CAAC+M,IAAI,KAAK,UAAU,EAAE;QACzBsF,MAAM,GAAGzE,EAAE,CAACo2C,yBAAyB,CAAChkD,CAAC,EAAEqlD,YAAY,CAACjuC,IAAI,EAAEiuC,YAAY,EAAE9rB,gBAAgB,CAAC;QAC3FssB,SAAS,GAAG7lD,CAAC,CAAC+M,IAAI,KAAK,OAAO,GAAGa,EAAE,CAACuyC,UAAU,GAAGngD,CAAC;MACpD;MACA4N,EAAE,CAACuyC,UAAU,GAAG,IAAI;MACpB,IAAI98C,cAAc,CAACrD,CAAC,EAAE4N,EAAE,CAAC6T,SAAS,EAAE7T,EAAE,CAAC4rB,WAAW,CAAC,EAAE;QACnDz0B,QAAQ,CAAC+P,OAAO,CAACgxC,OAAO,EAAE,CAAC9lD,CAAC,EAAEqS,MAAM,EAAEzE,EAAE,CAAC,EAAEA,EAAE,CAAC;QAC9C,IAAI5N,CAAC,CAAC+M,IAAI,KAAK,SAAS,IAAI/M,CAAC,CAAC+M,IAAI,KAAK,OAAO,IAAI/M,CAAC,CAAC+M,IAAI,KAAK,aAAa,EAAE;UAC1EhI,QAAQ,CAAC+P,OAAO,CAAC8c,OAAO,EAAE,CAAC5xB,CAAC,EAAEqS,MAAM,EAAEzE,EAAE,CAAC,EAAEA,EAAE,CAAC;QAChD;MACF;MACA0mB,OAAO,GAAG,CAACnsB,cAAc,CAACkK,MAAM,EAAE4yC,UAAU,CAAC;MAC7C,IAAI3wB,OAAO,IAAI8wB,MAAM,EAAE;QACrBx3C,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAACu3C,kBAAkB,CAAC9yC,MAAM,EAAE4yC,UAAU,EAAEG,MAAM,CAAC;MACnD;MACAx3C,EAAE,CAACuyC,UAAU,GAAG0F,SAAS;MACzB,OAAOvxB,OAAO;IAChB;EAAC;EAAA,OAAAqrB,KAAA;AAAA;AAEH,IAAMoG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;EAAA,OAASpiD,IAAI,CAACg8C,KAAK,CAACF,SAAS,EAAE,UAAC7yC,KAAK;IAAA,OAAKA,KAAK,CAAC2zC,QAAQ,CAACjG,UAAU,CAAC,CAAC;EAAA,EAAC;AAAA;AAC7F,IAAM0L,UAAU,GAAG,IAAI;AACvB7yC,MAAM,CAAC8yC,gBAAgB,CAACtG,KAAK,EAAE;EAC7Bt/C,QAAQ,EAAE;IACR2lD,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAErM;EACT,CAAC;EACDo/C,SAAS,EAAE;IACTuG,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAE+yC;EACT,CAAC;EACDl5C,SAAS,EAAE;IACTy/C,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAEnG;EACT,CAAC;EACDkzC,QAAQ,EAAE;IACRuM,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAE+sC;EACT,CAAC;EACDoF,OAAO,EAAE;IACPmH,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAEmyC;EACT,CAAC;EACDa,QAAQ,EAAE;IACRsG,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAEgzC;EACT,CAAC;EACD5J,QAAQ,EAAE;IACRkQ,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAE,SAAAA,MAAA,EAAc;MACnB+sC,QAAQ,CAAClqC,GAAG,CAAAE,KAAA,CAAZgqC,QAAQ,EAAAzrC,SAAa,CAAC;MACtB+3C,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EACD3P,UAAU,EAAE;IACV4P,UAAU,EAAVA,UAAU;IACVt5C,KAAK,EAAE,SAAAA,MAAA,EAAc;MACnB+sC,QAAQ,CAACtpC,MAAM,CAAAV,KAAA,CAAfgqC,QAAQ,EAAAzrC,SAAgB,CAAC;MACzB+3C,iBAAiB,CAAC,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AAEF,SAASG,OAAOA,CAACxqC,GAAG,EAAEb,OAAO,EAAE0S,QAAQ,EAAE;EACvC,IAAOD,UAAU,GAAiDzS,OAAO,CAAlEyS,UAAU;IAAE64B,WAAW,GAAoCtrC,OAAO,CAAtDsrC,WAAW;IAAEjjD,CAAC,GAAiC2X,OAAO,CAAzC3X,CAAC;IAAEE,CAAC,GAA8ByX,OAAO,CAAtCzX,CAAC;IAAEsrB,WAAW,GAAiB7T,OAAO,CAAnC6T,WAAW;IAAED,WAAW,GAAI5T,OAAO,CAAtB4T,WAAW;EAC9D,IAAI23B,WAAW,GAAGD,WAAW,GAAGz3B,WAAW;EAC3ChT,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfl5B,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEsrB,WAAW,EAAEpB,UAAU,GAAG84B,WAAW,EAAE74B,QAAQ,GAAG64B,WAAW,CAAC;EAC5E,IAAI33B,WAAW,GAAG03B,WAAW,EAAE;IAC7BC,WAAW,GAAGD,WAAW,GAAG13B,WAAW;IACvC/S,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEqrB,WAAW,EAAElB,QAAQ,GAAG64B,WAAW,EAAE94B,UAAU,GAAG84B,WAAW,EAAE,IAAI,CAAC;EACpF,CAAC,MAAM;IACL1qC,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAE+iD,WAAW,EAAE54B,QAAQ,GAAG9qB,OAAO,EAAE6qB,UAAU,GAAG7qB,OAAO,CAAC;EACtE;EACAiZ,GAAG,CAAC2qC,SAAS,CAAC,CAAC;EACf3qC,GAAG,CAAC4F,IAAI,CAAC,CAAC;AACZ;AACA,SAASglC,eAAeA,CAAC55C,KAAK,EAAE;EAC9B,OAAOnE,iBAAiB,CAACmE,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AACvF;AACA,SAAS65C,mBAAmBA,CAACh2B,GAAG,EAAE9B,WAAW,EAAEC,WAAW,EAAE83B,UAAU,EAAE;EACtE,IAAMlkD,CAAC,GAAGgkD,eAAe,CAAC/1B,GAAG,CAACzb,OAAO,CAAC2xC,YAAY,CAAC;EACnD,IAAMC,aAAa,GAAG,CAACh4B,WAAW,GAAGD,WAAW,IAAI,CAAC;EACrD,IAAMk4B,UAAU,GAAGn5C,IAAI,CAACC,GAAG,CAACi5C,aAAa,EAAEF,UAAU,GAAG/3B,WAAW,GAAG,CAAC,CAAC;EACxE,IAAMm4B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIz8B,GAAG,EAAK;IACjC,IAAM08B,aAAa,GAAG,CAACn4B,WAAW,GAAGlhB,IAAI,CAACC,GAAG,CAACi5C,aAAa,EAAEv8B,GAAG,CAAC,IAAIq8B,UAAU,GAAG,CAAC;IACnF,OAAOzjD,WAAW,CAAConB,GAAG,EAAE,CAAC,EAAE3c,IAAI,CAACC,GAAG,CAACi5C,aAAa,EAAEG,aAAa,CAAC,CAAC;EACpE,CAAC;EACD,OAAO;IACLC,UAAU,EAAEF,iBAAiB,CAACtkD,CAAC,CAACwkD,UAAU,CAAC;IAC3CC,QAAQ,EAAEH,iBAAiB,CAACtkD,CAAC,CAACykD,QAAQ,CAAC;IACvCC,UAAU,EAAEjkD,WAAW,CAACT,CAAC,CAAC0kD,UAAU,EAAE,CAAC,EAAEL,UAAU,CAAC;IACpDM,QAAQ,EAAElkD,WAAW,CAACT,CAAC,CAAC2kD,QAAQ,EAAE,CAAC,EAAEN,UAAU;EACjD,CAAC;AACH;AACA,SAASO,UAAUA,CAACtnD,CAAC,EAAEunD,KAAK,EAAEjkD,CAAC,EAAEE,CAAC,EAAE;EAClC,OAAO;IACLF,CAAC,EAAEA,CAAC,GAAGtD,CAAC,GAAG4N,IAAI,CAACigB,GAAG,CAAC05B,KAAK,CAAC;IAC1B/jD,CAAC,EAAEA,CAAC,GAAGxD,CAAC,GAAG4N,IAAI,CAACmgB,GAAG,CAACw5B,KAAK;EAC3B,CAAC;AACH;AACA,SAASC,OAAOA,CAAC1rC,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAEhZ,GAAG,EAAE;EACnD,IAAO9S,CAAC,GAA4D2X,OAAO,CAApE3X,CAAC;IAAEE,CAAC,GAAyDyX,OAAO,CAAjEzX,CAAC;IAAcsK,KAAK,GAAsCmN,OAAO,CAA9DyS,UAAU;IAAS64B,WAAW,GAAyBtrC,OAAO,CAA3CsrC,WAAW;IAAekB,MAAM,GAAIxsC,OAAO,CAA9B4T,WAAW;EACxD,IAAMC,WAAW,GAAGlhB,IAAI,CAACuC,GAAG,CAAC8K,OAAO,CAAC6T,WAAW,GAAGM,OAAO,GAAGxD,MAAM,GAAG26B,WAAW,EAAE,CAAC,CAAC;EACrF,IAAM13B,WAAW,GAAG44B,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAGr4B,OAAO,GAAGxD,MAAM,GAAG26B,WAAW,GAAG,CAAC;EAC5E,IAAImB,aAAa,GAAG,CAAC;EACrB,IAAMC,KAAK,GAAGvxC,GAAG,GAAGtI,KAAK;EACzB,IAAIshB,OAAO,EAAE;IACX,IAAMw4B,oBAAoB,GAAGH,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAGr4B,OAAO,GAAG,CAAC;IAC9D,IAAMy4B,oBAAoB,GAAG/4B,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAGM,OAAO,GAAG,CAAC;IACxE,IAAM04B,kBAAkB,GAAG,CAACF,oBAAoB,GAAGC,oBAAoB,IAAI,CAAC;IAC5E,IAAME,aAAa,GAAGD,kBAAkB,KAAK,CAAC,GAAIH,KAAK,GAAGG,kBAAkB,IAAKA,kBAAkB,GAAG14B,OAAO,CAAC,GAAGu4B,KAAK;IACtHD,aAAa,GAAG,CAACC,KAAK,GAAGI,aAAa,IAAI,CAAC;EAC7C;EACA,IAAMC,IAAI,GAAGp6C,IAAI,CAACuC,GAAG,CAAC,KAAK,EAAEw3C,KAAK,GAAG74B,WAAW,GAAGlD,MAAM,GAAG7oB,EAAE,CAAC,GAAG+rB,WAAW;EAC7E,IAAMm5B,WAAW,GAAG,CAACN,KAAK,GAAGK,IAAI,IAAI,CAAC;EACtC,IAAMt6B,UAAU,GAAG5f,KAAK,GAAGm6C,WAAW,GAAGP,aAAa;EACtD,IAAM/5B,QAAQ,GAAGvX,GAAG,GAAG6xC,WAAW,GAAGP,aAAa;EAClD,IAAAQ,mBAAA,GAAqDvB,mBAAmB,CAAC1rC,OAAO,EAAE4T,WAAW,EAAEC,WAAW,EAAEnB,QAAQ,GAAGD,UAAU,CAAC;IAA3Hw5B,UAAU,GAAAgB,mBAAA,CAAVhB,UAAU;IAAEC,QAAQ,GAAAe,mBAAA,CAARf,QAAQ;IAAEC,UAAU,GAAAc,mBAAA,CAAVd,UAAU;IAAEC,QAAQ,GAAAa,mBAAA,CAARb,QAAQ;EACjD,IAAMc,wBAAwB,GAAGr5B,WAAW,GAAGo4B,UAAU;EACzD,IAAMkB,sBAAsB,GAAGt5B,WAAW,GAAGq4B,QAAQ;EACrD,IAAMkB,uBAAuB,GAAG36B,UAAU,GAAGw5B,UAAU,GAAGiB,wBAAwB;EAClF,IAAMG,qBAAqB,GAAG36B,QAAQ,GAAGw5B,QAAQ,GAAGiB,sBAAsB;EAC1E,IAAMG,wBAAwB,GAAG15B,WAAW,GAAGu4B,UAAU;EACzD,IAAMoB,sBAAsB,GAAG35B,WAAW,GAAGw4B,QAAQ;EACrD,IAAMoB,uBAAuB,GAAG/6B,UAAU,GAAG05B,UAAU,GAAGmB,wBAAwB;EAClF,IAAMG,qBAAqB,GAAG/6B,QAAQ,GAAG05B,QAAQ,GAAGmB,sBAAsB;EAC1E1sC,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfl5B,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEsrB,WAAW,EAAEu5B,uBAAuB,EAAEC,qBAAqB,CAAC;EAC1E,IAAInB,QAAQ,GAAG,CAAC,EAAE;IAChB,IAAMwB,OAAO,GAAGrB,UAAU,CAACc,sBAAsB,EAAEE,qBAAqB,EAAEhlD,CAAC,EAAEE,CAAC,CAAC;IAC/EsY,GAAG,CAAC6U,GAAG,CAACg4B,OAAO,CAACrlD,CAAC,EAAEqlD,OAAO,CAACnlD,CAAC,EAAE2jD,QAAQ,EAAEmB,qBAAqB,EAAE36B,QAAQ,GAAG9qB,OAAO,CAAC;EACpF;EACA,IAAM+lD,EAAE,GAAGtB,UAAU,CAACkB,sBAAsB,EAAE76B,QAAQ,EAAErqB,CAAC,EAAEE,CAAC,CAAC;EAC7DsY,GAAG,CAACo5B,MAAM,CAAC0T,EAAE,CAACtlD,CAAC,EAAEslD,EAAE,CAACplD,CAAC,CAAC;EACtB,IAAI6jD,QAAQ,GAAG,CAAC,EAAE;IAChB,IAAMsB,QAAO,GAAGrB,UAAU,CAACkB,sBAAsB,EAAEE,qBAAqB,EAAEplD,CAAC,EAAEE,CAAC,CAAC;IAC/EsY,GAAG,CAAC6U,GAAG,CAACg4B,QAAO,CAACrlD,CAAC,EAAEqlD,QAAO,CAACnlD,CAAC,EAAE6jD,QAAQ,EAAE15B,QAAQ,GAAG9qB,OAAO,EAAE6lD,qBAAqB,GAAG96C,IAAI,CAAC7K,EAAE,CAAC;EAC9F;EACA+Y,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEqrB,WAAW,EAAElB,QAAQ,GAAI05B,QAAQ,GAAGx4B,WAAY,EAAEnB,UAAU,GAAI05B,UAAU,GAAGv4B,WAAY,EAAE,IAAI,CAAC;EAC9G,IAAIu4B,UAAU,GAAG,CAAC,EAAE;IAClB,IAAMuB,SAAO,GAAGrB,UAAU,CAACiB,wBAAwB,EAAEE,uBAAuB,EAAEnlD,CAAC,EAAEE,CAAC,CAAC;IACnFsY,GAAG,CAAC6U,GAAG,CAACg4B,SAAO,CAACrlD,CAAC,EAAEqlD,SAAO,CAACnlD,CAAC,EAAE4jD,UAAU,EAAEqB,uBAAuB,GAAG76C,IAAI,CAAC7K,EAAE,EAAE2qB,UAAU,GAAG7qB,OAAO,CAAC;EACpG;EACA,IAAMgmD,EAAE,GAAGvB,UAAU,CAACa,wBAAwB,EAAEz6B,UAAU,EAAEpqB,CAAC,EAAEE,CAAC,CAAC;EACjEsY,GAAG,CAACo5B,MAAM,CAAC2T,EAAE,CAACvlD,CAAC,EAAEulD,EAAE,CAACrlD,CAAC,CAAC;EACtB,IAAI0jD,UAAU,GAAG,CAAC,EAAE;IAClB,IAAMyB,SAAO,GAAGrB,UAAU,CAACa,wBAAwB,EAAEE,uBAAuB,EAAE/kD,CAAC,EAAEE,CAAC,CAAC;IACnFsY,GAAG,CAAC6U,GAAG,CAACg4B,SAAO,CAACrlD,CAAC,EAAEqlD,SAAO,CAACnlD,CAAC,EAAE0jD,UAAU,EAAEx5B,UAAU,GAAG7qB,OAAO,EAAEwlD,uBAAuB,CAAC;EAC1F;EACAvsC,GAAG,CAAC2qC,SAAS,CAAC,CAAC;AACjB;AACA,SAASqC,OAAOA,CAAChtC,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAE;EAC9C,IAAO25B,WAAW,GAA+B9tC,OAAO,CAAjD8tC,WAAW;IAAEr7B,UAAU,GAAmBzS,OAAO,CAApCyS,UAAU;IAAEN,aAAa,GAAInS,OAAO,CAAxBmS,aAAa;EAC7C,IAAIO,QAAQ,GAAG1S,OAAO,CAAC0S,QAAQ;EAC/B,IAAIo7B,WAAW,EAAE;IACfvB,OAAO,CAAC1rC,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAE1B,UAAU,GAAGnrB,GAAG,CAAC;IACxD,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqoD,WAAW,EAAE,EAAEroD,CAAC,EAAE;MACpCob,GAAG,CAAC2a,IAAI,CAAC,CAAC;IACZ;IACA,IAAI,CAACjM,KAAK,CAAC4C,aAAa,CAAC,EAAE;MACzBO,QAAQ,GAAGD,UAAU,GAAGN,aAAa,GAAG7qB,GAAG;MAC3C,IAAI6qB,aAAa,GAAG7qB,GAAG,KAAK,CAAC,EAAE;QAC7BorB,QAAQ,IAAIprB,GAAG;MACjB;IACF;EACF;EACAilD,OAAO,CAAC1rC,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,CAAC;EAChD7R,GAAG,CAAC2a,IAAI,CAAC,CAAC;EACV,OAAO9I,QAAQ;AACjB;AACA,SAASq7B,qBAAqBA,CAACltC,GAAG,EAAEb,OAAO,EAAEguC,KAAK,EAAE;EAClD,IAAO3lD,CAAC,GAA6C2X,OAAO,CAArD3X,CAAC;IAAEE,CAAC,GAA0CyX,OAAO,CAAlDzX,CAAC;IAAEkqB,UAAU,GAA8BzS,OAAO,CAA/CyS,UAAU;IAAE64B,WAAW,GAAiBtrC,OAAO,CAAnCsrC,WAAW;IAAEwC,WAAW,GAAI9tC,OAAO,CAAtB8tC,WAAW;EACjD,IAAMj6B,WAAW,GAAGlhB,IAAI,CAACuC,GAAG,CAAC8K,OAAO,CAAC6T,WAAW,GAAGy3B,WAAW,EAAE,CAAC,CAAC;EAClE,IAAM13B,WAAW,GAAG5T,OAAO,CAAC4T,WAAW,GAAG03B,WAAW;EACrD,IAAI7lD,CAAC;EACL,IAAIuoD,KAAK,EAAE;IACT3C,OAAO,CAACxqC,GAAG,EAAEb,OAAO,EAAEyS,UAAU,GAAGnrB,GAAG,CAAC;EACzC;EACAuZ,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfl5B,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEqrB,WAAW,EAAEnB,UAAU,GAAGnrB,GAAG,EAAEmrB,UAAU,EAAE,IAAI,CAAC;EAC9D,KAAKhtB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqoD,WAAW,EAAE,EAAEroD,CAAC,EAAE;IAChCob,GAAG,CAACq5B,MAAM,CAAC,CAAC;EACd;EACAr5B,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfl5B,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEsrB,WAAW,EAAEpB,UAAU,EAAEA,UAAU,GAAGnrB,GAAG,CAAC;EACxD,KAAK7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqoD,WAAW,EAAE,EAAEroD,CAAC,EAAE;IAChCob,GAAG,CAACq5B,MAAM,CAAC,CAAC;EACd;AACF;AACA,SAASpP,UAAUA,CAACjqB,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,EAAE;EAC3D,IAAOzY,OAAO,GAAI+F,OAAO,CAAlB/F,OAAO;EACd,IAAM+zC,KAAK,GAAG/zC,OAAO,CAAC4b,WAAW,KAAK,OAAO;EAC7C,IAAI,CAAC5b,OAAO,CAAC6b,WAAW,EAAE;IACxB;EACF;EACA,IAAIk4B,KAAK,EAAE;IACTntC,GAAG,CAACiW,SAAS,GAAG7c,OAAO,CAAC6b,WAAW,GAAG,CAAC;IACvCjV,GAAG,CAACotC,QAAQ,GAAG,OAAO;EACxB,CAAC,MAAM;IACLptC,GAAG,CAACiW,SAAS,GAAG7c,OAAO,CAAC6b,WAAW;IACnCjV,GAAG,CAACotC,QAAQ,GAAG,OAAO;EACxB;EACA,IAAIjuC,OAAO,CAAC8tC,WAAW,EAAE;IACvBC,qBAAqB,CAACltC,GAAG,EAAEb,OAAO,EAAEguC,KAAK,CAAC;EAC5C;EACA,IAAIA,KAAK,EAAE;IACT3C,OAAO,CAACxqC,GAAG,EAAEb,OAAO,EAAE0S,QAAQ,CAAC;EACjC;EACA65B,OAAO,CAAC1rC,GAAG,EAAEb,OAAO,EAAE2Q,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,CAAC;EAChD7R,GAAG,CAACq5B,MAAM,CAAC,CAAC;AACd;AAAC,IACKgU,UAAU,0BAAAC,SAAA;EAAAvgC,SAAA,CAAAsgC,UAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAtgC,YAAA,CAAAogC,UAAA;EACd,SAAAA,WAAY53C,GAAG,EAAE;IAAA,IAAA+3C,MAAA;IAAAj9C,eAAA,OAAA88C,UAAA;IACfG,MAAA,GAAAD,QAAA,CAAAp7C,IAAA;IACAq7C,MAAA,CAAKp0C,OAAO,GAAGvI,SAAS;IACxB28C,MAAA,CAAKl8B,aAAa,GAAGzgB,SAAS;IAC9B28C,MAAA,CAAK57B,UAAU,GAAG/gB,SAAS;IAC3B28C,MAAA,CAAK37B,QAAQ,GAAGhhB,SAAS;IACzB28C,MAAA,CAAKz6B,WAAW,GAAGliB,SAAS;IAC5B28C,MAAA,CAAKx6B,WAAW,GAAGniB,SAAS;IAC5B28C,MAAA,CAAK/C,WAAW,GAAG,CAAC;IACpB+C,MAAA,CAAKP,WAAW,GAAG,CAAC;IACpB,IAAIx3C,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAA2zC,sBAAA,CAAAD,MAAA,GAAO/3C,GAAG,CAAC;IAC1B;IAAC,OAAA+3C,MAAA;EACH;EAAC18C,YAAA,CAAAu8C,UAAA;IAAAt8C,GAAA;IAAAC,KAAA,EACD,SAAAgtB,QAAQ0vB,MAAM,EAAEC,MAAM,EAAE9vB,gBAAgB,EAAE;MACxC,IAAMlN,KAAK,GAAG,IAAI,CAACkY,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEhL,gBAAgB,CAAC;MACzD,IAAA+vB,kBAAA,GAA0BjhD,iBAAiB,CAACgkB,KAAK,EAAE;UAACnpB,CAAC,EAAEkmD,MAAM;UAAEhmD,CAAC,EAAEimD;QAAM,CAAC,CAAC;QAAnEt7B,KAAK,GAAAu7B,kBAAA,CAALv7B,KAAK;QAAEgM,QAAQ,GAAAuvB,kBAAA,CAARvvB,QAAQ;MACtB,IAAAwvB,eAAA,GAAwE,IAAI,CAAChlB,QAAQ,CAAC,CACpF,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAEhL,gBAAgB,CAAC;QANbjM,UAAU,GAAAi8B,eAAA,CAAVj8B,UAAU;QAAEC,QAAQ,GAAAg8B,eAAA,CAARh8B,QAAQ;QAAEkB,WAAW,GAAA86B,eAAA,CAAX96B,WAAW;QAAEC,WAAW,GAAA66B,eAAA,CAAX76B,WAAW;QAAE1B,aAAa,GAAAu8B,eAAA,CAAbv8B,aAAa;MAOpE,IAAMw8B,OAAO,GAAG,IAAI,CAAC10C,OAAO,CAACka,OAAO,GAAG,CAAC;MACxC,IAAMy6B,aAAa,GAAGz8B,aAAa,IAAI7qB,GAAG,IAAII,aAAa,CAACwrB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC;MACxF,IAAMm8B,YAAY,GAAI3vB,QAAQ,IAAItL,WAAW,GAAG+6B,OAAO,IAAIzvB,QAAQ,IAAIrL,WAAW,GAAG86B,OAAQ;MAC7F,OAAQC,aAAa,IAAIC,YAAY;IACvC;EAAC;IAAAj9C,GAAA;IAAAC,KAAA,EACD,SAAAotB,eAAeP,gBAAgB,EAAE;MAC/B,IAAAowB,eAAA,GAA+D,IAAI,CAACplB,QAAQ,CAAC,CAC3E,GAAG,EACH,GAAG,EACH,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAEhL,gBAAgB,CAAC;QARbr2B,CAAC,GAAAymD,eAAA,CAADzmD,CAAC;QAAEE,CAAC,GAAAumD,eAAA,CAADvmD,CAAC;QAAEkqB,UAAU,GAAAq8B,eAAA,CAAVr8B,UAAU;QAAEC,QAAQ,GAAAo8B,eAAA,CAARp8B,QAAQ;QAAEkB,WAAW,GAAAk7B,eAAA,CAAXl7B,WAAW;QAAEC,WAAW,GAAAi7B,eAAA,CAAXj7B,WAAW;MAS3D,IAAAk7B,cAAA,GAA0B,IAAI,CAAC90C,OAAO;QAA/B0W,MAAM,GAAAo+B,cAAA,CAANp+B,MAAM;QAAEwD,OAAO,GAAA46B,cAAA,CAAP56B,OAAO;MACtB,IAAM66B,SAAS,GAAG,CAACv8B,UAAU,GAAGC,QAAQ,IAAI,CAAC;MAC7C,IAAMu8B,UAAU,GAAG,CAACr7B,WAAW,GAAGC,WAAW,GAAGM,OAAO,GAAGxD,MAAM,IAAI,CAAC;MACrE,OAAO;QACLtoB,CAAC,EAAEA,CAAC,GAAGsK,IAAI,CAACigB,GAAG,CAACo8B,SAAS,CAAC,GAAGC,UAAU;QACvC1mD,CAAC,EAAEA,CAAC,GAAGoK,IAAI,CAACmgB,GAAG,CAACk8B,SAAS,CAAC,GAAGC;MAC/B,CAAC;IACH;EAAC;IAAAr9C,GAAA;IAAAC,KAAA,EACD,SAAA23B,gBAAgB9K,gBAAgB,EAAE;MAChC,OAAO,IAAI,CAACO,cAAc,CAACP,gBAAgB,CAAC;IAC9C;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM9N,EAAE,GAAG,IAAI;MACf,IAAOkH,OAAO,GAAmBlH,EAAE,CAA5BkH,OAAO;QAAEkY,aAAa,GAAIpf,EAAE,CAAnBof,aAAa;MAC7B,IAAMxB,MAAM,GAAG,CAAC1W,OAAO,CAAC0W,MAAM,IAAI,CAAC,IAAI,CAAC;MACxC,IAAMwD,OAAO,GAAG,CAACla,OAAO,CAACka,OAAO,IAAI,CAAC,IAAI,CAAC;MAC1CphB,EAAE,CAACu4C,WAAW,GAAIrxC,OAAO,CAAC4b,WAAW,KAAK,OAAO,GAAI,IAAI,GAAG,CAAC;MAC7D9iB,EAAE,CAAC+6C,WAAW,GAAG37B,aAAa,GAAG7qB,GAAG,GAAGqL,IAAI,CAACoE,KAAK,CAACob,aAAa,GAAG7qB,GAAG,CAAC,GAAG,CAAC;MAC1E,IAAI6qB,aAAa,KAAK,CAAC,IAAIpf,EAAE,CAAC6gB,WAAW,GAAG,CAAC,IAAI7gB,EAAE,CAAC8gB,WAAW,GAAG,CAAC,EAAE;QACnE;MACF;MACAhT,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACV,IAAI6V,YAAY,GAAG,CAAC;MACpB,IAAIv+B,MAAM,EAAE;QACVu+B,YAAY,GAAGv+B,MAAM,GAAG,CAAC;QACzB,IAAMq+B,SAAS,GAAG,CAACj8C,EAAE,CAAC0f,UAAU,GAAG1f,EAAE,CAAC2f,QAAQ,IAAI,CAAC;QACnD7R,GAAG,CAACsuC,SAAS,CAACx8C,IAAI,CAACigB,GAAG,CAACo8B,SAAS,CAAC,GAAGE,YAAY,EAAEv8C,IAAI,CAACmgB,GAAG,CAACk8B,SAAS,CAAC,GAAGE,YAAY,CAAC;QACrF,IAAIn8C,EAAE,CAACof,aAAa,IAAIrqB,EAAE,EAAE;UAC1BonD,YAAY,GAAGv+B,MAAM;QACvB;MACF;MACA9P,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAAC0c,eAAe;MACvC9V,GAAG,CAAC+V,WAAW,GAAG3c,OAAO,CAAC4c,WAAW;MACrC,IAAMnE,QAAQ,GAAGm7B,OAAO,CAAChtC,GAAG,EAAE9N,EAAE,EAAEm8C,YAAY,EAAE/6B,OAAO,CAAC;MACxD2W,UAAU,CAACjqB,GAAG,EAAE9N,EAAE,EAAEm8C,YAAY,EAAE/6B,OAAO,EAAEzB,QAAQ,CAAC;MACpD7R,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACf;EAAC;EAAA,OAAA2U,UAAA;AAAA,EA5EsB3kB,OAAO;AA8EhC2kB,UAAU,CAAC7wC,EAAE,GAAG,KAAK;AACrB6wC,UAAU,CAAC1oD,QAAQ,GAAG;EACpBqwB,WAAW,EAAE,QAAQ;EACrBgB,WAAW,EAAE,MAAM;EACnB+0B,YAAY,EAAE,CAAC;EACf91B,WAAW,EAAE,CAAC;EACdnF,MAAM,EAAE,CAAC;EACTwD,OAAO,EAAE,CAAC;EACVjB,KAAK,EAAExhB;AACT,CAAC;AACDw8C,UAAU,CAACpkB,aAAa,GAAG;EACzBnT,eAAe,EAAE;AACnB,CAAC;AAED,SAASy4B,QAAQA,CAACvuC,GAAG,EAAE5G,OAAO,EAAmB;EAAA,IAAjBuc,KAAK,GAAArjB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG8G,OAAO;EAC7C4G,GAAG,CAACwuC,OAAO,GAAGvpD,cAAc,CAAC0wB,KAAK,CAAC84B,cAAc,EAAEr1C,OAAO,CAACq1C,cAAc,CAAC;EAC1EzuC,GAAG,CAACg5B,WAAW,CAAC/zC,cAAc,CAAC0wB,KAAK,CAAC4U,UAAU,EAAEnxB,OAAO,CAACmxB,UAAU,CAAC,CAAC;EACrEvqB,GAAG,CAACi5B,cAAc,GAAGh0C,cAAc,CAAC0wB,KAAK,CAAC6U,gBAAgB,EAAEpxB,OAAO,CAACoxB,gBAAgB,CAAC;EACrFxqB,GAAG,CAACotC,QAAQ,GAAGnoD,cAAc,CAAC0wB,KAAK,CAAC+4B,eAAe,EAAEt1C,OAAO,CAACs1C,eAAe,CAAC;EAC7E1uC,GAAG,CAACiW,SAAS,GAAGhxB,cAAc,CAAC0wB,KAAK,CAACV,WAAW,EAAE7b,OAAO,CAAC6b,WAAW,CAAC;EACtEjV,GAAG,CAAC+V,WAAW,GAAG9wB,cAAc,CAAC0wB,KAAK,CAACK,WAAW,EAAE5c,OAAO,CAAC4c,WAAW,CAAC;AAC1E;AACA,SAASojB,MAAMA,CAACp5B,GAAG,EAAE2uC,QAAQ,EAAEj5C,MAAM,EAAE;EACrCsK,GAAG,CAACo5B,MAAM,CAAC1jC,MAAM,CAAClO,CAAC,EAAEkO,MAAM,CAAChO,CAAC,CAAC;AAChC;AACA,SAASknD,aAAaA,CAACx1C,OAAO,EAAE;EAC9B,IAAIA,OAAO,CAACy1C,OAAO,EAAE;IACnB,OAAOlhD,cAAc;EACvB;EACA,IAAIyL,OAAO,CAAC01C,OAAO,IAAI11C,OAAO,CAAC21C,sBAAsB,KAAK,UAAU,EAAE;IACpE,OAAOlhD,cAAc;EACvB;EACA,OAAOurC,MAAM;AACf;AACA,SAAS4V,QAAQA,CAACv+B,MAAM,EAAE6G,OAAO,EAAe;EAAA,IAAb8I,MAAM,GAAA9tB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,CAAC;EAC5C,IAAMiR,KAAK,GAAGkN,MAAM,CAACle,MAAM;EAC3B,IAAA08C,aAAA,GAA6D7uB,MAAM,CAA5DpuB,KAAK;IAAEk9C,WAAW,GAAAD,aAAA,cAAG,CAAC,GAAAA,aAAA;IAAAE,WAAA,GAAgC/uB,MAAM,CAApC9lB,GAAG;IAAE80C,SAAS,GAAAD,WAAA,cAAG5rC,KAAK,GAAG,CAAC,GAAA4rC,WAAA;EACzD,IAAcE,YAAY,GAAqB/3B,OAAO,CAA/CtlB,KAAK;IAAqBs9C,UAAU,GAAIh4B,OAAO,CAA1Bhd,GAAG;EAC/B,IAAMtI,KAAK,GAAGF,IAAI,CAACuC,GAAG,CAAC66C,WAAW,EAAEG,YAAY,CAAC;EACjD,IAAM/0C,GAAG,GAAGxI,IAAI,CAACC,GAAG,CAACq9C,SAAS,EAAEE,UAAU,CAAC;EAC3C,IAAMC,OAAO,GAAGL,WAAW,GAAGG,YAAY,IAAID,SAAS,GAAGC,YAAY,IAAIH,WAAW,GAAGI,UAAU,IAAIF,SAAS,GAAGE,UAAU;EAC5H,OAAO;IACL/rC,KAAK,EAALA,KAAK;IACLvR,KAAK,EAALA,KAAK;IACLqE,IAAI,EAAEihB,OAAO,CAACjhB,IAAI;IAClB+E,IAAI,EAAEd,GAAG,GAAGtI,KAAK,IAAI,CAACu9C,OAAO,GAAGhsC,KAAK,GAAGjJ,GAAG,GAAGtI,KAAK,GAAGsI,GAAG,GAAGtI;EAC9D,CAAC;AACH;AACA,SAASw9C,WAAWA,CAACxvC,GAAG,EAAE4W,IAAI,EAAEU,OAAO,EAAE8I,MAAM,EAAE;EAC/C,IAAO3P,MAAM,GAAamG,IAAI,CAAvBnG,MAAM;IAAErX,OAAO,GAAIwd,IAAI,CAAfxd,OAAO;EACtB,IAAAq2C,SAAA,GAAmCT,QAAQ,CAACv+B,MAAM,EAAE6G,OAAO,EAAE8I,MAAM,CAAC;IAA7D7c,KAAK,GAAAksC,SAAA,CAALlsC,KAAK;IAAEvR,KAAK,GAAAy9C,SAAA,CAALz9C,KAAK;IAAEqE,IAAI,GAAAo5C,SAAA,CAAJp5C,IAAI;IAAE+E,IAAI,GAAAq0C,SAAA,CAAJr0C,IAAI;EAC/B,IAAMs0C,UAAU,GAAGd,aAAa,CAACx1C,OAAO,CAAC;EACzC,IAAAu2C,KAAA,GAA6BvvB,MAAM,IAAI,CAAC,CAAC;IAAAwvB,UAAA,GAAAD,KAAA,CAApClnC,IAAI;IAAJA,IAAI,GAAAmnC,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAEv1C,OAAO,GAAAs1C,KAAA,CAAPt1C,OAAO;EACzB,IAAIzV,CAAC,EAAE+rB,KAAK,EAAEjN,IAAI;EAClB,KAAK9e,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC1B+rB,KAAK,GAAGF,MAAM,CAAC,CAACze,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAGxW,CAAC,GAAGA,CAAC,CAAC,IAAI2e,KAAK,CAAC;IAC1D,IAAIoN,KAAK,CAACI,IAAI,EAAE;MACd;IACF,CAAC,MAAM,IAAItI,IAAI,EAAE;MACfzI,GAAG,CAACm5B,MAAM,CAACxoB,KAAK,CAACnpB,CAAC,EAAEmpB,KAAK,CAACjpB,CAAC,CAAC;MAC5B+gB,IAAI,GAAG,KAAK;IACd,CAAC,MAAM;MACLinC,UAAU,CAAC1vC,GAAG,EAAE0D,IAAI,EAAEiN,KAAK,EAAEtW,OAAO,EAAEjB,OAAO,CAACy1C,OAAO,CAAC;IACxD;IACAnrC,IAAI,GAAGiN,KAAK;EACd;EACA,IAAIta,IAAI,EAAE;IACRsa,KAAK,GAAGF,MAAM,CAAC,CAACze,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAG,CAAC,CAAC,IAAImI,KAAK,CAAC;IACtDmsC,UAAU,CAAC1vC,GAAG,EAAE0D,IAAI,EAAEiN,KAAK,EAAEtW,OAAO,EAAEjB,OAAO,CAACy1C,OAAO,CAAC;EACxD;EACA,OAAO,CAAC,CAACx4C,IAAI;AACf;AACA,SAASw5C,eAAeA,CAAC7vC,GAAG,EAAE4W,IAAI,EAAEU,OAAO,EAAE8I,MAAM,EAAE;EACnD,IAAM3P,MAAM,GAAGmG,IAAI,CAACnG,MAAM;EAC1B,IAAAq/B,UAAA,GAA6Bd,QAAQ,CAACv+B,MAAM,EAAE6G,OAAO,EAAE8I,MAAM,CAAC;IAAvD7c,KAAK,GAAAusC,UAAA,CAALvsC,KAAK;IAAEvR,KAAK,GAAA89C,UAAA,CAAL99C,KAAK;IAAEoJ,IAAI,GAAA00C,UAAA,CAAJ10C,IAAI;EACzB,IAAA20C,KAAA,GAA+B3vB,MAAM,IAAI,CAAC,CAAC;IAAA4vB,UAAA,GAAAD,KAAA,CAApCtnC,IAAI;IAAJA,IAAI,GAAAunC,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAE31C,OAAO,GAAA01C,KAAA,CAAP11C,OAAO;EAC3B,IAAI41C,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAItrD,CAAC,EAAE+rB,KAAK,EAAEw/B,KAAK,EAAEz9B,IAAI,EAAEF,IAAI,EAAE49B,KAAK;EACtC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIh1C,KAAK;IAAA,OAAK,CAACrJ,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAGC,KAAK,GAAGA,KAAK,CAAC,IAAIkI,KAAK;EAAA;EAChF,IAAM+sC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAClB,IAAI59B,IAAI,KAAKF,IAAI,EAAE;MACjBxS,GAAG,CAACo5B,MAAM,CAAC6W,IAAI,EAAEz9B,IAAI,CAAC;MACtBxS,GAAG,CAACo5B,MAAM,CAAC6W,IAAI,EAAEv9B,IAAI,CAAC;MACtB1S,GAAG,CAACo5B,MAAM,CAAC6W,IAAI,EAAEG,KAAK,CAAC;IACzB;EACF,CAAC;EACD,IAAI3nC,IAAI,EAAE;IACRkI,KAAK,GAAGF,MAAM,CAAC4/B,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7BrwC,GAAG,CAACm5B,MAAM,CAACxoB,KAAK,CAACnpB,CAAC,EAAEmpB,KAAK,CAACjpB,CAAC,CAAC;EAC9B;EACA,KAAK9C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC1B+rB,KAAK,GAAGF,MAAM,CAAC4/B,UAAU,CAACzrD,CAAC,CAAC,CAAC;IAC7B,IAAI+rB,KAAK,CAACI,IAAI,EAAE;MACd;IACF;IACA,IAAMvpB,CAAC,GAAGmpB,KAAK,CAACnpB,CAAC;IACjB,IAAME,CAAC,GAAGipB,KAAK,CAACjpB,CAAC;IACjB,IAAM6oD,MAAM,GAAG/oD,CAAC,GAAG,CAAC;IACpB,IAAI+oD,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIzoD,CAAC,GAAGgrB,IAAI,EAAE;QACZA,IAAI,GAAGhrB,CAAC;MACV,CAAC,MAAM,IAAIA,CAAC,GAAG8qB,IAAI,EAAE;QACnBA,IAAI,GAAG9qB,CAAC;MACV;MACAuoD,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGzoD,CAAC,IAAI,EAAE0oD,MAAM;IACvC,CAAC,MAAM;MACLI,KAAK,CAAC,CAAC;MACPtwC,GAAG,CAACo5B,MAAM,CAAC5xC,CAAC,EAAEE,CAAC,CAAC;MAChByoD,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVx9B,IAAI,GAAGF,IAAI,GAAG9qB,CAAC;IACjB;IACA0oD,KAAK,GAAG1oD,CAAC;EACX;EACA4oD,KAAK,CAAC,CAAC;AACT;AACA,SAASE,iBAAiBA,CAAC55B,IAAI,EAAE;EAC/B,IAAMxc,IAAI,GAAGwc,IAAI,CAACxd,OAAO;EACzB,IAAMmxB,UAAU,GAAGnwB,IAAI,CAACmwB,UAAU,IAAInwB,IAAI,CAACmwB,UAAU,CAACh4B,MAAM;EAC5D,IAAMk+C,WAAW,GAAG,CAAC75B,IAAI,CAACQ,UAAU,IAAI,CAACR,IAAI,CAACxgB,KAAK,IAAI,CAACgE,IAAI,CAAC00C,OAAO,IAAI10C,IAAI,CAAC20C,sBAAsB,KAAK,UAAU,IAAI,CAAC30C,IAAI,CAACy0C,OAAO,IAAI,CAACtkB,UAAU;EAClJ,OAAOkmB,WAAW,GAAGZ,eAAe,GAAGL,WAAW;AACpD;AACA,SAASkB,uBAAuBA,CAACt3C,OAAO,EAAE;EACxC,IAAIA,OAAO,CAACy1C,OAAO,EAAE;IACnB,OAAOxhD,qBAAqB;EAC9B;EACA,IAAI+L,OAAO,CAAC01C,OAAO,IAAI11C,OAAO,CAAC21C,sBAAsB,KAAK,UAAU,EAAE;IACpE,OAAOxhD,oBAAoB;EAC7B;EACA,OAAOE,YAAY;AACrB;AACA,SAASkjD,mBAAmBA,CAAC3wC,GAAG,EAAE4W,IAAI,EAAE5kB,KAAK,EAAEuR,KAAK,EAAE;EACpD,IAAIqtC,IAAI,GAAGh6B,IAAI,CAACi6B,KAAK;EACrB,IAAI,CAACD,IAAI,EAAE;IACTA,IAAI,GAAGh6B,IAAI,CAACi6B,KAAK,GAAG,IAAIC,MAAM,CAAC,CAAC;IAChC,IAAIl6B,IAAI,CAACg6B,IAAI,CAACA,IAAI,EAAE5+C,KAAK,EAAEuR,KAAK,CAAC,EAAE;MACjCqtC,IAAI,CAACjG,SAAS,CAAC,CAAC;IAClB;EACF;EACA4D,QAAQ,CAACvuC,GAAG,EAAE4W,IAAI,CAACxd,OAAO,CAAC;EAC3B4G,GAAG,CAACq5B,MAAM,CAACuX,IAAI,CAAC;AAClB;AACA,SAASG,gBAAgBA,CAAC/wC,GAAG,EAAE4W,IAAI,EAAE5kB,KAAK,EAAEuR,KAAK,EAAE;EACjD,IAAOytC,QAAQ,GAAap6B,IAAI,CAAzBo6B,QAAQ;IAAE53C,OAAO,GAAIwd,IAAI,CAAfxd,OAAO;EACxB,IAAM63C,aAAa,GAAGT,iBAAiB,CAAC55B,IAAI,CAAC;EAAC,IAAAs6B,UAAA,GAAAzzC,0BAAA,CACxBuzC,QAAQ;IAAAG,MAAA;EAAA;IAA9B,KAAAD,UAAA,CAAAtrD,CAAA,MAAAurD,MAAA,GAAAD,UAAA,CAAAxqD,CAAA,IAAAkX,IAAA,GAAgC;MAAA,IAArB0Z,OAAO,GAAA65B,MAAA,CAAAngD,KAAA;MAChBu9C,QAAQ,CAACvuC,GAAG,EAAE5G,OAAO,EAAEke,OAAO,CAAC3B,KAAK,CAAC;MACrC3V,GAAG,CAACk5B,SAAS,CAAC,CAAC;MACf,IAAI+X,aAAa,CAACjxC,GAAG,EAAE4W,IAAI,EAAEU,OAAO,EAAE;QAACtlB,KAAK,EAALA,KAAK;QAAEsI,GAAG,EAAEtI,KAAK,GAAGuR,KAAK,GAAG;MAAC,CAAC,CAAC,EAAE;QACtEvD,GAAG,CAAC2qC,SAAS,CAAC,CAAC;MACjB;MACA3qC,GAAG,CAACq5B,MAAM,CAAC,CAAC;IACd;EAAC,SAAAx7B,GAAA;IAAAqzC,UAAA,CAAA5sD,CAAA,CAAAuZ,GAAA;EAAA;IAAAqzC,UAAA,CAAA5rD,CAAA;EAAA;AACH;AACA,IAAM8rD,SAAS,GAAG,OAAON,MAAM,KAAK,UAAU;AAC9C,SAASj+C,KAAIA,CAACmN,GAAG,EAAE4W,IAAI,EAAE5kB,KAAK,EAAEuR,KAAK,EAAE;EACrC,IAAI6tC,SAAS,IAAIx6B,IAAI,CAACo6B,QAAQ,CAACz+C,MAAM,KAAK,CAAC,EAAE;IAC3Co+C,mBAAmB,CAAC3wC,GAAG,EAAE4W,IAAI,EAAE5kB,KAAK,EAAEuR,KAAK,CAAC;EAC9C,CAAC,MAAM;IACLwtC,gBAAgB,CAAC/wC,GAAG,EAAE4W,IAAI,EAAE5kB,KAAK,EAAEuR,KAAK,CAAC;EAC3C;AACF;AAAC,IACK8tC,WAAW,0BAAAC,SAAA;EAAAvkC,SAAA,CAAAskC,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAtkC,YAAA,CAAAokC,WAAA;EACf,SAAAA,YAAY57C,GAAG,EAAE;IAAA,IAAA+7C,MAAA;IAAAjhD,eAAA,OAAA8gD,WAAA;IACfG,MAAA,GAAAD,QAAA,CAAAp/C,IAAA;IACAq/C,MAAA,CAAKj6B,QAAQ,GAAG,IAAI;IACpBi6B,MAAA,CAAKp4C,OAAO,GAAGvI,SAAS;IACxB2gD,MAAA,CAAKp7C,KAAK,GAAGvF,SAAS;IACtB2gD,MAAA,CAAKh3B,SAAS,GAAG3pB,SAAS;IAC1B2gD,MAAA,CAAKX,KAAK,GAAGhgD,SAAS;IACtB2gD,MAAA,CAAKC,OAAO,GAAG5gD,SAAS;IACxB2gD,MAAA,CAAKE,SAAS,GAAG7gD,SAAS;IAC1B2gD,MAAA,CAAKp6B,UAAU,GAAG,KAAK;IACvBo6B,MAAA,CAAKG,cAAc,GAAG,KAAK;IAC3BH,MAAA,CAAKr6B,aAAa,GAAGtmB,SAAS;IAC9B,IAAI4E,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAA2zC,sBAAA,CAAA+D,MAAA,GAAO/7C,GAAG,CAAC;IAC1B;IAAC,OAAA+7C,MAAA;EACH;EAAC1gD,YAAA,CAAAugD,WAAA;IAAAtgD,GAAA;IAAAC,KAAA,EACD,SAAAinB,oBAAoBlS,SAAS,EAAErE,SAAS,EAAE;MACxC,IAAMxP,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAI,CAACA,OAAO,CAAC01C,OAAO,IAAI11C,OAAO,CAAC21C,sBAAsB,KAAK,UAAU,KAAK,CAAC31C,OAAO,CAACy1C,OAAO,IAAI,CAAC38C,EAAE,CAACy/C,cAAc,EAAE;QAChH,IAAMt7C,IAAI,GAAG+C,OAAO,CAACqe,QAAQ,GAAGvlB,EAAE,CAACkE,KAAK,GAAGlE,EAAE,CAACsoB,SAAS;QACvDztB,0BAA0B,CAACmF,EAAE,CAACu/C,OAAO,EAAEr4C,OAAO,EAAE2M,SAAS,EAAE1P,IAAI,EAAEqL,SAAS,CAAC;QAC3ExP,EAAE,CAACy/C,cAAc,GAAG,IAAI;MAC1B;IACF;EAAC;IAAA5gD,GAAA;IAAAsC,GAAA,EAQD,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACo+C,OAAO;IACrB,CAAC;IAAAj+C,GAAA,EATD,SAAAA,IAAWid,MAAM,EAAE;MACjB,IAAMve,EAAE,GAAG,IAAI;MACfA,EAAE,CAACu/C,OAAO,GAAGhhC,MAAM;MACnB,OAAOve,EAAE,CAACw/C,SAAS;MACnB,OAAOx/C,EAAE,CAAC2+C,KAAK;MACf3+C,EAAE,CAACy/C,cAAc,GAAG,KAAK;IAC3B;EAAC;IAAA5gD,GAAA;IAAAsC,GAAA,EAID,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACq+C,SAAS,KAAK,IAAI,CAACA,SAAS,GAAGzkD,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAACmM,OAAO,CAACke,OAAO,CAAC,CAAC;IAC1F;EAAC;IAAAvmB,GAAA;IAAAC,KAAA,EACD,SAAAk7B,MAAA,EAAQ;MACN,IAAM8kB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMvgC,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,OAAOugC,QAAQ,CAACz+C,MAAM,IAAIke,MAAM,CAACugC,QAAQ,CAAC,CAAC,CAAC,CAACh/C,KAAK,CAAC;IACrD;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAAud,KAAA,EAAO;MACL,IAAMyiC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMvgC,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMlN,KAAK,GAAGytC,QAAQ,CAACz+C,MAAM;MAC7B,OAAOgR,KAAK,IAAIkN,MAAM,CAACugC,QAAQ,CAACztC,KAAK,GAAG,CAAC,CAAC,CAACjJ,GAAG,CAAC;IACjD;EAAC;IAAAvJ,GAAA;IAAAC,KAAA,EACD,SAAA4gD,YAAYjhC,KAAK,EAAEmqB,QAAQ,EAAE;MAC3B,IAAM5oC,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMpI,KAAK,GAAG2f,KAAK,CAACmqB,QAAQ,CAAC;MAC7B,IAAMrqB,MAAM,GAAGve,EAAE,CAACue,MAAM;MACxB,IAAMugC,QAAQ,GAAG7jD,cAAc,CAAC+E,EAAE,EAAE;QAAC4oC,QAAQ,EAARA,QAAQ;QAAE9oC,KAAK,EAAEhB,KAAK;QAAEsJ,GAAG,EAAEtJ;MAAK,CAAC,CAAC;MACzE,IAAI,CAACggD,QAAQ,CAACz+C,MAAM,EAAE;QACpB;MACF;MACA,IAAMw6B,MAAM,GAAG,EAAE;MACjB,IAAM8kB,YAAY,GAAGnB,uBAAuB,CAACt3C,OAAO,CAAC;MACrD,IAAIxU,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG41C,QAAQ,CAACz+C,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAAktD,WAAA,GAAqBd,QAAQ,CAACpsD,CAAC,CAAC;UAAzBoN,KAAK,GAAA8/C,WAAA,CAAL9/C,KAAK;UAAEsI,GAAG,GAAAw3C,WAAA,CAAHx3C,GAAG;QACjB,IAAMw+B,EAAE,GAAGroB,MAAM,CAACze,KAAK,CAAC;QACxB,IAAM+mC,EAAE,GAAGtoB,MAAM,CAACnW,GAAG,CAAC;QACtB,IAAIw+B,EAAE,KAAKC,EAAE,EAAE;UACbhM,MAAM,CAACn5B,IAAI,CAACklC,EAAE,CAAC;UACf;QACF;QACA,IAAM5yC,CAAC,GAAG4L,IAAI,CAACkY,GAAG,CAAC,CAAChZ,KAAK,GAAG8nC,EAAE,CAACgC,QAAQ,CAAC,KAAK/B,EAAE,CAAC+B,QAAQ,CAAC,GAAGhC,EAAE,CAACgC,QAAQ,CAAC,CAAC,CAAC;QAC1E,IAAMiX,YAAY,GAAGF,YAAY,CAAC/Y,EAAE,EAAEC,EAAE,EAAE7yC,CAAC,EAAEkT,OAAO,CAACy1C,OAAO,CAAC;QAC7DkD,YAAY,CAACjX,QAAQ,CAAC,GAAGnqB,KAAK,CAACmqB,QAAQ,CAAC;QACxC/N,MAAM,CAACn5B,IAAI,CAACm+C,YAAY,CAAC;MAC3B;MACA,OAAOhlB,MAAM,CAACx6B,MAAM,KAAK,CAAC,GAAGw6B,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;IACjD;EAAC;IAAAh8B,GAAA;IAAAC,KAAA,EACD,SAAAw+C,YAAYxvC,GAAG,EAAEsX,OAAO,EAAE8I,MAAM,EAAE;MAChC,IAAM6wB,aAAa,GAAGT,iBAAiB,CAAC,IAAI,CAAC;MAC7C,OAAOS,aAAa,CAACjxC,GAAG,EAAE,IAAI,EAAEsX,OAAO,EAAE8I,MAAM,CAAC;IAClD;EAAC;IAAArvB,GAAA;IAAAC,KAAA,EACD,SAAA4/C,KAAK5wC,GAAG,EAAEhO,KAAK,EAAEuR,KAAK,EAAE;MACtB,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAM8+C,QAAQ,GAAG9+C,EAAE,CAAC8+C,QAAQ;MAC5B,IAAMC,aAAa,GAAGT,iBAAiB,CAACt+C,EAAE,CAAC;MAC3C,IAAImE,IAAI,GAAGnE,EAAE,CAACkE,KAAK;MACnBpE,KAAK,GAAGA,KAAK,IAAI,CAAC;MAClBuR,KAAK,GAAGA,KAAK,IAAKrR,EAAE,CAACue,MAAM,CAACle,MAAM,GAAGP,KAAM;MAAC,IAAAggD,WAAA,GAAAv0C,0BAAA,CACtBuzC,QAAQ;QAAAiB,OAAA;MAAA;QAA9B,KAAAD,WAAA,CAAApsD,CAAA,MAAAqsD,OAAA,GAAAD,WAAA,CAAAtrD,CAAA,IAAAkX,IAAA,GAAgC;UAAA,IAArB0Z,OAAO,GAAA26B,OAAA,CAAAjhD,KAAA;UAChBqF,IAAI,IAAI46C,aAAa,CAACjxC,GAAG,EAAE9N,EAAE,EAAEolB,OAAO,EAAE;YAACtlB,KAAK,EAALA,KAAK;YAAEsI,GAAG,EAAEtI,KAAK,GAAGuR,KAAK,GAAG;UAAC,CAAC,CAAC;QAC1E;MAAC,SAAA1F,GAAA;QAAAm0C,WAAA,CAAA1tD,CAAA,CAAAuZ,GAAA;MAAA;QAAAm0C,WAAA,CAAA1sD,CAAA;MAAA;MACD,OAAO,CAAC,CAAC+Q,IAAI;IACf;EAAC;IAAAtF,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE+F,SAAS,EAAE/T,KAAK,EAAEuR,KAAK,EAAE;MACjC,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,IAAI,CAAC,CAAC;MAChC,IAAMqX,MAAM,GAAGve,EAAE,CAACue,MAAM,IAAI,EAAE;MAC9B,IAAI,CAACA,MAAM,CAACle,MAAM,IAAI,CAAC6G,OAAO,CAAC6b,WAAW,EAAE;QAC1C;MACF;MACAjV,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACV3lC,KAAI,CAACmN,GAAG,EAAE9N,EAAE,EAAEF,KAAK,EAAEuR,KAAK,CAAC;MAC3BvD,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACb,IAAIxmC,EAAE,CAACqlB,QAAQ,EAAE;QACfrlB,EAAE,CAACy/C,cAAc,GAAG,KAAK;QACzBz/C,EAAE,CAAC2+C,KAAK,GAAGhgD,SAAS;MACtB;IACF;EAAC;EAAA,OAAAwgD,WAAA;AAAA,EA3GuB3oB,OAAO;AA6GjC2oB,WAAW,CAAC70C,EAAE,GAAG,MAAM;AACvB60C,WAAW,CAAC1sD,QAAQ,GAAG;EACrB8pD,cAAc,EAAE,MAAM;EACtBlkB,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,CAAC;EACnBkkB,eAAe,EAAE,OAAO;EACxBz5B,WAAW,EAAE,CAAC;EACdi9B,eAAe,EAAE,IAAI;EACrBnD,sBAAsB,EAAE,SAAS;EACjCp0B,IAAI,EAAE,KAAK;EACXlD,QAAQ,EAAE,KAAK;EACfo3B,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AACDuC,WAAW,CAACpoB,aAAa,GAAG;EAC1BnT,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AACDq7B,WAAW,CAAClmD,WAAW,GAAG;EACxB4M,WAAW,EAAE,IAAI;EACjBD,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,MAAM;EAAA;AAChE,CAAC;AAED,SAASm6C,SAASA,CAACt1B,EAAE,EAAEkC,GAAG,EAAE1gB,IAAI,EAAEwf,gBAAgB,EAAE;EAClD,IAAMzkB,OAAO,GAAGyjB,EAAE,CAACzjB,OAAO;EAC1B,IAAAg5C,YAAA,GAAwBv1B,EAAE,CAACgM,QAAQ,CAAC,CAACxqB,IAAI,CAAC,EAAEwf,gBAAgB,CAAC;IAA9C7sB,KAAK,GAAAohD,YAAA,CAAZ/zC,IAAI;EACZ,OAAQvM,IAAI,CAACkY,GAAG,CAAC+U,GAAG,GAAG/tB,KAAK,CAAC,GAAGoI,OAAO,CAAC4X,MAAM,GAAG5X,OAAO,CAACi5C,SAAS;AACpE;AAAC,IACKC,YAAY,0BAAAC,SAAA;EAAAxlC,SAAA,CAAAulC,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAvlC,YAAA,CAAAqlC,YAAA;EAChB,SAAAA,aAAY78C,GAAG,EAAE;IAAA,IAAAg9C,MAAA;IAAAliD,eAAA,OAAA+hD,YAAA;IACfG,MAAA,GAAAD,QAAA,CAAArgD,IAAA;IACAsgD,MAAA,CAAKr5C,OAAO,GAAGvI,SAAS;IACxB4hD,MAAA,CAAKz0C,MAAM,GAAGnN,SAAS;IACvB4hD,MAAA,CAAK1hC,IAAI,GAAGlgB,SAAS;IACrB4hD,MAAA,CAAKl+C,IAAI,GAAG1D,SAAS;IACrB,IAAI4E,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAA2zC,sBAAA,CAAAgF,MAAA,GAAOh9C,GAAG,CAAC;IAC1B;IAAC,OAAAg9C,MAAA;EACH;EAAC3hD,YAAA,CAAAwhD,YAAA;IAAAvhD,GAAA;IAAAC,KAAA,EACD,SAAAgtB,QAAQ00B,MAAM,EAAEC,MAAM,EAAE90B,gBAAgB,EAAE;MACxC,IAAMzkB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAAw5C,eAAA,GAAe,IAAI,CAAC/pB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEhL,gBAAgB,CAAC;QAAnDr2B,CAAC,GAAAorD,eAAA,CAADprD,CAAC;QAAEE,CAAC,GAAAkrD,eAAA,CAADlrD,CAAC;MACX,OAASoK,IAAI,CAAC6rB,GAAG,CAAC+0B,MAAM,GAAGlrD,CAAC,EAAE,CAAC,CAAC,GAAGsK,IAAI,CAAC6rB,GAAG,CAACg1B,MAAM,GAAGjrD,CAAC,EAAE,CAAC,CAAC,GAAIoK,IAAI,CAAC6rB,GAAG,CAACvkB,OAAO,CAACi5C,SAAS,GAAGj5C,OAAO,CAAC4X,MAAM,EAAE,CAAC,CAAC;IAC/G;EAAC;IAAAjgB,GAAA;IAAAC,KAAA,EACD,SAAA6hD,SAASH,MAAM,EAAE70B,gBAAgB,EAAE;MACjC,OAAOs0B,SAAS,CAAC,IAAI,EAAEO,MAAM,EAAE,GAAG,EAAE70B,gBAAgB,CAAC;IACvD;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAA8hD,SAASH,MAAM,EAAE90B,gBAAgB,EAAE;MACjC,OAAOs0B,SAAS,CAAC,IAAI,EAAEQ,MAAM,EAAE,GAAG,EAAE90B,gBAAgB,CAAC;IACvD;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAAotB,eAAeP,gBAAgB,EAAE;MAC/B,IAAAk1B,eAAA,GAAe,IAAI,CAAClqB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEhL,gBAAgB,CAAC;QAAnDr2B,CAAC,GAAAurD,eAAA,CAADvrD,CAAC;QAAEE,CAAC,GAAAqrD,eAAA,CAADrrD,CAAC;MACX,OAAO;QAACF,CAAC,EAADA,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC;IACf;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAA6I,KAAKT,OAAO,EAAE;MACZA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MACvC,IAAI4X,MAAM,GAAG5X,OAAO,CAAC4X,MAAM,IAAI,CAAC;MAChCA,MAAM,GAAGlf,IAAI,CAACuC,GAAG,CAAC2c,MAAM,EAAEA,MAAM,IAAI5X,OAAO,CAAC45C,WAAW,IAAI,CAAC,CAAC;MAC7D,IAAM/9B,WAAW,GAAGjE,MAAM,IAAI5X,OAAO,CAAC6b,WAAW,IAAI,CAAC;MACtD,OAAO,CAACjE,MAAM,GAAGiE,WAAW,IAAI,CAAC;IACnC;EAAC;IAAAlkB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE8F,IAAI,EAAE;MACd,IAAM5T,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAIlH,EAAE,CAAC6e,IAAI,IAAI3X,OAAO,CAAC4X,MAAM,GAAG,GAAG,IAAI,CAACrpB,cAAc,CAACuK,EAAE,EAAE4T,IAAI,EAAE5T,EAAE,CAAC2H,IAAI,CAACT,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QACtF;MACF;MACA4G,GAAG,CAAC+V,WAAW,GAAG3c,OAAO,CAAC4c,WAAW;MACrChW,GAAG,CAACiW,SAAS,GAAG7c,OAAO,CAAC6b,WAAW;MACnCjV,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAAC0c,eAAe;MACvC/nB,SAAS,CAACiS,GAAG,EAAE5G,OAAO,EAAElH,EAAE,CAAC1K,CAAC,EAAE0K,EAAE,CAACxK,CAAC,CAAC;IACrC;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAA8rB,SAAA,EAAW;MACT,IAAM1jB,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MAClC,OAAOA,OAAO,CAAC4X,MAAM,GAAG5X,OAAO,CAACi5C,SAAS;IAC3C;EAAC;EAAA,OAAAC,YAAA;AAAA,EA/CwB5pB,OAAO;AAiDlC4pB,YAAY,CAAC91C,EAAE,GAAG,OAAO;AACzB81C,YAAY,CAAC3tD,QAAQ,GAAG;EACtBswB,WAAW,EAAE,CAAC;EACdo9B,SAAS,EAAE,CAAC;EACZn9B,gBAAgB,EAAE,CAAC;EACnB89B,WAAW,EAAE,CAAC;EACdv9B,UAAU,EAAE,QAAQ;EACpBzE,MAAM,EAAE,CAAC;EACTK,QAAQ,EAAE;AACZ,CAAC;AACDihC,YAAY,CAACrpB,aAAa,GAAG;EAC3BnT,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,SAASi9B,YAAYA,CAACC,GAAG,EAAEr1B,gBAAgB,EAAE;EAC3C,IAAAs1B,aAAA,GAAoCD,GAAG,CAACrqB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAEhL,gBAAgB,CAAC;IAAlGr2B,CAAC,GAAA2rD,aAAA,CAAD3rD,CAAC;IAAEE,CAAC,GAAAyrD,aAAA,CAADzrD,CAAC;IAAEukB,IAAI,GAAAknC,aAAA,CAAJlnC,IAAI;IAAEoC,KAAK,GAAA8kC,aAAA,CAAL9kC,KAAK;IAAED,MAAM,GAAA+kC,aAAA,CAAN/kC,MAAM;EAChC,IAAIvT,IAAI,EAAEF,KAAK,EAAED,GAAG,EAAEE,MAAM,EAAEw4C,IAAI;EAClC,IAAIF,GAAG,CAAClnC,UAAU,EAAE;IAClBonC,IAAI,GAAGhlC,MAAM,GAAG,CAAC;IACjBvT,IAAI,GAAG/I,IAAI,CAACC,GAAG,CAACvK,CAAC,EAAEykB,IAAI,CAAC;IACxBtR,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAAC7M,CAAC,EAAEykB,IAAI,CAAC;IACzBvR,GAAG,GAAGhT,CAAC,GAAG0rD,IAAI;IACdx4C,MAAM,GAAGlT,CAAC,GAAG0rD,IAAI;EACnB,CAAC,MAAM;IACLA,IAAI,GAAG/kC,KAAK,GAAG,CAAC;IAChBxT,IAAI,GAAGrT,CAAC,GAAG4rD,IAAI;IACfz4C,KAAK,GAAGnT,CAAC,GAAG4rD,IAAI;IAChB14C,GAAG,GAAG5I,IAAI,CAACC,GAAG,CAACrK,CAAC,EAAEukB,IAAI,CAAC;IACvBrR,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAAC3M,CAAC,EAAEukB,IAAI,CAAC;EAC5B;EACA,OAAO;IAACpR,IAAI,EAAJA,IAAI;IAAEH,GAAG,EAAHA,GAAG;IAAEC,KAAK,EAALA,KAAK;IAAEC,MAAM,EAANA;EAAM,CAAC;AACnC;AACA,SAASy4C,WAAWA,CAACtiC,IAAI,EAAE/f,KAAK,EAAEe,GAAG,EAAEsC,GAAG,EAAE;EAC1C,OAAO0c,IAAI,GAAG,CAAC,GAAG1pB,WAAW,CAAC2J,KAAK,EAAEe,GAAG,EAAEsC,GAAG,CAAC;AAChD;AACA,SAASi/C,gBAAgBA,CAACJ,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAE;EACzC,IAAMxiD,KAAK,GAAGkiD,GAAG,CAAC95C,OAAO,CAAC6b,WAAW;EACrC,IAAMlE,IAAI,GAAGmiC,GAAG,CAAC9mC,aAAa;EAC9B,IAAMxlB,CAAC,GAAGuH,MAAM,CAAC6C,KAAK,CAAC;EACvB,OAAO;IACL9K,CAAC,EAAEmtD,WAAW,CAACtiC,IAAI,CAACrW,GAAG,EAAE9T,CAAC,CAAC8T,GAAG,EAAE,CAAC,EAAE84C,IAAI,CAAC;IACxCtvD,CAAC,EAAEmvD,WAAW,CAACtiC,IAAI,CAACpW,KAAK,EAAE/T,CAAC,CAAC+T,KAAK,EAAE,CAAC,EAAE44C,IAAI,CAAC;IAC5CzuD,CAAC,EAAEuuD,WAAW,CAACtiC,IAAI,CAACnW,MAAM,EAAEhU,CAAC,CAACgU,MAAM,EAAE,CAAC,EAAE44C,IAAI,CAAC;IAC9CpuD,CAAC,EAAEiuD,WAAW,CAACtiC,IAAI,CAAClW,IAAI,EAAEjU,CAAC,CAACiU,IAAI,EAAE,CAAC,EAAE04C,IAAI;EAC3C,CAAC;AACH;AACA,SAASE,iBAAiBA,CAACP,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAE;EAC1C,IAAAE,cAAA,GAA6BR,GAAG,CAACrqB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAA1Dvc,kBAAkB,GAAAonC,cAAA,CAAlBpnC,kBAAkB;EACzB,IAAMtb,KAAK,GAAGkiD,GAAG,CAAC95C,OAAO,CAAC2xC,YAAY;EACtC,IAAMnkD,CAAC,GAAGyH,aAAa,CAAC2C,KAAK,CAAC;EAC9B,IAAM2iD,IAAI,GAAG7hD,IAAI,CAACC,GAAG,CAACwhD,IAAI,EAAEC,IAAI,CAAC;EACjC,IAAMziC,IAAI,GAAGmiC,GAAG,CAAC9mC,aAAa;EAC9B,IAAMwnC,YAAY,GAAGtnC,kBAAkB,IAAIznB,QAAQ,CAACmM,KAAK,CAAC;EAC1D,OAAO;IACL6iD,OAAO,EAAER,WAAW,CAAC,CAACO,YAAY,IAAI7iC,IAAI,CAACrW,GAAG,IAAIqW,IAAI,CAAClW,IAAI,EAAEjU,CAAC,CAACitD,OAAO,EAAE,CAAC,EAAEF,IAAI,CAAC;IAChFG,QAAQ,EAAET,WAAW,CAAC,CAACO,YAAY,IAAI7iC,IAAI,CAACrW,GAAG,IAAIqW,IAAI,CAACpW,KAAK,EAAE/T,CAAC,CAACktD,QAAQ,EAAE,CAAC,EAAEH,IAAI,CAAC;IACnFI,UAAU,EAAEV,WAAW,CAAC,CAACO,YAAY,IAAI7iC,IAAI,CAACnW,MAAM,IAAImW,IAAI,CAAClW,IAAI,EAAEjU,CAAC,CAACmtD,UAAU,EAAE,CAAC,EAAEJ,IAAI,CAAC;IACzFK,WAAW,EAAEX,WAAW,CAAC,CAACO,YAAY,IAAI7iC,IAAI,CAACnW,MAAM,IAAImW,IAAI,CAACpW,KAAK,EAAE/T,CAAC,CAACotD,WAAW,EAAE,CAAC,EAAEL,IAAI;EAC7F,CAAC;AACH;AACA,SAASM,aAAaA,CAACf,GAAG,EAAE;EAC1B,IAAMnpB,MAAM,GAAGkpB,YAAY,CAACC,GAAG,CAAC;EAChC,IAAM7kC,KAAK,GAAG0b,MAAM,CAACpvB,KAAK,GAAGovB,MAAM,CAAClvB,IAAI;EACxC,IAAMuT,MAAM,GAAG2b,MAAM,CAACnvB,MAAM,GAAGmvB,MAAM,CAACrvB,GAAG;EACzC,IAAMod,MAAM,GAAGw7B,gBAAgB,CAACJ,GAAG,EAAE7kC,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC3D,IAAM4C,MAAM,GAAGyiC,iBAAiB,CAACP,GAAG,EAAE7kC,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC5D,OAAO;IACL8lC,KAAK,EAAE;MACL1sD,CAAC,EAAEuiC,MAAM,CAAClvB,IAAI;MACdnT,CAAC,EAAEqiC,MAAM,CAACrvB,GAAG;MACbpT,CAAC,EAAE+mB,KAAK;MACR3oB,CAAC,EAAE0oB,MAAM;MACT4C,MAAM,EAANA;IACF,CAAC;IACDm8B,KAAK,EAAE;MACL3lD,CAAC,EAAEuiC,MAAM,CAAClvB,IAAI,GAAGid,MAAM,CAAC1yB,CAAC;MACzBsC,CAAC,EAAEqiC,MAAM,CAACrvB,GAAG,GAAGod,MAAM,CAAC5xB,CAAC;MACxBoB,CAAC,EAAE+mB,KAAK,GAAGyJ,MAAM,CAAC1yB,CAAC,GAAG0yB,MAAM,CAAC5zB,CAAC;MAC9BwB,CAAC,EAAE0oB,MAAM,GAAG0J,MAAM,CAAC5xB,CAAC,GAAG4xB,MAAM,CAAChzB,CAAC;MAC/BksB,MAAM,EAAE;QACN6iC,OAAO,EAAE/hD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE2c,MAAM,CAAC6iC,OAAO,GAAG/hD,IAAI,CAACuC,GAAG,CAACyjB,MAAM,CAAC5xB,CAAC,EAAE4xB,MAAM,CAAC1yB,CAAC,CAAC,CAAC;QACnE0uD,QAAQ,EAAEhiD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE2c,MAAM,CAAC8iC,QAAQ,GAAGhiD,IAAI,CAACuC,GAAG,CAACyjB,MAAM,CAAC5xB,CAAC,EAAE4xB,MAAM,CAAC5zB,CAAC,CAAC,CAAC;QACrE6vD,UAAU,EAAEjiD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE2c,MAAM,CAAC+iC,UAAU,GAAGjiD,IAAI,CAACuC,GAAG,CAACyjB,MAAM,CAAChzB,CAAC,EAAEgzB,MAAM,CAAC1yB,CAAC,CAAC,CAAC;QACzE4uD,WAAW,EAAEliD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE2c,MAAM,CAACgjC,WAAW,GAAGliD,IAAI,CAACuC,GAAG,CAACyjB,MAAM,CAAChzB,CAAC,EAAEgzB,MAAM,CAAC5zB,CAAC,CAAC;MAC5E;IACF;EACF,CAAC;AACH;AACA,SAAS85B,QAAOA,CAACk1B,GAAG,EAAE1rD,CAAC,EAAEE,CAAC,EAAEm2B,gBAAgB,EAAE;EAC5C,IAAMs2B,KAAK,GAAG3sD,CAAC,KAAK,IAAI;EACxB,IAAM4sD,KAAK,GAAG1sD,CAAC,KAAK,IAAI;EACxB,IAAM2sD,QAAQ,GAAGF,KAAK,IAAIC,KAAK;EAC/B,IAAMrqB,MAAM,GAAGmpB,GAAG,IAAI,CAACmB,QAAQ,IAAIpB,YAAY,CAACC,GAAG,EAAEr1B,gBAAgB,CAAC;EACtE,OAAOkM,MAAM,KACToqB,KAAK,IAAI3sD,CAAC,IAAIuiC,MAAM,CAAClvB,IAAI,IAAIrT,CAAC,IAAIuiC,MAAM,CAACpvB,KAAK,CAAC,KAC/Cy5C,KAAK,IAAI1sD,CAAC,IAAIqiC,MAAM,CAACrvB,GAAG,IAAIhT,CAAC,IAAIqiC,MAAM,CAACnvB,MAAM,CAAC;AACrD;AACA,SAAS05C,SAASA,CAACtjC,MAAM,EAAE;EACzB,OAAOA,MAAM,CAAC6iC,OAAO,IAAI7iC,MAAM,CAAC8iC,QAAQ,IAAI9iC,MAAM,CAAC+iC,UAAU,IAAI/iC,MAAM,CAACgjC,WAAW;AACrF;AACA,SAASO,iBAAiBA,CAACv0C,GAAG,EAAEw0C,IAAI,EAAE;EACpCx0C,GAAG,CAACw0C,IAAI,CAACA,IAAI,CAAChtD,CAAC,EAAEgtD,IAAI,CAAC9sD,CAAC,EAAE8sD,IAAI,CAACltD,CAAC,EAAEktD,IAAI,CAAC9uD,CAAC,CAAC;AAC1C;AACA,SAAS+uD,WAAWA,CAACD,IAAI,EAAEh5B,MAAM,EAAgB;EAAA,IAAdk5B,OAAO,GAAApiD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,CAAC;EAC7C,IAAM9K,CAAC,GAAGgtD,IAAI,CAAChtD,CAAC,KAAKktD,OAAO,CAACltD,CAAC,GAAG,CAACg0B,MAAM,GAAG,CAAC;EAC5C,IAAM9zB,CAAC,GAAG8sD,IAAI,CAAC9sD,CAAC,KAAKgtD,OAAO,CAAChtD,CAAC,GAAG,CAAC8zB,MAAM,GAAG,CAAC;EAC5C,IAAMl0B,CAAC,GAAG,CAACktD,IAAI,CAAChtD,CAAC,GAAGgtD,IAAI,CAACltD,CAAC,KAAKotD,OAAO,CAACltD,CAAC,GAAGktD,OAAO,CAACptD,CAAC,GAAGk0B,MAAM,GAAG,CAAC,IAAIh0B,CAAC;EACtE,IAAM9B,CAAC,GAAG,CAAC8uD,IAAI,CAAC9sD,CAAC,GAAG8sD,IAAI,CAAC9uD,CAAC,KAAKgvD,OAAO,CAAChtD,CAAC,GAAGgtD,OAAO,CAAChvD,CAAC,GAAG81B,MAAM,GAAG,CAAC,IAAI9zB,CAAC;EACtE,OAAO;IACLF,CAAC,EAAEgtD,IAAI,CAAChtD,CAAC,GAAGA,CAAC;IACbE,CAAC,EAAE8sD,IAAI,CAAC9sD,CAAC,GAAGA,CAAC;IACbJ,CAAC,EAAEktD,IAAI,CAACltD,CAAC,GAAGA,CAAC;IACb5B,CAAC,EAAE8uD,IAAI,CAAC9uD,CAAC,GAAGA,CAAC;IACbsrB,MAAM,EAAEwjC,IAAI,CAACxjC;EACf,CAAC;AACH;AAAC,IACK2jC,UAAU,0BAAAC,SAAA;EAAA7nC,SAAA,CAAA4nC,UAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA5nC,YAAA,CAAA0nC,UAAA;EACd,SAAAA,WAAYl/C,GAAG,EAAE;IAAA,IAAAq/C,OAAA;IAAAvkD,eAAA,OAAAokD,UAAA;IACfG,OAAA,GAAAD,QAAA,CAAA1iD,IAAA;IACA2iD,OAAA,CAAK17C,OAAO,GAAGvI,SAAS;IACxBikD,OAAA,CAAK9oC,UAAU,GAAGnb,SAAS;IAC3BikD,OAAA,CAAK7oC,IAAI,GAAGpb,SAAS;IACrBikD,OAAA,CAAKzmC,KAAK,GAAGxd,SAAS;IACtBikD,OAAA,CAAK1mC,MAAM,GAAGvd,SAAS;IACvB,IAAI4E,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAA2zC,sBAAA,CAAAqH,OAAA,GAAOr/C,GAAG,CAAC;IAC1B;IAAC,OAAAq/C,OAAA;EACH;EAAChkD,YAAA,CAAA6jD,UAAA;IAAA5jD,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM5G,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAA27C,cAAA,GAAuBd,aAAa,CAAC,IAAI,CAAC;QAAnC9G,KAAK,GAAA4H,cAAA,CAAL5H,KAAK;QAAE+G,KAAK,GAAAa,cAAA,CAALb,KAAK;MACnB,IAAMc,WAAW,GAAGV,SAAS,CAACJ,KAAK,CAACljC,MAAM,CAAC,GAAG/iB,kBAAkB,GAAGsmD,iBAAiB;MACpF,IAAMU,aAAa,GAAG,IAAI;MAC1Bj1C,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACV,IAAI0b,KAAK,CAAC5sD,CAAC,KAAK6lD,KAAK,CAAC7lD,CAAC,IAAI4sD,KAAK,CAACxuD,CAAC,KAAKynD,KAAK,CAACznD,CAAC,EAAE;QAC9Csa,GAAG,CAACk5B,SAAS,CAAC,CAAC;QACf8b,WAAW,CAACh1C,GAAG,EAAEy0C,WAAW,CAACP,KAAK,EAAEe,aAAa,EAAE9H,KAAK,CAAC,CAAC;QAC1DntC,GAAG,CAAC4F,IAAI,CAAC,CAAC;QACVovC,WAAW,CAACh1C,GAAG,EAAEy0C,WAAW,CAACtH,KAAK,EAAE,CAAC8H,aAAa,EAAEf,KAAK,CAAC,CAAC;QAC3Dl0C,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAAC4c,WAAW;QACnChW,GAAG,CAAC2a,IAAI,CAAC,SAAS,CAAC;MACrB;MACA3a,GAAG,CAACk5B,SAAS,CAAC,CAAC;MACf8b,WAAW,CAACh1C,GAAG,EAAEy0C,WAAW,CAACtH,KAAK,EAAE8H,aAAa,EAAEf,KAAK,CAAC,CAAC;MAC1Dl0C,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAAC0c,eAAe;MACvC9V,GAAG,CAAC2a,IAAI,CAAC,CAAC;MACV3a,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACf;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAgtB,QAAQ00B,MAAM,EAAEC,MAAM,EAAE90B,gBAAgB,EAAE;MACxC,OAAOG,QAAO,CAAC,IAAI,EAAE00B,MAAM,EAAEC,MAAM,EAAE90B,gBAAgB,CAAC;IACxD;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAA6hD,SAASH,MAAM,EAAE70B,gBAAgB,EAAE;MACjC,OAAOG,QAAO,CAAC,IAAI,EAAE00B,MAAM,EAAE,IAAI,EAAE70B,gBAAgB,CAAC;IACtD;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAA8hD,SAASH,MAAM,EAAE90B,gBAAgB,EAAE;MACjC,OAAOG,QAAO,CAAC,IAAI,EAAE,IAAI,EAAE20B,MAAM,EAAE90B,gBAAgB,CAAC;IACtD;EAAC;IAAA9sB,GAAA;IAAAC,KAAA,EACD,SAAAotB,eAAeP,gBAAgB,EAAE;MAC/B,IAAAq3B,eAAA,GAAiC,IAAI,CAACrsB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAEhL,gBAAgB,CAAC;QAA3Fr2B,CAAC,GAAA0tD,eAAA,CAAD1tD,CAAC;QAAEE,CAAC,GAAAwtD,eAAA,CAADxtD,CAAC;QAAEukB,IAAI,GAAAipC,eAAA,CAAJjpC,IAAI;QAAED,UAAU,GAAAkpC,eAAA,CAAVlpC,UAAU;MAC7B,OAAO;QACLxkB,CAAC,EAAEwkB,UAAU,GAAG,CAACxkB,CAAC,GAAGykB,IAAI,IAAI,CAAC,GAAGzkB,CAAC;QAClCE,CAAC,EAAEskB,UAAU,GAAGtkB,CAAC,GAAG,CAACA,CAAC,GAAGukB,IAAI,IAAI;MACnC,CAAC;IACH;EAAC;IAAAlb,GAAA;IAAAC,KAAA,EACD,SAAA8rB,SAASze,IAAI,EAAE;MACb,OAAOA,IAAI,KAAK,GAAG,GAAG,IAAI,CAACgQ,KAAK,GAAG,CAAC,GAAG,IAAI,CAACD,MAAM,GAAG,CAAC;IACxD;EAAC;EAAA,OAAAumC,UAAA;AAAA,EAlDsBjsB,OAAO;AAoDhCisB,UAAU,CAACn4C,EAAE,GAAG,KAAK;AACrBm4C,UAAU,CAAChwD,QAAQ,GAAG;EACpBynB,aAAa,EAAE,OAAO;EACtB6I,WAAW,EAAE,CAAC;EACd81B,YAAY,EAAE,CAAC;EACfz+B,kBAAkB,EAAE,IAAI;EACxBmJ,UAAU,EAAE5kB;AACd,CAAC;AACD8jD,UAAU,CAAC1rB,aAAa,GAAG;EACzBnT,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,IAAInQ,QAAQ,GAAG,aAAapO,MAAM,CAACsP,MAAM,CAAC;EAC1CkU,SAAS,EAAE,IAAI;EACfoyB,UAAU,EAAEA,UAAU;EACtBgE,WAAW,EAAEA,WAAW;EACxBiB,YAAY,EAAEA,YAAY;EAC1BqC,UAAU,EAAEA;AACZ,CAAC,CAAC;AAEF,SAASQ,cAAcA,CAACr5C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEkd,cAAc,EAAErnB,OAAO,EAAE;EACnE,IAAMg8C,OAAO,GAAGh8C,OAAO,CAACg8C,OAAO,IAAI30B,cAAc;EACjD,IAAI20B,OAAO,IAAI7xC,KAAK,EAAE;IACpB,OAAOzH,IAAI,CAAC0a,KAAK,CAACxkB,KAAK,EAAEA,KAAK,GAAGuR,KAAK,CAAC;EACzC;EACA,IAAM8xC,SAAS,GAAG,EAAE;EACpB,IAAMC,WAAW,GAAG,CAAC/xC,KAAK,GAAG,CAAC,KAAK6xC,OAAO,GAAG,CAAC,CAAC;EAC/C,IAAIG,YAAY,GAAG,CAAC;EACpB,IAAMC,QAAQ,GAAGxjD,KAAK,GAAGuR,KAAK,GAAG,CAAC;EAClC,IAAInf,CAAC,GAAG4N,KAAK;EACb,IAAIpN,CAAC,EAAE6wD,YAAY,EAAEC,OAAO,EAAE5vC,IAAI,EAAE6vC,KAAK;EACzCN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGz5C,IAAI,CAAC1X,CAAC,CAAC;EACnC,KAAKQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwwD,OAAO,GAAG,CAAC,EAAExwD,CAAC,EAAE,EAAE;IAChC,IAAIqrD,IAAI,GAAG,CAAC;IACZ,IAAI2F,IAAI,GAAG,CAAC;IACZ,IAAI9vD,CAAC;IACL,IAAM+vD,aAAa,GAAG/jD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAI0wD,WAAW,CAAC,GAAG,CAAC,GAAGtjD,KAAK;IACnE,IAAM8jD,WAAW,GAAGhkD,IAAI,CAACC,GAAG,CAACD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAI0wD,WAAW,CAAC,GAAG,CAAC,EAAE/xC,KAAK,CAAC,GAAGvR,KAAK;IAClF,IAAM+jD,cAAc,GAAGD,WAAW,GAAGD,aAAa;IAClD,KAAK/vD,CAAC,GAAG+vD,aAAa,EAAE/vD,CAAC,GAAGgwD,WAAW,EAAEhwD,CAAC,EAAE,EAAE;MAC5CmqD,IAAI,IAAIn0C,IAAI,CAAChW,CAAC,CAAC,CAAC0B,CAAC;MACjBouD,IAAI,IAAI95C,IAAI,CAAChW,CAAC,CAAC,CAAC4B,CAAC;IACnB;IACAuoD,IAAI,IAAI8F,cAAc;IACtBH,IAAI,IAAIG,cAAc;IACtB,IAAMC,SAAS,GAAGlkD,IAAI,CAACoE,KAAK,CAACtR,CAAC,GAAG0wD,WAAW,CAAC,GAAG,CAAC,GAAGtjD,KAAK;IACzD,IAAMikD,OAAO,GAAGnkD,IAAI,CAACC,GAAG,CAACD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAI0wD,WAAW,CAAC,GAAG,CAAC,EAAE/xC,KAAK,CAAC,GAAGvR,KAAK;IAC9E,IAAAkkD,OAAA,GAAiCp6C,IAAI,CAAC1X,CAAC,CAAC;MAA9B+xD,OAAO,GAAAD,OAAA,CAAV1uD,CAAC;MAAc4uD,OAAO,GAAAF,OAAA,CAAVxuD,CAAC;IACpBguD,OAAO,GAAG5vC,IAAI,GAAG,CAAC,CAAC;IACnB,KAAKhgB,CAAC,GAAGkwD,SAAS,EAAElwD,CAAC,GAAGmwD,OAAO,EAAEnwD,CAAC,EAAE,EAAE;MACpCggB,IAAI,GAAG,GAAG,GAAGhU,IAAI,CAACkY,GAAG,CACnB,CAACmsC,OAAO,GAAGlG,IAAI,KAAKn0C,IAAI,CAAChW,CAAC,CAAC,CAAC4B,CAAC,GAAG0uD,OAAO,CAAC,GACxC,CAACD,OAAO,GAAGr6C,IAAI,CAAChW,CAAC,CAAC,CAAC0B,CAAC,KAAKouD,IAAI,GAAGQ,OAAO,CACzC,CAAC;MACD,IAAItwC,IAAI,GAAG4vC,OAAO,EAAE;QAClBA,OAAO,GAAG5vC,IAAI;QACd2vC,YAAY,GAAG35C,IAAI,CAAChW,CAAC,CAAC;QACtB6vD,KAAK,GAAG7vD,CAAC;MACX;IACF;IACAuvD,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGE,YAAY;IACxCrxD,CAAC,GAAGuxD,KAAK;EACX;EACAN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGz5C,IAAI,CAAC05C,QAAQ,CAAC;EAC1C,OAAOH,SAAS;AAClB;AACA,SAASgB,gBAAgBA,CAACv6C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEkd,cAAc,EAAE;EAC5D,IAAIwvB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAItrD,CAAC,EAAE+rB,KAAK,EAAEnpB,CAAC,EAAEE,CAAC,EAAEyoD,KAAK,EAAEmG,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAE9jC,IAAI,EAAEF,IAAI;EACrE,IAAM6iC,SAAS,GAAG,EAAE;EACpB,IAAMG,QAAQ,GAAGxjD,KAAK,GAAGuR,KAAK,GAAG,CAAC;EAClC,IAAMkzC,IAAI,GAAG36C,IAAI,CAAC9J,KAAK,CAAC,CAACxK,CAAC;EAC1B,IAAMkvD,IAAI,GAAG56C,IAAI,CAAC05C,QAAQ,CAAC,CAAChuD,CAAC;EAC7B,IAAMmvD,EAAE,GAAGD,IAAI,GAAGD,IAAI;EACtB,KAAK7xD,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;IACtC+rB,KAAK,GAAG7U,IAAI,CAAClX,CAAC,CAAC;IACf4C,CAAC,GAAG,CAACmpB,KAAK,CAACnpB,CAAC,GAAGivD,IAAI,IAAIE,EAAE,GAAGl2B,cAAc;IAC1C/4B,CAAC,GAAGipB,KAAK,CAACjpB,CAAC;IACX,IAAM6oD,MAAM,GAAG/oD,CAAC,GAAG,CAAC;IACpB,IAAI+oD,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIzoD,CAAC,GAAGgrB,IAAI,EAAE;QACZA,IAAI,GAAGhrB,CAAC;QACR4uD,QAAQ,GAAG1xD,CAAC;MACd,CAAC,MAAM,IAAI8C,CAAC,GAAG8qB,IAAI,EAAE;QACnBA,IAAI,GAAG9qB,CAAC;QACR6uD,QAAQ,GAAG3xD,CAAC;MACd;MACAqrD,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGt/B,KAAK,CAACnpB,CAAC,IAAI,EAAE0oD,MAAM;IAC7C,CAAC,MAAM;MACL,IAAM0G,SAAS,GAAGhyD,CAAC,GAAG,CAAC;MACvB,IAAI,CAACmB,aAAa,CAACuwD,QAAQ,CAAC,IAAI,CAACvwD,aAAa,CAACwwD,QAAQ,CAAC,EAAE;QACxD,IAAMM,kBAAkB,GAAG/kD,IAAI,CAACC,GAAG,CAACukD,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAMO,kBAAkB,GAAGhlD,IAAI,CAACuC,GAAG,CAACiiD,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAIM,kBAAkB,KAAKL,UAAU,IAAIK,kBAAkB,KAAKD,SAAS,EAAE;UACzEvB,SAAS,CAACzhD,IAAI,CAAAmjD,aAAA,CAAAA,aAAA,KACTj7C,IAAI,CAAC+6C,kBAAkB,CAAC;YAC3BrvD,CAAC,EAAEyoD;UAAI,EACR,CAAC;QACJ;QACA,IAAI6G,kBAAkB,KAAKN,UAAU,IAAIM,kBAAkB,KAAKF,SAAS,EAAE;UACzEvB,SAAS,CAACzhD,IAAI,CAAAmjD,aAAA,CAAAA,aAAA,KACTj7C,IAAI,CAACg7C,kBAAkB,CAAC;YAC3BtvD,CAAC,EAAEyoD;UAAI,EACR,CAAC;QACJ;MACF;MACA,IAAIrrD,CAAC,GAAG,CAAC,IAAIgyD,SAAS,KAAKJ,UAAU,EAAE;QACrCnB,SAAS,CAACzhD,IAAI,CAACkI,IAAI,CAAC86C,SAAS,CAAC,CAAC;MACjC;MACAvB,SAAS,CAACzhD,IAAI,CAAC+c,KAAK,CAAC;MACrBw/B,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVx9B,IAAI,GAAGF,IAAI,GAAG9qB,CAAC;MACf4uD,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAG5xD,CAAC;IACtC;EACF;EACA,OAAOywD,SAAS;AAClB;AACA,SAAS2B,qBAAqBA,CAAC/3C,OAAO,EAAE;EACtC,IAAIA,OAAO,CAACmY,UAAU,EAAE;IACtB,IAAMtb,IAAI,GAAGmD,OAAO,CAACoB,KAAK;IAC1B,OAAOpB,OAAO,CAACmY,UAAU;IACzB,OAAOnY,OAAO,CAACoB,KAAK;IACpB5I,MAAM,CAACw/C,cAAc,CAACh4C,OAAO,EAAE,MAAM,EAAE;MAACjO,KAAK,EAAE8K;IAAI,CAAC,CAAC;EACvD;AACF;AACA,SAASo7C,kBAAkBA,CAAChmD,KAAK,EAAE;EACjCA,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAACuN,OAAO,EAAK;IACvC+3C,qBAAqB,CAAC/3C,OAAO,CAAC;EAChC,CAAC,CAAC;AACJ;AACA,SAASk4C,yCAAyCA,CAACj7C,IAAI,EAAEuU,MAAM,EAAE;EAC/D,IAAMyH,UAAU,GAAGzH,MAAM,CAACle,MAAM;EAChC,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIuR,KAAK;EACT,IAAOpF,MAAM,GAAIjC,IAAI,CAAdiC,MAAM;EACb,IAAAi5C,sBAAA,GAA2Cj5C,MAAM,CAAC1B,aAAa,CAAC,CAAC;IAA1D1K,GAAG,GAAAqlD,sBAAA,CAAHrlD,GAAG;IAAEsC,GAAG,GAAA+iD,sBAAA,CAAH/iD,GAAG;IAAEsI,UAAU,GAAAy6C,sBAAA,CAAVz6C,UAAU;IAAEC,UAAU,GAAAw6C,sBAAA,CAAVx6C,UAAU;EACvC,IAAID,UAAU,EAAE;IACd3K,KAAK,GAAG3K,WAAW,CAACE,YAAY,CAACkpB,MAAM,EAAEtS,MAAM,CAACE,IAAI,EAAEtM,GAAG,CAAC,CAACqmB,EAAE,EAAE,CAAC,EAAEF,UAAU,GAAG,CAAC,CAAC;EACnF;EACA,IAAItb,UAAU,EAAE;IACd2G,KAAK,GAAGlc,WAAW,CAACE,YAAY,CAACkpB,MAAM,EAAEtS,MAAM,CAACE,IAAI,EAAEhK,GAAG,CAAC,CAACgkB,EAAE,GAAG,CAAC,EAAErmB,KAAK,EAAEkmB,UAAU,CAAC,GAAGlmB,KAAK;EAC/F,CAAC,MAAM;IACLuR,KAAK,GAAG2U,UAAU,GAAGlmB,KAAK;EAC5B;EACA,OAAO;IAACA,KAAK,EAALA,KAAK;IAAEuR,KAAK,EAALA;EAAK,CAAC;AACvB;AACA,IAAI8zC,iBAAiB,GAAG;EACtB76C,EAAE,EAAE,YAAY;EAChB7X,QAAQ,EAAE;IACR2yD,SAAS,EAAE,SAAS;IACpBvrB,OAAO,EAAE;EACX,CAAC;EACDwrB,oBAAoB,EAAE,SAAAA,qBAACrmD,KAAK,EAAE6X,IAAI,EAAE3P,OAAO,EAAK;IAC9C,IAAI,CAACA,OAAO,CAAC2yB,OAAO,EAAE;MACpBmrB,kBAAkB,CAAChmD,KAAK,CAAC;MACzB;IACF;IACA,IAAMuvB,cAAc,GAAGvvB,KAAK,CAACmd,KAAK;IAClCnd,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAACuN,OAAO,EAAEtD,YAAY,EAAK;MACrD,IAAO0E,KAAK,GAAepB,OAAO,CAA3BoB,KAAK;QAAEqB,SAAS,GAAIzC,OAAO,CAApByC,SAAS;MACvB,IAAMxF,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC;MAC/C,IAAMG,IAAI,GAAGuE,KAAK,IAAIpB,OAAO,CAACnD,IAAI;MAClC,IAAIzX,OAAO,CAAC,CAACqd,SAAS,EAAExQ,KAAK,CAACkI,OAAO,CAACsI,SAAS,CAAC,CAAC,KAAK,GAAG,EAAE;QACzD;MACF;MACA,IAAIxF,IAAI,CAAC7K,IAAI,KAAK,MAAM,EAAE;QACxB;MACF;MACA,IAAMmmD,KAAK,GAAGtmD,KAAK,CAACyN,MAAM,CAACzC,IAAI,CAACmF,OAAO,CAAC;MACxC,IAAIm2C,KAAK,CAACnmD,IAAI,KAAK,QAAQ,IAAImmD,KAAK,CAACnmD,IAAI,KAAK,MAAM,EAAE;QACpD;MACF;MACA,IAAIH,KAAK,CAACkI,OAAO,CAACiK,OAAO,EAAE;QACzB;MACF;MACA,IAAAo0C,sBAAA,GAAqBN,yCAAyC,CAACj7C,IAAI,EAAEJ,IAAI,CAAC;QAArE9J,KAAK,GAAAylD,sBAAA,CAALzlD,KAAK;QAAEuR,KAAK,GAAAk0C,sBAAA,CAALl0C,KAAK;MACjB,IAAMm0C,SAAS,GAAGt+C,OAAO,CAACs+C,SAAS,IAAI,CAAC,GAAGj3B,cAAc;MACzD,IAAIld,KAAK,IAAIm0C,SAAS,EAAE;QACtBV,qBAAqB,CAAC/3C,OAAO,CAAC;QAC9B;MACF;MACA,IAAIlZ,aAAa,CAACsa,KAAK,CAAC,EAAE;QACxBpB,OAAO,CAACoB,KAAK,GAAGvE,IAAI;QACpB,OAAOmD,OAAO,CAACnD,IAAI;QACnBrE,MAAM,CAACw/C,cAAc,CAACh4C,OAAO,EAAE,MAAM,EAAE;UACrC04C,YAAY,EAAE,IAAI;UAClBrN,UAAU,EAAE,IAAI;UAChBj3C,GAAG,EAAE,SAAAA,IAAA,EAAW;YACd,OAAO,IAAI,CAAC+jB,UAAU;UACxB,CAAC;UACD5jB,GAAG,EAAE,SAAAA,IAAS9O,CAAC,EAAE;YACf,IAAI,CAAC2b,KAAK,GAAG3b,CAAC;UAChB;QACF,CAAC,CAAC;MACJ;MACA,IAAI2wD,SAAS;MACb,QAAQj8C,OAAO,CAACk+C,SAAS;QACzB,KAAK,MAAM;UACTjC,SAAS,GAAGF,cAAc,CAACr5C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEkd,cAAc,EAAErnB,OAAO,CAAC;UACvE;QACF,KAAK,SAAS;UACZi8C,SAAS,GAAGgB,gBAAgB,CAACv6C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEkd,cAAc,CAAC;UAChE;QACF;UACE,MAAM,IAAItF,KAAK,sCAAA5e,MAAA,CAAsCnD,OAAO,CAACk+C,SAAS,MAAG,CAAC;MAC5E;MACAr4C,OAAO,CAACmY,UAAU,GAAGi+B,SAAS;IAChC,CAAC,CAAC;EACJ,CAAC;EACD5M,OAAO,WAAAA,QAACv3C,KAAK,EAAE;IACbgmD,kBAAkB,CAAChmD,KAAK,CAAC;EAC3B;AACF,CAAC;AAED,SAAS0mD,cAAcA,CAAC1mD,KAAK,EAAEmK,KAAK,EAAE;EACpC,IAAMa,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC7G,KAAK,CAAC;EACxC,IAAMhD,OAAO,GAAG6D,IAAI,IAAIhL,KAAK,CAACkiB,gBAAgB,CAAC/X,KAAK,CAAC;EACrD,OAAOhD,OAAO,GAAG6D,IAAI,CAAC+C,OAAO,GAAG,IAAI;AACtC;AACA,SAAS44C,eAAeA,CAACjhC,IAAI,EAAE;EAC7B,IAAMxd,OAAO,GAAGwd,IAAI,CAACxd,OAAO;EAC5B,IAAM0+C,UAAU,GAAG1+C,OAAO,CAACuhB,IAAI;EAC/B,IAAIA,IAAI,GAAG11B,cAAc,CAAC6yD,UAAU,IAAIA,UAAU,CAACpiD,MAAM,EAAEoiD,UAAU,CAAC;EACtE,IAAIn9B,IAAI,KAAK9pB,SAAS,EAAE;IACtB8pB,IAAI,GAAG,CAAC,CAACvhB,OAAO,CAAC0c,eAAe;EAClC;EACA,IAAI6E,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,IAAI,EAAE;IACnC,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,QAAQ;EACjB;EACA,OAAOA,IAAI;AACb;AACA,SAASo9B,UAAUA,CAACnhC,IAAI,EAAEvb,KAAK,EAAEkI,KAAK,EAAE;EACtC,IAAMoX,IAAI,GAAGk9B,eAAe,CAACjhC,IAAI,CAAC;EAClC,IAAI/xB,QAAQ,CAAC81B,IAAI,CAAC,EAAE;IAClB,OAAOjM,KAAK,CAACiM,IAAI,CAAC3pB,KAAK,CAAC,GAAG,KAAK,GAAG2pB,IAAI;EACzC;EACA,IAAIjlB,MAAM,GAAGsiD,UAAU,CAACr9B,IAAI,CAAC;EAC7B,IAAIl1B,cAAc,CAACiQ,MAAM,CAAC,IAAI5D,IAAI,CAACoE,KAAK,CAACR,MAAM,CAAC,KAAKA,MAAM,EAAE;IAC3D,IAAIilB,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtCjlB,MAAM,GAAG2F,KAAK,GAAG3F,MAAM;IACzB;IACA,IAAIA,MAAM,KAAK2F,KAAK,IAAI3F,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI6N,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;IACA,OAAO7N,MAAM;EACf;EACA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAACiZ,OAAO,CAACgM,IAAI,CAAC,IAAI,CAAC,IAAIA,IAAI;AAChF;AACA,SAASs9B,qBAAqBA,CAACnmB,MAAM,EAAE;EACrC,IAAAomB,aAAA,GAA2BpmB,MAAM,CAA1B53B,KAAK;IAALA,KAAK,GAAAg+C,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;IAAEv9B,IAAI,GAAImX,MAAM,CAAdnX,IAAI;EACvB,IAAIjlB,MAAM,GAAG,IAAI;EACjB,IAAIsW,UAAU;EACd,IAAI2O,IAAI,KAAK,OAAO,EAAE;IACpBjlB,MAAM,GAAGwE,KAAK,CAACU,MAAM;EACvB,CAAC,MAAM,IAAI+f,IAAI,KAAK,KAAK,EAAE;IACzBjlB,MAAM,GAAGwE,KAAK,CAACQ,GAAG;EACpB,CAAC,MAAM,IAAI7V,QAAQ,CAAC81B,IAAI,CAAC,EAAE;IACzBjlB,MAAM,GAAGwE,KAAK,CAAC+P,gBAAgB,CAAC0Q,IAAI,CAAC3pB,KAAK,CAAC;EAC7C,CAAC,MAAM,IAAIkJ,KAAK,CAACyT,YAAY,EAAE;IAC7BjY,MAAM,GAAGwE,KAAK,CAACyT,YAAY,CAAC,CAAC;EAC/B;EACA,IAAIloB,cAAc,CAACiQ,MAAM,CAAC,EAAE;IAC1BsW,UAAU,GAAG9R,KAAK,CAAC4R,YAAY,CAAC,CAAC;IACjC,OAAO;MACLtkB,CAAC,EAAEwkB,UAAU,GAAGtW,MAAM,GAAG,IAAI;MAC7BhO,CAAC,EAAEskB,UAAU,GAAG,IAAI,GAAGtW;IACzB,CAAC;EACH;EACA,OAAO,IAAI;AACb;AAAC,IACKyiD,SAAS;EACb,SAAAA,UAAY/9C,IAAI,EAAE;IAAA7J,eAAA,OAAA4nD,SAAA;IAChB,IAAI,CAAC3wD,CAAC,GAAG4S,IAAI,CAAC5S,CAAC;IACf,IAAI,CAACE,CAAC,GAAG0S,IAAI,CAAC1S,CAAC;IACf,IAAI,CAACspB,MAAM,GAAG5W,IAAI,CAAC4W,MAAM;EAC3B;EAAClgB,YAAA,CAAAqnD,SAAA;IAAApnD,GAAA;IAAAC,KAAA,EACD,SAAAw+C,YAAYxvC,GAAG,EAAE+pB,MAAM,EAAE3vB,IAAI,EAAE;MAC7B,IAAO5S,CAAC,GAAe,IAAI,CAApBA,CAAC;QAAEE,CAAC,GAAY,IAAI,CAAjBA,CAAC;QAAEspB,MAAM,GAAI,IAAI,CAAdA,MAAM;MACnB+Y,MAAM,GAAGA,MAAM,IAAI;QAAC/3B,KAAK,EAAE,CAAC;QAAEsI,GAAG,EAAE7T;MAAG,CAAC;MACvCuZ,GAAG,CAAC6U,GAAG,CAACrtB,CAAC,EAAEE,CAAC,EAAEspB,MAAM,EAAE+Y,MAAM,CAACzvB,GAAG,EAAEyvB,MAAM,CAAC/3B,KAAK,EAAE,IAAI,CAAC;MACrD,OAAO,CAACoI,IAAI,CAAC2vB,MAAM;IACrB;EAAC;IAAAh5B,GAAA;IAAAC,KAAA,EACD,SAAA4gD,YAAYjhC,KAAK,EAAE;MACjB,IAAOnpB,CAAC,GAAe,IAAI,CAApBA,CAAC;QAAEE,CAAC,GAAY,IAAI,CAAjBA,CAAC;QAAEspB,MAAM,GAAI,IAAI,CAAdA,MAAM;MACnB,IAAMqB,KAAK,GAAG1B,KAAK,CAAC0B,KAAK;MACzB,OAAO;QACL7qB,CAAC,EAAEA,CAAC,GAAGsK,IAAI,CAACigB,GAAG,CAACM,KAAK,CAAC,GAAGrB,MAAM;QAC/BtpB,CAAC,EAAEA,CAAC,GAAGoK,IAAI,CAACmgB,GAAG,CAACI,KAAK,CAAC,GAAGrB,MAAM;QAC/BqB,KAAK,EAALA;MACF,CAAC;IACH;EAAC;EAAA,OAAA8lC,SAAA;AAAA;AAEH,SAASC,uBAAuBA,CAACtmB,MAAM,EAAE;EACvC,IAAO53B,KAAK,GAAU43B,MAAM,CAArB53B,KAAK;IAAEygB,IAAI,GAAImX,MAAM,CAAdnX,IAAI;EAClB,IAAMvhB,OAAO,GAAGc,KAAK,CAACd,OAAO;EAC7B,IAAM7G,MAAM,GAAG2H,KAAK,CAAC8J,SAAS,CAAC,CAAC,CAACzR,MAAM;EACvC,IAAMmD,MAAM,GAAG,EAAE;EACjB,IAAM1D,KAAK,GAAGoH,OAAO,CAACiB,OAAO,GAAGH,KAAK,CAAC7F,GAAG,GAAG6F,KAAK,CAACnI,GAAG;EACrD,IAAMuI,GAAG,GAAGlB,OAAO,CAACiB,OAAO,GAAGH,KAAK,CAACnI,GAAG,GAAGmI,KAAK,CAAC7F,GAAG;EACnD,IAAIzP,CAAC,EAAEupB,MAAM,EAAEnd,KAAK;EACpB,IAAI2pB,IAAI,KAAK,OAAO,EAAE;IACpB3pB,KAAK,GAAGgB,KAAK;EACf,CAAC,MAAM,IAAI2oB,IAAI,KAAK,KAAK,EAAE;IACzB3pB,KAAK,GAAGsJ,GAAG;EACb,CAAC,MAAM,IAAIzV,QAAQ,CAAC81B,IAAI,CAAC,EAAE;IACzB3pB,KAAK,GAAG2pB,IAAI,CAAC3pB,KAAK;EACpB,CAAC,MAAM;IACLA,KAAK,GAAGkJ,KAAK,CAACw7B,YAAY,CAAC,CAAC;EAC9B;EACA,IAAIt8B,OAAO,CAAC2W,IAAI,CAACiK,QAAQ,EAAE;IACzB7L,MAAM,GAAGjU,KAAK,CAACwgB,wBAAwB,CAAC,CAAC,EAAE1oB,KAAK,CAAC;IACjD,OAAO,IAAImmD,SAAS,CAAC;MACnB3wD,CAAC,EAAE2mB,MAAM,CAAC3mB,CAAC;MACXE,CAAC,EAAEymB,MAAM,CAACzmB,CAAC;MACXspB,MAAM,EAAE9W,KAAK,CAAC0f,6BAA6B,CAAC5oB,KAAK;IACnD,CAAC,CAAC;EACJ;EACA,KAAKpM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;IAC3B8Q,MAAM,CAAC9B,IAAI,CAACsG,KAAK,CAACwgB,wBAAwB,CAAC91B,CAAC,EAAEoM,KAAK,CAAC,CAAC;EACvD;EACA,OAAO0E,MAAM;AACf;AACA,SAAS2iD,eAAeA,CAACvmB,MAAM,EAAE;EAC/B,IAAM53B,KAAK,GAAG43B,MAAM,CAAC53B,KAAK,IAAI,CAAC,CAAC;EAChC,IAAIA,KAAK,CAACwgB,wBAAwB,EAAE;IAClC,OAAO09B,uBAAuB,CAACtmB,MAAM,CAAC;EACxC;EACA,OAAOmmB,qBAAqB,CAACnmB,MAAM,CAAC;AACtC;AACA,SAASwmB,cAAcA,CAACtmD,KAAK,EAAEsI,GAAG,EAAEmW,MAAM,EAAE;EAC1C,OAAMnW,GAAG,GAAGtI,KAAK,EAAEsI,GAAG,EAAE,EAAE;IACxB,IAAMqW,KAAK,GAAGF,MAAM,CAACnW,GAAG,CAAC;IACzB,IAAI,CAACoU,KAAK,CAACiC,KAAK,CAACnpB,CAAC,CAAC,IAAI,CAACknB,KAAK,CAACiC,KAAK,CAACjpB,CAAC,CAAC,EAAE;MACtC;IACF;EACF;EACA,OAAO4S,GAAG;AACZ;AACA,SAASi+C,kBAAkBA,CAACC,QAAQ,EAAE5hC,IAAI,EAAE;EAC1C,IAAA6hC,KAAA,GAA6BD,QAAQ,IAAI,CAAC,CAAC;IAAAE,OAAA,GAAAD,KAAA,CAApCjxD,CAAC;IAADA,CAAC,GAAAkxD,OAAA,cAAG,IAAI,GAAAA,OAAA;IAAAC,OAAA,GAAAF,KAAA,CAAE/wD,CAAC;IAADA,CAAC,GAAAixD,OAAA,cAAG,IAAI,GAAAA,OAAA;EACzB,IAAMC,UAAU,GAAGhiC,IAAI,CAACnG,MAAM;EAC9B,IAAMA,MAAM,GAAG,EAAE;EACjBmG,IAAI,CAACo6B,QAAQ,CAACt/C,OAAO,CAAC,UAAAmnD,KAAA,EAAkB;IAAA,IAAhB7mD,KAAK,GAAA6mD,KAAA,CAAL7mD,KAAK;MAAEsI,GAAG,GAAAu+C,KAAA,CAAHv+C,GAAG;IAChCA,GAAG,GAAGg+C,cAAc,CAACtmD,KAAK,EAAEsI,GAAG,EAAEs+C,UAAU,CAAC;IAC5C,IAAM1sB,KAAK,GAAG0sB,UAAU,CAAC5mD,KAAK,CAAC;IAC/B,IAAMuc,IAAI,GAAGqqC,UAAU,CAACt+C,GAAG,CAAC;IAC5B,IAAI5S,CAAC,KAAK,IAAI,EAAE;MACd+oB,MAAM,CAAC7c,IAAI,CAAC;QAACpM,CAAC,EAAE0kC,KAAK,CAAC1kC,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC,CAAC;MAC5B+oB,MAAM,CAAC7c,IAAI,CAAC;QAACpM,CAAC,EAAE+mB,IAAI,CAAC/mB,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC,CAAC;IAC7B,CAAC,MAAM,IAAIF,CAAC,KAAK,IAAI,EAAE;MACrBipB,MAAM,CAAC7c,IAAI,CAAC;QAACpM,CAAC,EAADA,CAAC;QAAEE,CAAC,EAAEwkC,KAAK,CAACxkC;MAAC,CAAC,CAAC;MAC5B+oB,MAAM,CAAC7c,IAAI,CAAC;QAACpM,CAAC,EAADA,CAAC;QAAEE,CAAC,EAAE6mB,IAAI,CAAC7mB;MAAC,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAO+oB,MAAM;AACf;AACA,SAASqoC,cAAcA,CAAChnB,MAAM,EAAE;EAC9B,IAAO5gC,KAAK,GAAwB4gC,MAAM,CAAnC5gC,KAAK;IAAEgJ,KAAK,GAAiB43B,MAAM,CAA5B53B,KAAK;IAAEmB,KAAK,GAAUy2B,MAAM,CAArBz2B,KAAK;IAAEub,IAAI,GAAIkb,MAAM,CAAdlb,IAAI;EAChC,IAAMnG,MAAM,GAAG,EAAE;EACjB,IAAMugC,QAAQ,GAAGp6B,IAAI,CAACo6B,QAAQ;EAC9B,IAAM+H,YAAY,GAAGniC,IAAI,CAACnG,MAAM;EAChC,IAAMuoC,UAAU,GAAGC,aAAa,CAAC/nD,KAAK,EAAEmK,KAAK,CAAC;EAC9C29C,UAAU,CAACplD,IAAI,CAACslD,kBAAkB,CAAC;IAAC1xD,CAAC,EAAE,IAAI;IAAEE,CAAC,EAAEwS,KAAK,CAACU;EAAM,CAAC,EAAEgc,IAAI,CAAC,CAAC;EACrE,KAAK,IAAIhyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGosD,QAAQ,CAACz+C,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACxC,IAAM0yB,OAAO,GAAG05B,QAAQ,CAACpsD,CAAC,CAAC;IAC3B,KAAK,IAAIkB,CAAC,GAAGwxB,OAAO,CAACtlB,KAAK,EAAElM,CAAC,IAAIwxB,OAAO,CAAChd,GAAG,EAAExU,CAAC,EAAE,EAAE;MACjDqzD,cAAc,CAAC1oC,MAAM,EAAEsoC,YAAY,CAACjzD,CAAC,CAAC,EAAEkzD,UAAU,CAAC;IACrD;EACF;EACA,OAAO,IAAI3H,WAAW,CAAC;IAAC5gC,MAAM,EAANA,MAAM;IAAErX,OAAO,EAAE,CAAC;EAAC,CAAC,CAAC;AAC/C;AACA,IAAMggD,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAIl9C,IAAI;EAAA,OAAKA,IAAI,CAAC7K,IAAI,KAAK,MAAM,IAAI,CAAC6K,IAAI,CAAC8J,MAAM;AAAA;AAClF,SAASizC,aAAaA,CAAC/nD,KAAK,EAAEmK,KAAK,EAAE;EACnC,IAAMg+C,KAAK,GAAG,EAAE;EAChB,IAAM3vC,KAAK,GAAGxY,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;EAClD,KAAK,IAAIz3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8kB,KAAK,CAACnX,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACrC,IAAMsX,IAAI,GAAGwN,KAAK,CAAC9kB,CAAC,CAAC;IACrB,IAAIsX,IAAI,CAACb,KAAK,KAAKA,KAAK,EAAE;MACxB;IACF;IACA,IAAI+9C,2BAA2B,CAACl9C,IAAI,CAAC,EAAE;MACrCm9C,KAAK,CAACC,OAAO,CAACp9C,IAAI,CAAC+C,OAAO,CAAC;IAC7B;EACF;EACA,OAAOo6C,KAAK;AACd;AACA,SAASF,cAAcA,CAAC1oC,MAAM,EAAE8oC,WAAW,EAAEP,UAAU,EAAE;EACvD,IAAMQ,SAAS,GAAG,EAAE;EACpB,KAAK,IAAI1zD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkzD,UAAU,CAACzmD,MAAM,EAAEzM,CAAC,EAAE,EAAE;IAC1C,IAAM8wB,IAAI,GAAGoiC,UAAU,CAAClzD,CAAC,CAAC;IAC1B,IAAA2zD,UAAA,GAA6BC,SAAS,CAAC9iC,IAAI,EAAE2iC,WAAW,EAAE,GAAG,CAAC;MAAvDrtB,KAAK,GAAAutB,UAAA,CAALvtB,KAAK;MAAE3d,IAAI,GAAAkrC,UAAA,CAAJlrC,IAAI;MAAEoC,KAAK,GAAA8oC,UAAA,CAAL9oC,KAAK;IACzB,IAAI,CAACA,KAAK,IAAKub,KAAK,IAAI3d,IAAK,EAAE;MAC7B;IACF;IACA,IAAI2d,KAAK,EAAE;MACTstB,SAAS,CAACF,OAAO,CAAC3oC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLF,MAAM,CAAC7c,IAAI,CAAC+c,KAAK,CAAC;MAClB,IAAI,CAACpC,IAAI,EAAE;QACT;MACF;IACF;EACF;EACAkC,MAAM,CAAC7c,IAAI,CAAAG,KAAA,CAAX0c,MAAM,EAAS+oC,SAAS,CAAC;AAC3B;AACA,SAASE,SAASA,CAAC9iC,IAAI,EAAE2iC,WAAW,EAAEze,QAAQ,EAAE;EAC9C,IAAMnqB,KAAK,GAAGiG,IAAI,CAACg7B,WAAW,CAAC2H,WAAW,EAAEze,QAAQ,CAAC;EACrD,IAAI,CAACnqB,KAAK,EAAE;IACV,OAAO,CAAC,CAAC;EACX;EACA,IAAMgpC,UAAU,GAAGhpC,KAAK,CAACmqB,QAAQ,CAAC;EAClC,IAAMkW,QAAQ,GAAGp6B,IAAI,CAACo6B,QAAQ;EAC9B,IAAM4H,UAAU,GAAGhiC,IAAI,CAACnG,MAAM;EAC9B,IAAIyb,KAAK,GAAG,KAAK;EACjB,IAAI3d,IAAI,GAAG,KAAK;EAChB,KAAK,IAAI3pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGosD,QAAQ,CAACz+C,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACxC,IAAM0yB,OAAO,GAAG05B,QAAQ,CAACpsD,CAAC,CAAC;IAC3B,IAAMg1D,UAAU,GAAGhB,UAAU,CAACthC,OAAO,CAACtlB,KAAK,CAAC,CAAC8oC,QAAQ,CAAC;IACtD,IAAM+e,SAAS,GAAGjB,UAAU,CAACthC,OAAO,CAAChd,GAAG,CAAC,CAACwgC,QAAQ,CAAC;IACnD,IAAI6e,UAAU,IAAIC,UAAU,IAAID,UAAU,IAAIE,SAAS,EAAE;MACvD3tB,KAAK,GAAGytB,UAAU,KAAKC,UAAU;MACjCrrC,IAAI,GAAGorC,UAAU,KAAKE,SAAS;MAC/B;IACF;EACF;EACA,OAAO;IAAC3tB,KAAK,EAALA,KAAK;IAAE3d,IAAI,EAAJA,IAAI;IAAEoC,KAAK,EAALA;EAAK,CAAC;AAC7B;AACA,SAASmpC,SAASA,CAAChoB,MAAM,EAAE;EACzB,IAAO5gC,KAAK,GAAgB4gC,MAAM,CAA3B5gC,KAAK;IAAEypB,IAAI,GAAUmX,MAAM,CAApBnX,IAAI;IAAE/D,IAAI,GAAIkb,MAAM,CAAdlb,IAAI;EACxB,IAAInxB,cAAc,CAACk1B,IAAI,CAAC,EAAE;IACxB,OAAOi9B,cAAc,CAAC1mD,KAAK,EAAEypB,IAAI,CAAC;EACpC;EACA,IAAIA,IAAI,KAAK,OAAO,EAAE;IACpB,OAAOm+B,cAAc,CAAChnB,MAAM,CAAC;EAC/B;EACA,IAAInX,IAAI,KAAK,OAAO,EAAE;IACpB,OAAO,IAAI;EACb;EACA,IAAM69B,QAAQ,GAAGH,eAAe,CAACvmB,MAAM,CAAC;EACxC,IAAI0mB,QAAQ,YAAYL,SAAS,EAAE;IACjC,OAAOK,QAAQ;EACjB;EACA,OAAOU,kBAAkB,CAACV,QAAQ,EAAE5hC,IAAI,CAAC;AAC3C;AACA,SAASsiC,kBAAkBA,CAACV,QAAQ,EAAE5hC,IAAI,EAAE;EAC1C,IAAInG,MAAM,GAAG,EAAE;EACf,IAAIra,KAAK,GAAG,KAAK;EACjB,IAAIrR,OAAO,CAACyzD,QAAQ,CAAC,EAAE;IACrBpiD,KAAK,GAAG,IAAI;IACZqa,MAAM,GAAG+nC,QAAQ;EACnB,CAAC,MAAM;IACL/nC,MAAM,GAAG8nC,kBAAkB,CAACC,QAAQ,EAAE5hC,IAAI,CAAC;EAC7C;EACA,OAAOnG,MAAM,CAACle,MAAM,GAAG,IAAI8+C,WAAW,CAAC;IACrC5gC,MAAM,EAANA,MAAM;IACNrX,OAAO,EAAE;MAAC01C,OAAO,EAAE;IAAC,CAAC;IACrB14C,KAAK,EAALA,KAAK;IACLokB,SAAS,EAAEpkB;EACb,CAAC,CAAC,GAAG,IAAI;AACX;AACA,SAAS2jD,aAAaA,CAACC,OAAO,EAAE3+C,KAAK,EAAE4+C,SAAS,EAAE;EAChD,IAAMnoB,MAAM,GAAGkoB,OAAO,CAAC3+C,KAAK,CAAC;EAC7B,IAAIsf,IAAI,GAAGmX,MAAM,CAACnX,IAAI;EACtB,IAAMu/B,OAAO,GAAG,CAAC7+C,KAAK,CAAC;EACvB,IAAI3F,MAAM;EACV,IAAI,CAACukD,SAAS,EAAE;IACd,OAAOt/B,IAAI;EACb;EACA,OAAOA,IAAI,KAAK,KAAK,IAAIu/B,OAAO,CAACvrC,OAAO,CAACgM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACrD,IAAI,CAACl1B,cAAc,CAACk1B,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI;IACb;IACAjlB,MAAM,GAAGskD,OAAO,CAACr/B,IAAI,CAAC;IACtB,IAAI,CAACjlB,MAAM,EAAE;MACX,OAAO,KAAK;IACd;IACA,IAAIA,MAAM,CAAC2C,OAAO,EAAE;MAClB,OAAOsiB,IAAI;IACb;IACAu/B,OAAO,CAACtmD,IAAI,CAAC+mB,IAAI,CAAC;IAClBA,IAAI,GAAGjlB,MAAM,CAACilB,IAAI;EACpB;EACA,OAAO,KAAK;AACd;AACA,SAAShV,KAAKA,CAAC3F,GAAG,EAAEtK,MAAM,EAAEykD,KAAK,EAAE;EACjCn6C,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfxjC,MAAM,CAACk7C,IAAI,CAAC5wC,GAAG,CAAC;EAChBA,GAAG,CAACo5B,MAAM,CAAC1jC,MAAM,CAAC6Y,IAAI,CAAC,CAAC,CAAC/mB,CAAC,EAAE2yD,KAAK,CAAC;EAClCn6C,GAAG,CAACo5B,MAAM,CAAC1jC,MAAM,CAACw2B,KAAK,CAAC,CAAC,CAAC1kC,CAAC,EAAE2yD,KAAK,CAAC;EACnCn6C,GAAG,CAAC2qC,SAAS,CAAC,CAAC;EACf3qC,GAAG,CAAC4F,IAAI,CAAC,CAAC;AACZ;AACA,SAASw0C,SAASA,CAACtf,QAAQ,EAAE5O,KAAK,EAAE3d,IAAI,EAAElY,IAAI,EAAE;EAC9C,IAAIA,IAAI,EAAE;IACR;EACF;EACA,IAAIrE,KAAK,GAAGk6B,KAAK,CAAC4O,QAAQ,CAAC;EAC3B,IAAIxgC,GAAG,GAAGiU,IAAI,CAACusB,QAAQ,CAAC;EACxB,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxB9oC,KAAK,GAAGvD,eAAe,CAACuD,KAAK,CAAC;IAC9BsI,GAAG,GAAG7L,eAAe,CAAC6L,GAAG,CAAC;EAC5B;EACA,OAAO;IAACwgC,QAAQ,EAARA,QAAQ;IAAE9oC,KAAK,EAALA,KAAK;IAAEsI,GAAG,EAAHA;EAAG,CAAC;AAC/B;AACA,SAAS+/C,QAAQA,CAACj2D,CAAC,EAAEU,CAAC,EAAE6Q,IAAI,EAAEhE,EAAE,EAAE;EAChC,IAAIvN,CAAC,IAAIU,CAAC,EAAE;IACV,OAAO6M,EAAE,CAACvN,CAAC,CAACuR,IAAI,CAAC,EAAE7Q,CAAC,CAAC6Q,IAAI,CAAC,CAAC;EAC7B;EACA,OAAOvR,CAAC,GAAGA,CAAC,CAACuR,IAAI,CAAC,GAAG7Q,CAAC,GAAGA,CAAC,CAAC6Q,IAAI,CAAC,GAAG,CAAC;AACtC;AACA,SAAS+7C,SAASA,CAAC96B,IAAI,EAAElhB,MAAM,EAAEolC,QAAQ,EAAE;EACzC,IAAMkW,QAAQ,GAAGp6B,IAAI,CAACo6B,QAAQ;EAC9B,IAAMvgC,MAAM,GAAGmG,IAAI,CAACnG,MAAM;EAC1B,IAAM6pC,OAAO,GAAG5kD,MAAM,CAAC+a,MAAM;EAC7B,IAAM2qB,KAAK,GAAG,EAAE;EAAC,IAAAmf,WAAA,GAAA98C,0BAAA,CACKuzC,QAAQ;IAAAwJ,OAAA;EAAA;IAA9B,KAAAD,WAAA,CAAA30D,CAAA,MAAA40D,OAAA,GAAAD,WAAA,CAAA7zD,CAAA,IAAAkX,IAAA,GAAgC;MAAA,IAArB0Z,OAAO,GAAAkjC,OAAA,CAAAxpD,KAAA;MAChB,IAAKgB,KAAK,GAASslB,OAAO,CAArBtlB,KAAK;QAAEsI,GAAG,GAAIgd,OAAO,CAAdhd,GAAG;MACfA,GAAG,GAAGg+C,cAAc,CAACtmD,KAAK,EAAEsI,GAAG,EAAEmW,MAAM,CAAC;MACxC,IAAMsZ,MAAM,GAAGqwB,SAAS,CAACtf,QAAQ,EAAErqB,MAAM,CAACze,KAAK,CAAC,EAAEye,MAAM,CAACnW,GAAG,CAAC,EAAEgd,OAAO,CAACjhB,IAAI,CAAC;MAC5E,IAAI,CAACX,MAAM,CAACs7C,QAAQ,EAAE;QACpB5V,KAAK,CAACxnC,IAAI,CAAC;UACTk+B,MAAM,EAAExa,OAAO;UACf5hB,MAAM,EAAEq0B,MAAM;UACd/3B,KAAK,EAAEye,MAAM,CAACze,KAAK,CAAC;UACpBsI,GAAG,EAAEmW,MAAM,CAACnW,GAAG;QACjB,CAAC,CAAC;QACF;MACF;MACA,IAAMmgD,cAAc,GAAGttD,cAAc,CAACuI,MAAM,EAAEq0B,MAAM,CAAC;MAAC,IAAA2wB,WAAA,GAAAj9C,0BAAA,CACpCg9C,cAAc;QAAAE,OAAA;MAAA;QAAhC,KAAAD,WAAA,CAAA90D,CAAA,MAAA+0D,OAAA,GAAAD,WAAA,CAAAh0D,CAAA,IAAAkX,IAAA,GAAkC;UAAA,IAAvBg9C,GAAG,GAAAD,OAAA,CAAA3pD,KAAA;UACZ,IAAM6pD,SAAS,GAAGT,SAAS,CAACtf,QAAQ,EAAEwf,OAAO,CAACM,GAAG,CAAC5oD,KAAK,CAAC,EAAEsoD,OAAO,CAACM,GAAG,CAACtgD,GAAG,CAAC,EAAEsgD,GAAG,CAACvkD,IAAI,CAAC;UACrF,IAAMykD,WAAW,GAAGvsD,aAAa,CAAC+oB,OAAO,EAAE7G,MAAM,EAAEoqC,SAAS,CAAC;UAAC,IAAAE,WAAA,GAAAt9C,0BAAA,CACrCq9C,WAAW;YAAAE,OAAA;UAAA;YAApC,KAAAD,WAAA,CAAAn1D,CAAA,MAAAo1D,OAAA,GAAAD,WAAA,CAAAr0D,CAAA,IAAAkX,IAAA,GAAsC;cAAA,IAA3Bq9C,UAAU,GAAAD,OAAA,CAAAhqD,KAAA;cACnBoqC,KAAK,CAACxnC,IAAI,CAAC;gBACTk+B,MAAM,EAAEmpB,UAAU;gBAClBvlD,MAAM,EAAEklD,GAAG;gBACX5oD,KAAK,EAAAmS,eAAA,KACF22B,QAAQ,EAAGuf,QAAQ,CAACtwB,MAAM,EAAE8wB,SAAS,EAAE,OAAO,EAAE/oD,IAAI,CAACuC,GAAG,CAAC,CAC3D;gBACDiG,GAAG,EAAA6J,eAAA,KACA22B,QAAQ,EAAGuf,QAAQ,CAACtwB,MAAM,EAAE8wB,SAAS,EAAE,KAAK,EAAE/oD,IAAI,CAACC,GAAG,CAAC;cAE5D,CAAC,CAAC;YACJ;UAAC,SAAA8L,GAAA;YAAAk9C,WAAA,CAAAz2D,CAAA,CAAAuZ,GAAA;UAAA;YAAAk9C,WAAA,CAAAz1D,CAAA;UAAA;QACH;MAAC,SAAAuY,GAAA;QAAA68C,WAAA,CAAAp2D,CAAA,CAAAuZ,GAAA;MAAA;QAAA68C,WAAA,CAAAp1D,CAAA;MAAA;IACH;EAAC,SAAAuY,GAAA;IAAA08C,WAAA,CAAAj2D,CAAA,CAAAuZ,GAAA;EAAA;IAAA08C,WAAA,CAAAj1D,CAAA;EAAA;EACD,OAAO81C,KAAK;AACd;AACA,SAAS8f,UAAUA,CAACl7C,GAAG,EAAE9F,KAAK,EAAE6vB,MAAM,EAAE;EACtC,IAAAoxB,qBAAA,GAAsBjhD,KAAK,CAAChJ,KAAK,CAAC6U,SAAS;IAApCrL,GAAG,GAAAygD,qBAAA,CAAHzgD,GAAG;IAAEE,MAAM,GAAAugD,qBAAA,CAANvgD,MAAM;EAClB,IAAAwgD,KAAA,GAA+BrxB,MAAM,IAAI,CAAC,CAAC;IAApC+Q,QAAQ,GAAAsgB,KAAA,CAARtgB,QAAQ;IAAE9oC,KAAK,GAAAopD,KAAA,CAALppD,KAAK;IAAEsI,GAAG,GAAA8gD,KAAA,CAAH9gD,GAAG;EAC3B,IAAIwgC,QAAQ,KAAK,GAAG,EAAE;IACpB96B,GAAG,CAACk5B,SAAS,CAAC,CAAC;IACfl5B,GAAG,CAACw0C,IAAI,CAACxiD,KAAK,EAAE0I,GAAG,EAAEJ,GAAG,GAAGtI,KAAK,EAAE4I,MAAM,GAAGF,GAAG,CAAC;IAC/CsF,GAAG,CAAC4F,IAAI,CAAC,CAAC;EACZ;AACF;AACA,SAASy1C,kBAAkBA,CAACr7C,GAAG,EAAEtK,MAAM,EAAEib,KAAK,EAAEmqB,QAAQ,EAAE;EACxD,IAAMwgB,iBAAiB,GAAG5lD,MAAM,CAACk8C,WAAW,CAACjhC,KAAK,EAAEmqB,QAAQ,CAAC;EAC7D,IAAIwgB,iBAAiB,EAAE;IACrBt7C,GAAG,CAACo5B,MAAM,CAACkiB,iBAAiB,CAAC9zD,CAAC,EAAE8zD,iBAAiB,CAAC5zD,CAAC,CAAC;EACtD;AACF;AACA,SAAS6zD,KAAKA,CAACv7C,GAAG,EAAEvK,GAAG,EAAE;EACvB,IAAOmhB,IAAI,GAAoCnhB,GAAG,CAA3CmhB,IAAI;IAAElhB,MAAM,GAA4BD,GAAG,CAArCC,MAAM;IAAEolC,QAAQ,GAAkBrlC,GAAG,CAA7BqlC,QAAQ;IAAEr2C,KAAK,GAAWgR,GAAG,CAAnBhR,KAAK;IAAEyV,KAAK,GAAIzE,GAAG,CAAZyE,KAAK;EAC3C,IAAM82C,QAAQ,GAAGU,SAAS,CAAC96B,IAAI,EAAElhB,MAAM,EAAEolC,QAAQ,CAAC;EAAC,IAAA0gB,WAAA,GAAA/9C,0BAAA,CACEuzC,QAAQ;IAAAyK,OAAA;EAAA;IAA7D,KAAAD,WAAA,CAAA51D,CAAA,MAAA61D,OAAA,GAAAD,WAAA,CAAA90D,CAAA,IAAAkX,IAAA,GAA+D;MAAA,IAAA89C,aAAA,GAAAD,OAAA,CAAAzqD,KAAA;QAA3C2qD,GAAG,GAAAD,aAAA,CAAX5pB,MAAM;QAAe8oB,GAAG,GAAAc,aAAA,CAAXhmD,MAAM;QAAO1D,KAAK,GAAA0pD,aAAA,CAAL1pD,KAAK;QAAEsI,GAAG,GAAAohD,aAAA,CAAHphD,GAAG;MAC9C,IAAAshD,UAAA,GAAgDD,GAAG,CAA5ChmC,KAAK;QAAAkmC,WAAA,GAAAD,UAAA,cAA8B,CAAC,CAAC,GAAAA,UAAA;QAAAE,qBAAA,GAAAD,WAAA,CAA7B/lC,eAAe;QAAfA,eAAe,GAAAgmC,qBAAA,cAAGr3D,KAAK,GAAAq3D,qBAAA;MACtC,IAAMC,QAAQ,GAAGrmD,MAAM,KAAK,IAAI;MAChCsK,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACVx4B,GAAG,CAAC6V,SAAS,GAAGC,eAAe;MAC/BolC,UAAU,CAACl7C,GAAG,EAAE9F,KAAK,EAAE6hD,QAAQ,IAAI3B,SAAS,CAACtf,QAAQ,EAAE9oC,KAAK,EAAEsI,GAAG,CAAC,CAAC;MACnE0F,GAAG,CAACk5B,SAAS,CAAC,CAAC;MACf,IAAM8iB,QAAQ,GAAG,CAAC,CAACplC,IAAI,CAAC44B,WAAW,CAACxvC,GAAG,EAAE27C,GAAG,CAAC;MAC7C,IAAItlD,IAAI;MACR,IAAI0lD,QAAQ,EAAE;QACZ,IAAIC,QAAQ,EAAE;UACZh8C,GAAG,CAAC2qC,SAAS,CAAC,CAAC;QACjB,CAAC,MAAM;UACL0Q,kBAAkB,CAACr7C,GAAG,EAAEtK,MAAM,EAAE4E,GAAG,EAAEwgC,QAAQ,CAAC;QAChD;QACA,IAAMmhB,UAAU,GAAG,CAAC,CAACvmD,MAAM,CAAC85C,WAAW,CAACxvC,GAAG,EAAE46C,GAAG,EAAE;UAACnyC,IAAI,EAAEuzC,QAAQ;UAAE3hD,OAAO,EAAE;QAAI,CAAC,CAAC;QAClFhE,IAAI,GAAG2lD,QAAQ,IAAIC,UAAU;QAC7B,IAAI,CAAC5lD,IAAI,EAAE;UACTglD,kBAAkB,CAACr7C,GAAG,EAAEtK,MAAM,EAAE1D,KAAK,EAAE8oC,QAAQ,CAAC;QAClD;MACF;MACA96B,GAAG,CAAC2qC,SAAS,CAAC,CAAC;MACf3qC,GAAG,CAAC2a,IAAI,CAACtkB,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC;MACtC2J,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACf;EAAC,SAAA76B,GAAA;IAAA29C,WAAA,CAAAl3D,CAAA,CAAAuZ,GAAA;EAAA;IAAA29C,WAAA,CAAAl2D,CAAA;EAAA;AACH;AACA,SAAS42D,MAAMA,CAACl8C,GAAG,EAAEvK,GAAG,EAAE;EACxB,IAAOmhB,IAAI,GAAuCnhB,GAAG,CAA9CmhB,IAAI;IAAElhB,MAAM,GAA+BD,GAAG,CAAxCC,MAAM;IAAEymD,KAAK,GAAwB1mD,GAAG,CAAhC0mD,KAAK;IAAE9C,KAAK,GAAiB5jD,GAAG,CAAzB4jD,KAAK;IAAEvzC,IAAI,GAAWrQ,GAAG,CAAlBqQ,IAAI;IAAE5L,KAAK,GAAIzE,GAAG,CAAZyE,KAAK;EAC9C,IAAM4gC,QAAQ,GAAGlkB,IAAI,CAACxgB,KAAK,GAAG,OAAO,GAAGX,GAAG,CAAC4I,IAAI;EAChD2B,GAAG,CAACw4B,IAAI,CAAC,CAAC;EACV,IAAIsC,QAAQ,KAAK,GAAG,IAAIue,KAAK,KAAK8C,KAAK,EAAE;IACvCx2C,KAAK,CAAC3F,GAAG,EAAEtK,MAAM,EAAEoQ,IAAI,CAACpL,GAAG,CAAC;IAC5B6gD,KAAK,CAACv7C,GAAG,EAAE;MAAC4W,IAAI,EAAJA,IAAI;MAAElhB,MAAM,EAANA,MAAM;MAAEjR,KAAK,EAAE03D,KAAK;MAAEjiD,KAAK,EAALA,KAAK;MAAE4gC,QAAQ,EAARA;IAAQ,CAAC,CAAC;IACzD96B,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACb14B,GAAG,CAACw4B,IAAI,CAAC,CAAC;IACV7yB,KAAK,CAAC3F,GAAG,EAAEtK,MAAM,EAAEoQ,IAAI,CAAClL,MAAM,CAAC;EACjC;EACA2gD,KAAK,CAACv7C,GAAG,EAAE;IAAC4W,IAAI,EAAJA,IAAI;IAAElhB,MAAM,EAANA,MAAM;IAAEjR,KAAK,EAAE40D,KAAK;IAAEn/C,KAAK,EAALA,KAAK;IAAE4gC,QAAQ,EAARA;EAAQ,CAAC,CAAC;EACzD96B,GAAG,CAAC04B,OAAO,CAAC,CAAC;AACf;AACA,SAAS0jB,QAAQA,CAACp8C,GAAG,EAAE8xB,MAAM,EAAEhsB,IAAI,EAAE;EACnC,IAAMpQ,MAAM,GAAGokD,SAAS,CAAChoB,MAAM,CAAC;EAChC,IAAOlb,IAAI,GAAiBkb,MAAM,CAA3Blb,IAAI;IAAE1c,KAAK,GAAU43B,MAAM,CAArB53B,KAAK;IAAEmE,IAAI,GAAIyzB,MAAM,CAAdzzB,IAAI;EACxB,IAAMg+C,QAAQ,GAAGzlC,IAAI,CAACxd,OAAO;EAC7B,IAAM0+C,UAAU,GAAGuE,QAAQ,CAAC1hC,IAAI;EAChC,IAAMl2B,KAAK,GAAG43D,QAAQ,CAACvmC,eAAe;EACtC,IAAAwmC,KAAA,GAAuCxE,UAAU,IAAI,CAAC,CAAC;IAAAyE,WAAA,GAAAD,KAAA,CAAhDH,KAAK;IAALA,KAAK,GAAAI,WAAA,cAAG93D,KAAK,GAAA83D,WAAA;IAAAC,WAAA,GAAAF,KAAA,CAAEjD,KAAK;IAALA,KAAK,GAAAmD,WAAA,cAAG/3D,KAAK,GAAA+3D,WAAA;EACnC,IAAI9mD,MAAM,IAAIkhB,IAAI,CAACnG,MAAM,CAACle,MAAM,EAAE;IAChCtI,QAAQ,CAAC+V,GAAG,EAAE8F,IAAI,CAAC;IACnBo2C,MAAM,CAACl8C,GAAG,EAAE;MAAC4W,IAAI,EAAJA,IAAI;MAAElhB,MAAM,EAANA,MAAM;MAAEymD,KAAK,EAALA,KAAK;MAAE9C,KAAK,EAALA,KAAK;MAAEvzC,IAAI,EAAJA,IAAI;MAAE5L,KAAK,EAALA,KAAK;MAAEmE,IAAI,EAAJA;IAAI,CAAC,CAAC;IAC5DhU,UAAU,CAAC2V,GAAG,CAAC;EACjB;AACF;AACA,IAAIy8C,aAAa,GAAG;EAClBjgD,EAAE,EAAE,QAAQ;EACZkgD,mBAAmB,WAAAA,oBAACxrD,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IACzC,IAAMmK,KAAK,GAAG,CAACrS,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,IAAI,EAAE,EAAE1P,MAAM;IAChD,IAAMynD,OAAO,GAAG,EAAE;IAClB,IAAI99C,IAAI,EAAEtX,CAAC,EAAEgyB,IAAI,EAAEkb,MAAM;IACzB,KAAKltC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;MAC1BsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC;MAC9BgyB,IAAI,GAAG1a,IAAI,CAAC+C,OAAO;MACnB6yB,MAAM,GAAG,IAAI;MACb,IAAIlb,IAAI,IAAIA,IAAI,CAACxd,OAAO,IAAIwd,IAAI,YAAYy6B,WAAW,EAAE;QACvDvf,MAAM,GAAG;UACPz5B,OAAO,EAAEnH,KAAK,CAACkiB,gBAAgB,CAACxuB,CAAC,CAAC;UAClCyW,KAAK,EAAEzW,CAAC;UACR+1B,IAAI,EAAEo9B,UAAU,CAACnhC,IAAI,EAAEhyB,CAAC,EAAE2e,KAAK,CAAC;UAChCrS,KAAK,EAALA,KAAK;UACLmN,IAAI,EAAEnC,IAAI,CAAC6B,UAAU,CAAC3E,OAAO,CAACsI,SAAS;UACvCxH,KAAK,EAAEgC,IAAI,CAACoB,MAAM;UAClBsZ,IAAI,EAAJA;QACF,CAAC;MACH;MACA1a,IAAI,CAAC0gD,OAAO,GAAG9qB,MAAM;MACrBkoB,OAAO,CAACpmD,IAAI,CAACk+B,MAAM,CAAC;IACtB;IACA,KAAKltC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;MAC1BktC,MAAM,GAAGkoB,OAAO,CAACp1D,CAAC,CAAC;MACnB,IAAI,CAACktC,MAAM,IAAIA,MAAM,CAACnX,IAAI,KAAK,KAAK,EAAE;QACpC;MACF;MACAmX,MAAM,CAACnX,IAAI,GAAGo/B,aAAa,CAACC,OAAO,EAAEp1D,CAAC,EAAEwU,OAAO,CAAC6gD,SAAS,CAAC;IAC5D;EACF,CAAC;EACD4C,UAAU,WAAAA,WAAC3rD,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAChC,IAAMvG,IAAI,GAAGuG,OAAO,CAAC0jD,QAAQ,KAAK,YAAY;IAC9C,IAAM5hD,QAAQ,GAAGhK,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;IACrD,IAAMvW,IAAI,GAAG5U,KAAK,CAAC6U,SAAS;IAC5B,KAAK,IAAInhB,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C,IAAMktC,MAAM,GAAG52B,QAAQ,CAACtW,CAAC,CAAC,CAACg4D,OAAO;MAClC,IAAI,CAAC9qB,MAAM,EAAE;QACX;MACF;MACAA,MAAM,CAAClb,IAAI,CAACqB,mBAAmB,CAACnS,IAAI,EAAEgsB,MAAM,CAACzzB,IAAI,CAAC;MAClD,IAAIxL,IAAI,EAAE;QACRupD,QAAQ,CAAClrD,KAAK,CAAC8O,GAAG,EAAE8xB,MAAM,EAAEhsB,IAAI,CAAC;MACnC;IACF;EACF,CAAC;EACDi3C,kBAAkB,WAAAA,mBAAC7rD,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IACxC,IAAIA,OAAO,CAAC0jD,QAAQ,KAAK,oBAAoB,EAAE;MAC7C;IACF;IACA,IAAM5hD,QAAQ,GAAGhK,KAAK,CAACmrB,4BAA4B,CAAC,CAAC;IACrD,KAAK,IAAIz3B,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C,IAAMktC,MAAM,GAAG52B,QAAQ,CAACtW,CAAC,CAAC,CAACg4D,OAAO;MAClC,IAAI9qB,MAAM,EAAE;QACVsqB,QAAQ,CAAClrD,KAAK,CAAC8O,GAAG,EAAE8xB,MAAM,EAAE5gC,KAAK,CAAC6U,SAAS,CAAC;MAC9C;IACF;EACF,CAAC;EACDi3C,iBAAiB,WAAAA,kBAAC9rD,KAAK,EAAE6X,IAAI,EAAE3P,OAAO,EAAE;IACtC,IAAM04B,MAAM,GAAG/oB,IAAI,CAAC7M,IAAI,CAAC0gD,OAAO;IAChC,IAAI,CAAC9qB,MAAM,IAAIA,MAAM,CAACnX,IAAI,KAAK,KAAK,IAAIvhB,OAAO,CAAC0jD,QAAQ,KAAK,mBAAmB,EAAE;MAChF;IACF;IACAV,QAAQ,CAAClrD,KAAK,CAAC8O,GAAG,EAAE8xB,MAAM,EAAE5gC,KAAK,CAAC6U,SAAS,CAAC;EAC9C,CAAC;EACDphB,QAAQ,EAAE;IACRs1D,SAAS,EAAE,IAAI;IACf6C,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,SAAS,EAAEnjB,QAAQ,EAAK;EAC1C,IAAAojB,oBAAA,GAAkDD,SAAS,CAAtDE,SAAS;IAATA,SAAS,GAAAD,oBAAA,cAAGpjB,QAAQ,GAAAojB,oBAAA;IAAAE,mBAAA,GAAyBH,SAAS,CAAhCI,QAAQ;IAARA,QAAQ,GAAAD,mBAAA,cAAGtjB,QAAQ,GAAAsjB,mBAAA;EAC9C,IAAIH,SAAS,CAACK,aAAa,EAAE;IAC3BH,SAAS,GAAGtrD,IAAI,CAACC,GAAG,CAACqrD,SAAS,EAAErjB,QAAQ,CAAC;IACzCujB,QAAQ,GAAGxrD,IAAI,CAACC,GAAG,CAACurD,QAAQ,EAAEvjB,QAAQ,CAAC;EACzC;EACA,OAAO;IACLujB,QAAQ,EAARA,QAAQ;IACRF,SAAS,EAATA,SAAS;IACTI,UAAU,EAAE1rD,IAAI,CAACuC,GAAG,CAAC0lC,QAAQ,EAAEqjB,SAAS;EAC1C,CAAC;AACH,CAAC;AACD,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIr5D,CAAC,EAAEU,CAAC;EAAA,OAAKV,CAAC,KAAK,IAAI,IAAIU,CAAC,KAAK,IAAI,IAAIV,CAAC,CAACuX,YAAY,KAAK7W,CAAC,CAAC6W,YAAY,IAAIvX,CAAC,CAACiX,KAAK,KAAKvW,CAAC,CAACuW,KAAK;AAAA;AAAC,IAC5GqiD,MAAM,0BAAAC,SAAA;EAAA5wC,SAAA,CAAA2wC,MAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA3wC,YAAA,CAAAywC,MAAA;EACV,SAAAA,OAAYllD,MAAM,EAAE;IAAA,IAAAqlD,OAAA;IAAAttD,eAAA,OAAAmtD,MAAA;IAClBG,OAAA,GAAAD,QAAA,CAAAzrD,IAAA;IACA0rD,OAAA,CAAKC,MAAM,GAAG,KAAK;IACnBD,OAAA,CAAKE,cAAc,GAAG,EAAE;IACxBF,OAAA,CAAKG,YAAY,GAAG,IAAI;IACxBH,OAAA,CAAKI,YAAY,GAAG,KAAK;IACzBJ,OAAA,CAAK3sD,KAAK,GAAGsH,MAAM,CAACtH,KAAK;IACzB2sD,OAAA,CAAKzkD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7BykD,OAAA,CAAK79C,GAAG,GAAGxH,MAAM,CAACwH,GAAG;IACrB69C,OAAA,CAAKK,WAAW,GAAGrtD,SAAS;IAC5BgtD,OAAA,CAAKM,WAAW,GAAGttD,SAAS;IAC5BgtD,OAAA,CAAKO,UAAU,GAAGvtD,SAAS;IAC3BgtD,OAAA,CAAK9pC,SAAS,GAAGljB,SAAS;IAC1BgtD,OAAA,CAAK/pC,QAAQ,GAAGjjB,SAAS;IACzBgtD,OAAA,CAAKnjD,GAAG,GAAG7J,SAAS;IACpBgtD,OAAA,CAAKjjD,MAAM,GAAG/J,SAAS;IACvBgtD,OAAA,CAAKhjD,IAAI,GAAGhK,SAAS;IACrBgtD,OAAA,CAAKljD,KAAK,GAAG9J,SAAS;IACtBgtD,OAAA,CAAKzvC,MAAM,GAAGvd,SAAS;IACvBgtD,OAAA,CAAKxvC,KAAK,GAAGxd,SAAS;IACtBgtD,OAAA,CAAK1uB,QAAQ,GAAGt+B,SAAS;IACzBgtD,OAAA,CAAK7gC,QAAQ,GAAGnsB,SAAS;IACzBgtD,OAAA,CAAKxoC,MAAM,GAAGxkB,SAAS;IACvBgtD,OAAA,CAAKr9B,QAAQ,GAAG3vB,SAAS;IAAC,OAAAgtD,OAAA;EAC5B;EAAC/sD,YAAA,CAAA4sD,MAAA;IAAA3sD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOkd,QAAQ,EAAEC,SAAS,EAAE+c,OAAO,EAAE;MACnC,IAAM5+B,EAAE,GAAG,IAAI;MACfA,EAAE,CAAC4hB,QAAQ,GAAGA,QAAQ;MACtB5hB,EAAE,CAAC6hB,SAAS,GAAGA,SAAS;MACxB7hB,EAAE,CAACi9B,QAAQ,GAAG2B,OAAO;MACrB5+B,EAAE,CAAC++B,aAAa,CAAC,CAAC;MAClB/+B,EAAE,CAACmsD,WAAW,CAAC,CAAC;MAChBnsD,EAAE,CAAC8/B,GAAG,CAAC,CAAC;IACV;EAAC;IAAAjhC,GAAA;IAAAC,KAAA,EACD,SAAAigC,cAAA,EAAgB;MACd,IAAM/+B,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrB5Z,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAAC4hB,QAAQ;QACtB5hB,EAAE,CAAC2I,IAAI,GAAG3I,EAAE,CAACi9B,QAAQ,CAACt0B,IAAI;QAC1B3I,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACmc,KAAK;MACrB,CAAC,MAAM;QACLnc,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAAC6hB,SAAS;QACxB7hB,EAAE,CAACwI,GAAG,GAAGxI,EAAE,CAACi9B,QAAQ,CAACz0B,GAAG;QACxBxI,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACkc,MAAM;MACvB;IACF;EAAC;IAAArd,GAAA;IAAAC,KAAA,EACD,SAAAqtD,YAAA,EAAc;MACZ,IAAMnsD,EAAE,GAAG,IAAI;MACf,IAAMgrD,SAAS,GAAGhrD,EAAE,CAACkH,OAAO,CAAC2K,MAAM,IAAI,CAAC,CAAC;MACzC,IAAIm6C,WAAW,GAAG70D,QAAQ,CAAC6zD,SAAS,CAAC1nC,cAAc,EAAE,CAACtjB,EAAE,CAAChB,KAAK,CAAC,EAAEgB,EAAE,CAAC,IAAI,EAAE;MAC1E,IAAIgrD,SAAS,CAACt+C,MAAM,EAAE;QACpBs/C,WAAW,GAAGA,WAAW,CAACt/C,MAAM,CAAC,UAAC9L,IAAI;UAAA,OAAKoqD,SAAS,CAACt+C,MAAM,CAAC9L,IAAI,EAAEZ,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAAC;QAAA,EAAC;MACnF;MACA,IAAIohD,SAAS,CAACvzC,IAAI,EAAE;QAClBu0C,WAAW,GAAGA,WAAW,CAACv0C,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC;UAAA,OAAKo4D,SAAS,CAACvzC,IAAI,CAACvlB,CAAC,EAAEU,CAAC,EAAEoN,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAAC;QAAA,EAAC;MAC/E;MACA,IAAI5J,EAAE,CAACkH,OAAO,CAACiB,OAAO,EAAE;QACtB6jD,WAAW,CAAC7jD,OAAO,CAAC,CAAC;MACvB;MACAnI,EAAE,CAACgsD,WAAW,GAAGA,WAAW;IAC9B;EAAC;IAAAntD,GAAA;IAAAC,KAAA,EACD,SAAAghC,IAAA,EAAM;MACJ,IAAM9/B,EAAE,GAAG,IAAI;MACf,IAAOkH,OAAO,GAASlH,EAAE,CAAlBkH,OAAO;QAAE4G,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MACnB,IAAI,CAAC5G,OAAO,CAAC2gB,OAAO,EAAE;QACpB7nB,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAACkc,MAAM,GAAG,CAAC;QACxB;MACF;MACA,IAAM8uC,SAAS,GAAG9jD,OAAO,CAAC2K,MAAM;MAChC,IAAMu6C,SAAS,GAAG/zD,MAAM,CAAC2yD,SAAS,CAAC7uB,IAAI,CAAC;MACxC,IAAM0L,QAAQ,GAAGukB,SAAS,CAACzkD,IAAI;MAC/B,IAAM65B,WAAW,GAAGxhC,EAAE,CAACqsD,mBAAmB,CAAC,CAAC;MAC5C,IAAAC,WAAA,GAA+BvB,UAAU,CAACC,SAAS,EAAEnjB,QAAQ,CAAC;QAAvDujB,QAAQ,GAAAkB,WAAA,CAARlB,QAAQ;QAAEE,UAAU,GAAAgB,WAAA,CAAVhB,UAAU;MAC3B,IAAInvC,KAAK,EAAED,MAAM;MACjBpO,GAAG,CAACquB,IAAI,GAAGiwB,SAAS,CAACnpB,MAAM;MAC3B,IAAIjjC,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrBuC,KAAK,GAAGnc,EAAE,CAAC4hB,QAAQ;QACnB1F,MAAM,GAAGlc,EAAE,CAACusD,QAAQ,CAAC/qB,WAAW,EAAEqG,QAAQ,EAAEujB,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;MACxE,CAAC,MAAM;QACLpvC,MAAM,GAAGlc,EAAE,CAAC6hB,SAAS;QACrB1F,KAAK,GAAGnc,EAAE,CAACwsD,QAAQ,CAAChrB,WAAW,EAAEqG,QAAQ,EAAEujB,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;MACvE;MACAtrD,EAAE,CAACmc,KAAK,GAAGvc,IAAI,CAACC,GAAG,CAACsc,KAAK,EAAEjV,OAAO,CAAC0a,QAAQ,IAAI5hB,EAAE,CAAC4hB,QAAQ,CAAC;MAC3D5hB,EAAE,CAACkc,MAAM,GAAGtc,IAAI,CAACC,GAAG,CAACqc,MAAM,EAAEhV,OAAO,CAAC2a,SAAS,IAAI7hB,EAAE,CAAC6hB,SAAS,CAAC;IACjE;EAAC;IAAAhjB,GAAA;IAAAC,KAAA,EACD,SAAAytD,SAAS/qB,WAAW,EAAEqG,QAAQ,EAAEujB,QAAQ,EAAEE,UAAU,EAAE;MACpD,IAAMtrD,EAAE,GAAG,IAAI;MACf,IAAO8N,GAAG,GAA4C9N,EAAE,CAAjD8N,GAAG;QAAE8T,QAAQ,GAAkC5hB,EAAE,CAA5C4hB,QAAQ;QAAqB+O,OAAO,GAAM3wB,EAAE,CAAlCkH,OAAO,CAAG2K,MAAM,CAAG8e,OAAO;MAChD,IAAM87B,QAAQ,GAAGzsD,EAAE,CAAC6rD,cAAc,GAAG,EAAE;MACvC,IAAMK,UAAU,GAAGlsD,EAAE,CAACksD,UAAU,GAAG,CAAC,CAAC,CAAC;MACtC,IAAM7vB,UAAU,GAAGivB,UAAU,GAAG36B,OAAO;MACvC,IAAI+7B,WAAW,GAAGlrB,WAAW;MAC7B1zB,GAAG,CAACu3B,SAAS,GAAG,MAAM;MACtBv3B,GAAG,CAAC03B,YAAY,GAAG,QAAQ;MAC3B,IAAImnB,GAAG,GAAG,CAAC,CAAC;MACZ,IAAInkD,GAAG,GAAG,CAAC6zB,UAAU;MACrBr8B,EAAE,CAACgsD,WAAW,CAACxsD,OAAO,CAAC,UAACykB,UAAU,EAAEvxB,CAAC,EAAK;QACxC,IAAMk6D,SAAS,GAAGxB,QAAQ,GAAIvjB,QAAQ,GAAG,CAAE,GAAG/5B,GAAG,CAAC++C,WAAW,CAAC5oC,UAAU,CAACP,IAAI,CAAC,CAACvH,KAAK;QACpF,IAAIzpB,CAAC,KAAK,CAAC,IAAIw5D,UAAU,CAACA,UAAU,CAAC7rD,MAAM,GAAG,CAAC,CAAC,GAAGusD,SAAS,GAAG,CAAC,GAAGj8B,OAAO,GAAG/O,QAAQ,EAAE;UACrF8qC,WAAW,IAAIrwB,UAAU;UACzB6vB,UAAU,CAACA,UAAU,CAAC7rD,MAAM,IAAI3N,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;UACnD8V,GAAG,IAAI6zB,UAAU;UACjBswB,GAAG,EAAE;QACP;QACAF,QAAQ,CAAC/5D,CAAC,CAAC,GAAG;UAACiW,IAAI,EAAE,CAAC;UAAEH,GAAG,EAAHA,GAAG;UAAEmkD,GAAG,EAAHA,GAAG;UAAExwC,KAAK,EAAEywC,SAAS;UAAE1wC,MAAM,EAAEovC;QAAU,CAAC;QACvEY,UAAU,CAACA,UAAU,CAAC7rD,MAAM,GAAG,CAAC,CAAC,IAAIusD,SAAS,GAAGj8B,OAAO;MAC1D,CAAC,CAAC;MACF,OAAO+7B,WAAW;IACpB;EAAC;IAAA7tD,GAAA;IAAAC,KAAA,EACD,SAAA0tD,SAAShrB,WAAW,EAAEqG,QAAQ,EAAEujB,QAAQ,EAAEE,UAAU,EAAE;MACpD,IAAMtrD,EAAE,GAAG,IAAI;MACf,IAAO8N,GAAG,GAA6C9N,EAAE,CAAlD8N,GAAG;QAAE+T,SAAS,GAAkC7hB,EAAE,CAA7C6hB,SAAS;QAAqB8O,OAAO,GAAM3wB,EAAE,CAAlCkH,OAAO,CAAG2K,MAAM,CAAG8e,OAAO;MACjD,IAAM87B,QAAQ,GAAGzsD,EAAE,CAAC6rD,cAAc,GAAG,EAAE;MACvC,IAAMI,WAAW,GAAGjsD,EAAE,CAACisD,WAAW,GAAG,EAAE;MACvC,IAAMa,WAAW,GAAGjrC,SAAS,GAAG2f,WAAW;MAC3C,IAAIurB,UAAU,GAAGp8B,OAAO;MACxB,IAAIq8B,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAItkD,IAAI,GAAG,CAAC;MACZ,IAAIukD,GAAG,GAAG,CAAC;MACXltD,EAAE,CAACgsD,WAAW,CAACxsD,OAAO,CAAC,UAACykB,UAAU,EAAEvxB,CAAC,EAAK;QACxC,IAAMk6D,SAAS,GAAGxB,QAAQ,GAAIvjB,QAAQ,GAAG,CAAE,GAAG/5B,GAAG,CAAC++C,WAAW,CAAC5oC,UAAU,CAACP,IAAI,CAAC,CAACvH,KAAK;QACpF,IAAIzpB,CAAC,GAAG,CAAC,IAAIu6D,gBAAgB,GAAG3B,UAAU,GAAG,CAAC,GAAG36B,OAAO,GAAGm8B,WAAW,EAAE;UACtEC,UAAU,IAAIC,eAAe,GAAGr8B,OAAO;UACvCs7B,WAAW,CAACvqD,IAAI,CAAC;YAACya,KAAK,EAAE6wC,eAAe;YAAE9wC,MAAM,EAAE+wC;UAAgB,CAAC,CAAC;UACpEtkD,IAAI,IAAIqkD,eAAe,GAAGr8B,OAAO;UACjCu8B,GAAG,EAAE;UACLF,eAAe,GAAGC,gBAAgB,GAAG,CAAC;QACxC;QACAR,QAAQ,CAAC/5D,CAAC,CAAC,GAAG;UAACiW,IAAI,EAAJA,IAAI;UAAEH,GAAG,EAAEykD,gBAAgB;UAAEC,GAAG,EAAHA,GAAG;UAAE/wC,KAAK,EAAEywC,SAAS;UAAE1wC,MAAM,EAAEovC;QAAU,CAAC;QACtF0B,eAAe,GAAGptD,IAAI,CAACuC,GAAG,CAAC6qD,eAAe,EAAEJ,SAAS,CAAC;QACtDK,gBAAgB,IAAI3B,UAAU,GAAG36B,OAAO;MAC1C,CAAC,CAAC;MACFo8B,UAAU,IAAIC,eAAe;MAC7Bf,WAAW,CAACvqD,IAAI,CAAC;QAACya,KAAK,EAAE6wC,eAAe;QAAE9wC,MAAM,EAAE+wC;MAAgB,CAAC,CAAC;MACpE,OAAOF,UAAU;IACnB;EAAC;IAAAluD,GAAA;IAAAC,KAAA,EACD,SAAAquD,eAAA,EAAiB;MACf,IAAMntD,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAACkH,OAAO,CAAC2gB,OAAO,EAAE;QACvB;MACF;MACA,IAAM2Z,WAAW,GAAGxhC,EAAE,CAACqsD,mBAAmB,CAAC,CAAC;MAC5C,IAAuBI,QAAQ,GAA8CzsD,EAAE,CAAxE6rD,cAAc;QAAAuB,YAAA,GAAwDptD,EAAE,CAA9CkH,OAAO;QAAG+xB,KAAK,GAAAm0B,YAAA,CAALn0B,KAAK;QAAWtI,OAAO,GAAAy8B,YAAA,CAAhBv7C,MAAM,CAAG8e,OAAO;QAAG08B,GAAG,GAAAD,YAAA,CAAHC,GAAG;MACxE,IAAMC,SAAS,GAAG7wD,aAAa,CAAC4wD,GAAG,EAAErtD,EAAE,CAAC2I,IAAI,EAAE3I,EAAE,CAACmc,KAAK,CAAC;MACvD,IAAI,IAAI,CAACvC,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI+yC,GAAG,GAAG,CAAC;QACX,IAAIhkD,IAAI,GAAGlQ,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO,EAAE3wB,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACksD,UAAU,CAACS,GAAG,CAAC,CAAC;QAAC,IAAAY,WAAA,GAAAhiD,0BAAA,CAC9DkhD,QAAQ;UAAAe,OAAA;QAAA;UAA7B,KAAAD,WAAA,CAAA75D,CAAA,MAAA85D,OAAA,GAAAD,WAAA,CAAA/4D,CAAA,IAAAkX,IAAA,GAA+B;YAAA,IAApB+hD,MAAM,GAAAD,OAAA,CAAA1uD,KAAA;YACf,IAAI6tD,GAAG,KAAKc,MAAM,CAACd,GAAG,EAAE;cACtBA,GAAG,GAAGc,MAAM,CAACd,GAAG;cAChBhkD,IAAI,GAAGlQ,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO,EAAE3wB,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACksD,UAAU,CAACS,GAAG,CAAC,CAAC;YAChF;YACAc,MAAM,CAACjlD,GAAG,IAAIxI,EAAE,CAACwI,GAAG,GAAGg5B,WAAW,GAAG7Q,OAAO;YAC5C88B,MAAM,CAAC9kD,IAAI,GAAG2kD,SAAS,CAACI,UAAU,CAACJ,SAAS,CAACh4D,CAAC,CAACqT,IAAI,CAAC,EAAE8kD,MAAM,CAACtxC,KAAK,CAAC;YACnExT,IAAI,IAAI8kD,MAAM,CAACtxC,KAAK,GAAGwU,OAAO;UAChC;QAAC,SAAAhlB,GAAA;UAAA4hD,WAAA,CAAAn7D,CAAA,CAAAuZ,GAAA;QAAA;UAAA4hD,WAAA,CAAAn6D,CAAA;QAAA;MACH,CAAC,MAAM;QACL,IAAI85D,GAAG,GAAG,CAAC;QACX,IAAI1kD,GAAG,GAAG/P,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAACwI,GAAG,GAAGg5B,WAAW,GAAG7Q,OAAO,EAAE3wB,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACisD,WAAW,CAACiB,GAAG,CAAC,CAAChxC,MAAM,CAAC;QAAC,IAAAyxC,WAAA,GAAApiD,0BAAA,CACnFkhD,QAAQ;UAAAmB,OAAA;QAAA;UAA7B,KAAAD,WAAA,CAAAj6D,CAAA,MAAAk6D,OAAA,GAAAD,WAAA,CAAAn5D,CAAA,IAAAkX,IAAA,GAA+B;YAAA,IAApB+hD,OAAM,GAAAG,OAAA,CAAA9uD,KAAA;YACf,IAAI2uD,OAAM,CAACP,GAAG,KAAKA,GAAG,EAAE;cACtBA,GAAG,GAAGO,OAAM,CAACP,GAAG;cAChB1kD,GAAG,GAAG/P,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAACwI,GAAG,GAAGg5B,WAAW,GAAG7Q,OAAO,EAAE3wB,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACisD,WAAW,CAACiB,GAAG,CAAC,CAAChxC,MAAM,CAAC;YACrG;YACAuxC,OAAM,CAACjlD,GAAG,GAAGA,GAAG;YAChBilD,OAAM,CAAC9kD,IAAI,IAAI3I,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO;YAChC88B,OAAM,CAAC9kD,IAAI,GAAG2kD,SAAS,CAACI,UAAU,CAACJ,SAAS,CAACh4D,CAAC,CAACm4D,OAAM,CAAC9kD,IAAI,CAAC,EAAE8kD,OAAM,CAACtxC,KAAK,CAAC;YAC1E3T,GAAG,IAAIilD,OAAM,CAACvxC,MAAM,GAAGyU,OAAO;UAChC;QAAC,SAAAhlB,GAAA;UAAAgiD,WAAA,CAAAv7D,CAAA,CAAAuZ,GAAA;QAAA;UAAAgiD,WAAA,CAAAv6D,CAAA;QAAA;MACH;IACF;EAAC;IAAAyL,GAAA;IAAAC,KAAA,EACD,SAAA8a,aAAA,EAAe;MACb,OAAO,IAAI,CAAC1S,OAAO,CAAC4jB,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC5jB,OAAO,CAAC4jB,QAAQ,KAAK,QAAQ;IAC9E;EAAC;IAAAjsB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACkH,OAAO,CAAC2gB,OAAO,EAAE;QACtB,IAAM/Z,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;QAClB/V,QAAQ,CAAC+V,GAAG,EAAE9N,EAAE,CAAC;QACjBA,EAAE,CAAC6tD,KAAK,CAAC,CAAC;QACV11D,UAAU,CAAC2V,GAAG,CAAC;MACjB;IACF;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAA+uD,MAAA,EAAQ;MACN,IAAM7tD,EAAE,GAAG,IAAI;MACf,IAAgBkI,IAAI,GAAkClI,EAAE,CAAjDkH,OAAO;QAAQ+kD,WAAW,GAAqBjsD,EAAE,CAAlCisD,WAAW;QAAEC,UAAU,GAASlsD,EAAE,CAArBksD,UAAU;QAAEp+C,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MAClD,IAAOmrB,KAAK,GAAuB/wB,IAAI,CAAhC+wB,KAAK;QAAU+xB,SAAS,GAAI9iD,IAAI,CAAzB2J,MAAM;MACpB,IAAMi8C,YAAY,GAAGr7D,QAAQ,CAACF,KAAK;MACnC,IAAM+6D,SAAS,GAAG7wD,aAAa,CAACyL,IAAI,CAACmlD,GAAG,EAAErtD,EAAE,CAAC2I,IAAI,EAAE3I,EAAE,CAACmc,KAAK,CAAC;MAC5D,IAAMiwC,SAAS,GAAG/zD,MAAM,CAAC2yD,SAAS,CAAC7uB,IAAI,CAAC;MACxC,IAAc4xB,SAAS,GAAa/C,SAAS,CAAtCz4D,KAAK;QAAao+B,OAAO,GAAIq6B,SAAS,CAApBr6B,OAAO;MAChC,IAAMkX,QAAQ,GAAGukB,SAAS,CAACzkD,IAAI;MAC/B,IAAMqmD,YAAY,GAAGnmB,QAAQ,GAAG,CAAC;MACjC,IAAIomB,MAAM;MACVjuD,EAAE,CAACsnC,SAAS,CAAC,CAAC;MACdx5B,GAAG,CAACu3B,SAAS,GAAGioB,SAAS,CAACjoB,SAAS,CAAC,MAAM,CAAC;MAC3Cv3B,GAAG,CAAC03B,YAAY,GAAG,QAAQ;MAC3B13B,GAAG,CAACiW,SAAS,GAAG,GAAG;MACnBjW,GAAG,CAACquB,IAAI,GAAGiwB,SAAS,CAACnpB,MAAM;MAC3B,IAAAirB,YAAA,GAA0CnD,UAAU,CAACC,SAAS,EAAEnjB,QAAQ,CAAC;QAAlEujB,QAAQ,GAAA8C,YAAA,CAAR9C,QAAQ;QAAEF,SAAS,GAAAgD,YAAA,CAAThD,SAAS;QAAEI,UAAU,GAAA4C,YAAA,CAAV5C,UAAU;MACtC,IAAM6C,aAAa,GAAG,SAAhBA,aAAaA,CAAY74D,CAAC,EAAEE,CAAC,EAAEyuB,UAAU,EAAE;QAC/C,IAAIzH,KAAK,CAAC4uC,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,IAAI5uC,KAAK,CAAC0uC,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;UACzE;QACF;QACAp9C,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACV,IAAMviB,SAAS,GAAGhxB,cAAc,CAACkxB,UAAU,CAACF,SAAS,EAAE,CAAC,CAAC;QACzDjW,GAAG,CAAC6V,SAAS,GAAG5wB,cAAc,CAACkxB,UAAU,CAACN,SAAS,EAAEmqC,YAAY,CAAC;QAClEhgD,GAAG,CAACwuC,OAAO,GAAGvpD,cAAc,CAACkxB,UAAU,CAACq4B,OAAO,EAAE,MAAM,CAAC;QACxDxuC,GAAG,CAACi5B,cAAc,GAAGh0C,cAAc,CAACkxB,UAAU,CAAC8iB,cAAc,EAAE,CAAC,CAAC;QACjEj5B,GAAG,CAACotC,QAAQ,GAAGnoD,cAAc,CAACkxB,UAAU,CAACi3B,QAAQ,EAAE,OAAO,CAAC;QAC3DptC,GAAG,CAACiW,SAAS,GAAGA,SAAS;QACzBjW,GAAG,CAAC+V,WAAW,GAAG9wB,cAAc,CAACkxB,UAAU,CAACJ,WAAW,EAAEiqC,YAAY,CAAC;QACtEhgD,GAAG,CAACg5B,WAAW,CAAC/zC,cAAc,CAACkxB,UAAU,CAACmqC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxD,IAAIpD,SAAS,CAACK,aAAa,EAAE;UAC3B,IAAMgD,WAAW,GAAG;YAClBvvC,MAAM,EAAEssC,QAAQ,GAAGxrD,IAAI,CAAC0uD,KAAK,GAAG,CAAC;YACjC/qC,UAAU,EAAEU,UAAU,CAACV,UAAU;YACjCpE,QAAQ,EAAE8E,UAAU,CAAC9E,QAAQ;YAC7B4D,WAAW,EAAEgB;UACf,CAAC;UACD,IAAMvB,OAAO,GAAG8qC,SAAS,CAACiB,KAAK,CAACj5D,CAAC,EAAE81D,QAAQ,GAAG,CAAC,CAAC;UAChD,IAAM3oC,OAAO,GAAGjtB,CAAC,GAAGw4D,YAAY;UAChCnyD,SAAS,CAACiS,GAAG,EAAEugD,WAAW,EAAE7rC,OAAO,EAAEC,OAAO,CAAC;QAC/C,CAAC,MAAM;UACL,IAAM+rC,OAAO,GAAGh5D,CAAC,GAAGoK,IAAI,CAACuC,GAAG,CAAC,CAAC0lC,QAAQ,GAAGqjB,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;UAC3D,IAAMuD,QAAQ,GAAGnB,SAAS,CAACI,UAAU,CAACp4D,CAAC,EAAE81D,QAAQ,CAAC;UAClD,IAAMvS,YAAY,GAAG18C,aAAa,CAAC8nB,UAAU,CAAC40B,YAAY,CAAC;UAC3D/qC,GAAG,CAACk5B,SAAS,CAAC,CAAC;UACf,IAAIzhC,MAAM,CAACyB,MAAM,CAAC6xC,YAAY,CAAC,CAAC7L,IAAI,CAAC,UAAAl6C,CAAC;YAAA,OAAIA,CAAC,KAAK,CAAC;UAAA,EAAC,EAAE;YAClDiJ,kBAAkB,CAAC+R,GAAG,EAAE;cACtBxY,CAAC,EAAEm5D,QAAQ;cACXj5D,CAAC,EAAEg5D,OAAO;cACVp5D,CAAC,EAAEg2D,QAAQ;cACX53D,CAAC,EAAE03D,SAAS;cACZpsC,MAAM,EAAE+5B;YACV,CAAC,CAAC;UACJ,CAAC,MAAM;YACL/qC,GAAG,CAACw0C,IAAI,CAACmM,QAAQ,EAAED,OAAO,EAAEpD,QAAQ,EAAEF,SAAS,CAAC;UAClD;UACAp9C,GAAG,CAAC2a,IAAI,CAAC,CAAC;UACV,IAAI1E,SAAS,KAAK,CAAC,EAAE;YACnBjW,GAAG,CAACq5B,MAAM,CAAC,CAAC;UACd;QACF;QACAr5B,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf,CAAC;MACD,IAAMkoB,QAAQ,GAAG,SAAXA,QAAQA,CAAYp5D,CAAC,EAAEE,CAAC,EAAEyuB,UAAU,EAAE;QAC1ChsB,UAAU,CAAC6V,GAAG,EAAEmW,UAAU,CAACP,IAAI,EAAEpuB,CAAC,EAAEE,CAAC,GAAI81D,UAAU,GAAG,CAAE,EAAEc,SAAS,EAAE;UACnEuC,aAAa,EAAE1qC,UAAU,CAACnQ,MAAM;UAChCuxB,SAAS,EAAEioB,SAAS,CAACjoB,SAAS,CAACphB,UAAU,CAACohB,SAAS;QACrD,CAAC,CAAC;MACJ,CAAC;MACD,IAAMzrB,YAAY,GAAG5Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;MACtC,IAAM4nB,WAAW,GAAG,IAAI,CAAC6qB,mBAAmB,CAAC,CAAC;MAC9C,IAAIzyC,YAAY,EAAE;QAChBq0C,MAAM,GAAG;UACP34D,CAAC,EAAEmD,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO,EAAE3wB,EAAE,CAACyI,KAAK,GAAGyjD,UAAU,CAAC,CAAC,CAAC,CAAC;UACrE12D,CAAC,EAAEwK,EAAE,CAACwI,GAAG,GAAGmoB,OAAO,GAAG6Q,WAAW;UACjC9c,IAAI,EAAE;QACR,CAAC;MACH,CAAC,MAAM;QACLupC,MAAM,GAAG;UACP34D,CAAC,EAAE0K,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO;UACpBn7B,CAAC,EAAEiD,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAACwI,GAAG,GAAGg5B,WAAW,GAAG7Q,OAAO,EAAE3wB,EAAE,CAAC0I,MAAM,GAAGujD,WAAW,CAAC,CAAC,CAAC,CAAC/vC,MAAM,CAAC;UAC3FwI,IAAI,EAAE;QACR,CAAC;MACH;MACA/nB,qBAAqB,CAACqD,EAAE,CAAC8N,GAAG,EAAE5F,IAAI,CAAC0mD,aAAa,CAAC;MACjD,IAAMvyB,UAAU,GAAGivB,UAAU,GAAG36B,OAAO;MACvC3wB,EAAE,CAACgsD,WAAW,CAACxsD,OAAO,CAAC,UAACykB,UAAU,EAAEvxB,CAAC,EAAK;QACxCob,GAAG,CAAC+V,WAAW,GAAGI,UAAU,CAAC8pC,SAAS,IAAIA,SAAS;QACnDjgD,GAAG,CAAC6V,SAAS,GAAGM,UAAU,CAAC8pC,SAAS,IAAIA,SAAS;QACjD,IAAMc,SAAS,GAAG/gD,GAAG,CAAC++C,WAAW,CAAC5oC,UAAU,CAACP,IAAI,CAAC,CAACvH,KAAK;QACxD,IAAMkpB,SAAS,GAAGioB,SAAS,CAACjoB,SAAS,CAACphB,UAAU,CAACohB,SAAS,KAAKphB,UAAU,CAACohB,SAAS,GAAG2lB,SAAS,CAAC3lB,SAAS,CAAC,CAAC;QAC3G,IAAMlpB,KAAK,GAAGivC,QAAQ,GAAG4C,YAAY,GAAGa,SAAS;QACjD,IAAIv5D,CAAC,GAAG24D,MAAM,CAAC34D,CAAC;QAChB,IAAIE,CAAC,GAAGy4D,MAAM,CAACz4D,CAAC;QAChB83D,SAAS,CAACwB,QAAQ,CAAC9uD,EAAE,CAACmc,KAAK,CAAC;QAC5B,IAAIvC,YAAY,EAAE;UAChB,IAAIlnB,CAAC,GAAG,CAAC,IAAI4C,CAAC,GAAG6mB,KAAK,GAAGwU,OAAO,GAAG3wB,EAAE,CAACyI,KAAK,EAAE;YAC3CjT,CAAC,GAAGy4D,MAAM,CAACz4D,CAAC,IAAI6mC,UAAU;YAC1B4xB,MAAM,CAACvpC,IAAI,EAAE;YACbpvB,CAAC,GAAG24D,MAAM,CAAC34D,CAAC,GAAGmD,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAAC2I,IAAI,GAAGgoB,OAAO,EAAE3wB,EAAE,CAACyI,KAAK,GAAGyjD,UAAU,CAAC+B,MAAM,CAACvpC,IAAI,CAAC,CAAC;UAC7F;QACF,CAAC,MAAM,IAAIhyB,CAAC,GAAG,CAAC,IAAI8C,CAAC,GAAG6mC,UAAU,GAAGr8B,EAAE,CAAC0I,MAAM,EAAE;UAC9CpT,CAAC,GAAG24D,MAAM,CAAC34D,CAAC,GAAGA,CAAC,GAAG22D,WAAW,CAACgC,MAAM,CAACvpC,IAAI,CAAC,CAACvI,KAAK,GAAGwU,OAAO;UAC3Ds9B,MAAM,CAACvpC,IAAI,EAAE;UACblvB,CAAC,GAAGy4D,MAAM,CAACz4D,CAAC,GAAGiD,cAAc,CAACwgC,KAAK,EAAEj5B,EAAE,CAACwI,GAAG,GAAGg5B,WAAW,GAAG7Q,OAAO,EAAE3wB,EAAE,CAAC0I,MAAM,GAAGujD,WAAW,CAACgC,MAAM,CAACvpC,IAAI,CAAC,CAACxI,MAAM,CAAC;QACnH;QACA,IAAM6yC,KAAK,GAAGzB,SAAS,CAACh4D,CAAC,CAACA,CAAC,CAAC;QAC5B64D,aAAa,CAACY,KAAK,EAAEv5D,CAAC,EAAEyuB,UAAU,CAAC;QACnC3uB,CAAC,GAAGuH,MAAM,CAACwoC,SAAS,EAAE/vC,CAAC,GAAG81D,QAAQ,GAAG4C,YAAY,EAAEp0C,YAAY,GAAGtkB,CAAC,GAAG6mB,KAAK,GAAGnc,EAAE,CAACyI,KAAK,EAAEP,IAAI,CAACmlD,GAAG,CAAC;QACjGqB,QAAQ,CAACpB,SAAS,CAACh4D,CAAC,CAACA,CAAC,CAAC,EAAEE,CAAC,EAAEyuB,UAAU,CAAC;QACvC,IAAIrK,YAAY,EAAE;UAChBq0C,MAAM,CAAC34D,CAAC,IAAI6mB,KAAK,GAAGwU,OAAO;QAC7B,CAAC,MAAM;UACLs9B,MAAM,CAACz4D,CAAC,IAAI6mC,UAAU;QACxB;MACF,CAAC,CAAC;MACFt/B,oBAAoB,CAACiD,EAAE,CAAC8N,GAAG,EAAE5F,IAAI,CAAC0mD,aAAa,CAAC;IAClD;EAAC;IAAA/vD,GAAA;IAAAC,KAAA,EACD,SAAAwoC,UAAA,EAAY;MACV,IAAMtnC,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMo6B,SAAS,GAAGp5B,IAAI,CAAC+W,KAAK;MAC5B,IAAM+vC,SAAS,GAAG32D,MAAM,CAACipC,SAAS,CAACnF,IAAI,CAAC;MACxC,IAAM8yB,YAAY,GAAGp5D,SAAS,CAACyrC,SAAS,CAAC3Q,OAAO,CAAC;MACjD,IAAI,CAAC2Q,SAAS,CAACzZ,OAAO,EAAE;QACtB;MACF;MACA,IAAMylC,SAAS,GAAG7wD,aAAa,CAACyL,IAAI,CAACmlD,GAAG,EAAErtD,EAAE,CAAC2I,IAAI,EAAE3I,EAAE,CAACmc,KAAK,CAAC;MAC5D,IAAMrO,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAMgd,QAAQ,GAAGwW,SAAS,CAACxW,QAAQ;MACnC,IAAMkjC,YAAY,GAAGgB,SAAS,CAACrnD,IAAI,GAAG,CAAC;MACvC,IAAMunD,0BAA0B,GAAGD,YAAY,CAACzmD,GAAG,GAAGwlD,YAAY;MAClE,IAAIx4D,CAAC;MACL,IAAImT,IAAI,GAAG3I,EAAE,CAAC2I,IAAI;MAClB,IAAIiZ,QAAQ,GAAG5hB,EAAE,CAACmc,KAAK;MACvB,IAAI,IAAI,CAACvC,YAAY,CAAC,CAAC,EAAE;QACvBgI,QAAQ,GAAGhiB,IAAI,CAACuC,GAAG,CAAAN,KAAA,CAARjC,IAAI,EAAAkC,kBAAA,CAAQ9B,EAAE,CAACksD,UAAU,EAAC;QACrC12D,CAAC,GAAGwK,EAAE,CAACwI,GAAG,GAAG0mD,0BAA0B;QACvCvmD,IAAI,GAAGlQ,cAAc,CAACyP,IAAI,CAAC+wB,KAAK,EAAEtwB,IAAI,EAAE3I,EAAE,CAACyI,KAAK,GAAGmZ,QAAQ,CAAC;MAC9D,CAAC,MAAM;QACL,IAAMC,SAAS,GAAG7hB,EAAE,CAACisD,WAAW,CAACjqD,MAAM,CAAC,UAACC,GAAG,EAAE0F,IAAI;UAAA,OAAK/H,IAAI,CAACuC,GAAG,CAACF,GAAG,EAAE0F,IAAI,CAACuU,MAAM,CAAC;QAAA,GAAE,CAAC,CAAC;QACrF1mB,CAAC,GAAG05D,0BAA0B,GAAGz2D,cAAc,CAACyP,IAAI,CAAC+wB,KAAK,EAAEj5B,EAAE,CAACwI,GAAG,EAAExI,EAAE,CAAC0I,MAAM,GAAGmZ,SAAS,GAAG3Z,IAAI,CAAC2J,MAAM,CAAC8e,OAAO,GAAG3wB,EAAE,CAACqsD,mBAAmB,CAAC,CAAC,CAAC;MAC7I;MACA,IAAM/2D,CAAC,GAAGmD,cAAc,CAACqyB,QAAQ,EAAEniB,IAAI,EAAEA,IAAI,GAAGiZ,QAAQ,CAAC;MACzD9T,GAAG,CAACu3B,SAAS,GAAGioB,SAAS,CAACjoB,SAAS,CAAC9sC,kBAAkB,CAACuyB,QAAQ,CAAC,CAAC;MACjEhd,GAAG,CAAC03B,YAAY,GAAG,QAAQ;MAC3B13B,GAAG,CAAC+V,WAAW,GAAGyd,SAAS,CAAC/uC,KAAK;MACjCub,GAAG,CAAC6V,SAAS,GAAG2d,SAAS,CAAC/uC,KAAK;MAC/Bub,GAAG,CAACquB,IAAI,GAAG6yB,SAAS,CAAC/rB,MAAM;MAC3BhrC,UAAU,CAAC6V,GAAG,EAAEwzB,SAAS,CAAC5d,IAAI,EAAEpuB,CAAC,EAAEE,CAAC,EAAEw5D,SAAS,CAAC;IAClD;EAAC;IAAAnwD,GAAA;IAAAC,KAAA,EACD,SAAAutD,oBAAA,EAAsB;MACpB,IAAM/qB,SAAS,GAAG,IAAI,CAACp6B,OAAO,CAAC+X,KAAK;MACpC,IAAM+vC,SAAS,GAAG32D,MAAM,CAACipC,SAAS,CAACnF,IAAI,CAAC;MACxC,IAAM8yB,YAAY,GAAGp5D,SAAS,CAACyrC,SAAS,CAAC3Q,OAAO,CAAC;MACjD,OAAO2Q,SAAS,CAACzZ,OAAO,GAAGmnC,SAAS,CAAC3yB,UAAU,GAAG4yB,YAAY,CAAC/yC,MAAM,GAAG,CAAC;IAC3E;EAAC;IAAArd,GAAA;IAAAC,KAAA,EACD,SAAAqwD,iBAAiB75D,CAAC,EAAEE,CAAC,EAAE;MACrB,IAAMwK,EAAE,GAAG,IAAI;MACf,IAAItN,CAAC,EAAE08D,MAAM,EAAEC,EAAE;MACjB,IAAI/5D,CAAC,IAAI0K,EAAE,CAAC2I,IAAI,IAAIrT,CAAC,IAAI0K,EAAE,CAACyI,KAAK,IAAIjT,CAAC,IAAIwK,EAAE,CAACwI,GAAG,IAAIhT,CAAC,IAAIwK,EAAE,CAAC0I,MAAM,EAAE;QAClE2mD,EAAE,GAAGrvD,EAAE,CAAC6rD,cAAc;QACtB,KAAKn5D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG28D,EAAE,CAAChvD,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC9B08D,MAAM,GAAGC,EAAE,CAAC38D,CAAC,CAAC;UACd,IAAI4C,CAAC,IAAI85D,MAAM,CAACzmD,IAAI,IAAIrT,CAAC,IAAI85D,MAAM,CAACzmD,IAAI,GAAGymD,MAAM,CAACjzC,KAAK,IAAI3mB,CAAC,IAAI45D,MAAM,CAAC5mD,GAAG,IAAIhT,CAAC,IAAI45D,MAAM,CAAC5mD,GAAG,GAAG4mD,MAAM,CAAClzC,MAAM,EAAE;YAC7G,OAAOlc,EAAE,CAACgsD,WAAW,CAACt5D,CAAC,CAAC;UAC1B;QACF;MACF;MACA,OAAO,IAAI;IACb;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAAwwD,YAAYl9D,CAAC,EAAE;MACb,IAAM4N,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAI,CAACqoD,UAAU,CAACn9D,CAAC,CAAC+M,IAAI,EAAE+I,IAAI,CAAC,EAAE;QAC7B;MACF;MACA,IAAMsnD,WAAW,GAAGxvD,EAAE,CAACmvD,gBAAgB,CAAC/8D,CAAC,CAACkD,CAAC,EAAElD,CAAC,CAACoD,CAAC,CAAC;MACjD,IAAIpD,CAAC,CAAC+M,IAAI,KAAK,WAAW,EAAE;QAC1B,IAAMs9C,QAAQ,GAAGz8C,EAAE,CAAC8rD,YAAY;QAChC,IAAM2D,QAAQ,GAAGlE,UAAU,CAAC9O,QAAQ,EAAE+S,WAAW,CAAC;QAClD,IAAI/S,QAAQ,IAAI,CAACgT,QAAQ,EAAE;UACzBt4D,QAAQ,CAAC+Q,IAAI,CAACwnD,OAAO,EAAE,CAACt9D,CAAC,EAAEqqD,QAAQ,EAAEz8C,EAAE,CAAC,EAAEA,EAAE,CAAC;QAC/C;QACAA,EAAE,CAAC8rD,YAAY,GAAG0D,WAAW;QAC7B,IAAIA,WAAW,IAAI,CAACC,QAAQ,EAAE;UAC5Bt4D,QAAQ,CAAC+Q,IAAI,CAACgwC,OAAO,EAAE,CAAC9lD,CAAC,EAAEo9D,WAAW,EAAExvD,EAAE,CAAC,EAAEA,EAAE,CAAC;QAClD;MACF,CAAC,MAAM,IAAIwvD,WAAW,EAAE;QACtBr4D,QAAQ,CAAC+Q,IAAI,CAAC8b,OAAO,EAAE,CAAC5xB,CAAC,EAAEo9D,WAAW,EAAExvD,EAAE,CAAC,EAAEA,EAAE,CAAC;MAClD;IACF;EAAC;EAAA,OAAAwrD,MAAA;AAAA,EAxXkBh1B,OAAO;AA0X5B,SAAS+4B,UAAUA,CAACpwD,IAAI,EAAE+I,IAAI,EAAE;EAC9B,IAAI/I,IAAI,KAAK,WAAW,KAAK+I,IAAI,CAACgwC,OAAO,IAAIhwC,IAAI,CAACwnD,OAAO,CAAC,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAIxnD,IAAI,CAAC8b,OAAO,KAAK7kB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,SAAS,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AACA,IAAIwwD,aAAa,GAAG;EAClBrlD,EAAE,EAAE,QAAQ;EACZslD,QAAQ,EAAEpE,MAAM;EAChB1rD,KAAK,WAAAA,MAACd,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAC3B,IAAMmc,MAAM,GAAGrkB,KAAK,CAACqkB,MAAM,GAAG,IAAImoC,MAAM,CAAC;MAAC19C,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;MAAE5G,OAAO,EAAPA,OAAO;MAAElI,KAAK,EAALA;IAAK,CAAC,CAAC;IAC1E0uB,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEqkB,MAAM,EAAEnc,OAAO,CAAC;IACzCwmB,OAAO,CAACoD,MAAM,CAAC9xB,KAAK,EAAEqkB,MAAM,CAAC;EAC/B,CAAC;EACDhhB,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACV0uB,OAAO,CAACsD,SAAS,CAAChyB,KAAK,EAAEA,KAAK,CAACqkB,MAAM,CAAC;IACtC,OAAOrkB,KAAK,CAACqkB,MAAM;EACrB,CAAC;EACDsb,YAAY,WAAAA,aAAC3/B,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAClC,IAAMmc,MAAM,GAAGrkB,KAAK,CAACqkB,MAAM;IAC3BqK,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEqkB,MAAM,EAAEnc,OAAO,CAAC;IACzCmc,MAAM,CAACnc,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACD84B,WAAW,WAAAA,YAAChhC,KAAK,EAAE;IACjB,IAAMqkB,MAAM,GAAGrkB,KAAK,CAACqkB,MAAM;IAC3BA,MAAM,CAAC8oC,WAAW,CAAC,CAAC;IACpB9oC,MAAM,CAAC8pC,cAAc,CAAC,CAAC;EACzB,CAAC;EACD0C,UAAU,WAAAA,WAAC7wD,KAAK,EAAE6X,IAAI,EAAE;IACtB,IAAI,CAACA,IAAI,CAAC2gC,MAAM,EAAE;MAChBx4C,KAAK,CAACqkB,MAAM,CAACisC,WAAW,CAACz4C,IAAI,CAACrV,KAAK,CAAC;IACtC;EACF,CAAC;EACD/O,QAAQ,EAAE;IACRo1B,OAAO,EAAE,IAAI;IACbiD,QAAQ,EAAE,KAAK;IACfmO,KAAK,EAAE,QAAQ;IACf3K,QAAQ,EAAE,IAAI;IACdnmB,OAAO,EAAE,KAAK;IACdgb,MAAM,EAAE,IAAI;IACZa,OAAO,WAAAA,QAAC5xB,CAAC,EAAE6xB,UAAU,EAAEZ,MAAM,EAAE;MAC7B,IAAMla,KAAK,GAAG8a,UAAU,CAACxa,YAAY;MACrC,IAAMqmD,EAAE,GAAGzsC,MAAM,CAACrkB,KAAK;MACvB,IAAI8wD,EAAE,CAAC5uC,gBAAgB,CAAC/X,KAAK,CAAC,EAAE;QAC9B2mD,EAAE,CAAC1pD,IAAI,CAAC+C,KAAK,CAAC;QACd8a,UAAU,CAACnQ,MAAM,GAAG,IAAI;MAC1B,CAAC,MAAM;QACLg8C,EAAE,CAAC7pD,IAAI,CAACkD,KAAK,CAAC;QACd8a,UAAU,CAACnQ,MAAM,GAAG,KAAK;MAC3B;IACF,CAAC;IACDokC,OAAO,EAAE,IAAI;IACbwX,OAAO,EAAE,IAAI;IACb79C,MAAM,EAAE;MACNtf,KAAK,EAAE,SAAAA,MAACub,GAAG;QAAA,OAAKA,GAAG,CAAC9O,KAAK,CAACkI,OAAO,CAAC3U,KAAK;MAAA;MACvC64D,QAAQ,EAAE,EAAE;MACZz6B,OAAO,EAAE,EAAE;MACXrN,cAAc,WAAAA,eAACtkB,KAAK,EAAE;QACpB,IAAM+Q,QAAQ,GAAG/Q,KAAK,CAAC4K,IAAI,CAACmG,QAAQ;QACpC,IAAAggD,qBAAA,GAAgE/wD,KAAK,CAACqkB,MAAM,CAACnc,OAAO,CAA7E2K,MAAM;UAAGw5C,aAAa,GAAA0E,qBAAA,CAAb1E,aAAa;UAAE9nC,UAAU,GAAAwsC,qBAAA,CAAVxsC,UAAU;UAAE8hB,SAAS,GAAA0qB,qBAAA,CAAT1qB,SAAS;UAAE9yC,KAAK,GAAAw9D,qBAAA,CAALx9D,KAAK;QAC3D,OAAOyM,KAAK,CAACiK,sBAAsB,CAAC,CAAC,CAACua,GAAG,CAAC,UAACxZ,IAAI,EAAK;UAClD,IAAMyZ,KAAK,GAAGzZ,IAAI,CAAC6B,UAAU,CAACkI,QAAQ,CAACs3C,aAAa,GAAG,CAAC,GAAG1sD,SAAS,CAAC;UACrE,IAAMokB,WAAW,GAAGltB,SAAS,CAAC4tB,KAAK,CAACV,WAAW,CAAC;UAChD,OAAO;YACLW,IAAI,EAAE3T,QAAQ,CAAC/F,IAAI,CAACb,KAAK,CAAC,CAACoK,KAAK;YAChCoQ,SAAS,EAAEF,KAAK,CAACG,eAAe;YAChCmqC,SAAS,EAAEx7D,KAAK;YAChBuhB,MAAM,EAAE,CAAC9J,IAAI,CAAC7D,OAAO;YACrBm2C,OAAO,EAAE74B,KAAK,CAAC84B,cAAc;YAC7B6R,QAAQ,EAAE3qC,KAAK,CAAC4U,UAAU;YAC1B0O,cAAc,EAAEtjB,KAAK,CAAC6U,gBAAgB;YACtC4iB,QAAQ,EAAEz3B,KAAK,CAAC+4B,eAAe;YAC/Bz4B,SAAS,EAAE,CAAChB,WAAW,CAAC5G,KAAK,GAAG4G,WAAW,CAAC7G,MAAM,IAAI,CAAC;YACvD2H,WAAW,EAAEJ,KAAK,CAACK,WAAW;YAC9BP,UAAU,EAAEA,UAAU,IAAIE,KAAK,CAACF,UAAU;YAC1CpE,QAAQ,EAAEsE,KAAK,CAACtE,QAAQ;YACxBkmB,SAAS,EAAEA,SAAS,IAAI5hB,KAAK,CAAC4hB,SAAS;YACvCwT,YAAY,EAAE,CAAC;YACfpvC,YAAY,EAAEO,IAAI,CAACb;UACrB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACD8V,KAAK,EAAE;MACL1sB,KAAK,EAAE,SAAAA,MAACub,GAAG;QAAA,OAAKA,GAAG,CAAC9O,KAAK,CAACkI,OAAO,CAAC3U,KAAK;MAAA;MACvCs1B,OAAO,EAAE,KAAK;MACdiD,QAAQ,EAAE,QAAQ;MAClBpH,IAAI,EAAE;IACR;EACF,CAAC;EACDzqB,WAAW,EAAE;IACX4M,WAAW,EAAE,SAAAA,YAACC,IAAI;MAAA,OAAK,CAACA,IAAI,CAACyzB,UAAU,CAAC,IAAI,CAAC;IAAA;IAC7C1nB,MAAM,EAAE;MACNhM,WAAW,EAAE,SAAAA,YAACC,IAAI;QAAA,OAAK,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAACgoB,QAAQ,CAAChoB,IAAI,CAAC;MAAA;IAC7E;EACF;AACF,CAAC;AAAC,IAEIkqD,KAAK,0BAAAC,SAAA;EAAAp1C,SAAA,CAAAm1C,KAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAn1C,YAAA,CAAAi1C,KAAA;EACT,SAAAA,MAAY1pD,MAAM,EAAE;IAAA,IAAA6pD,OAAA;IAAA9xD,eAAA,OAAA2xD,KAAA;IAClBG,OAAA,GAAAD,QAAA,CAAAjwD,IAAA;IACAkwD,OAAA,CAAKnxD,KAAK,GAAGsH,MAAM,CAACtH,KAAK;IACzBmxD,OAAA,CAAKjpD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7BipD,OAAA,CAAKriD,GAAG,GAAGxH,MAAM,CAACwH,GAAG;IACrBqiD,OAAA,CAAKC,QAAQ,GAAGzxD,SAAS;IACzBwxD,OAAA,CAAK3nD,GAAG,GAAG7J,SAAS;IACpBwxD,OAAA,CAAKznD,MAAM,GAAG/J,SAAS;IACvBwxD,OAAA,CAAKxnD,IAAI,GAAGhK,SAAS;IACrBwxD,OAAA,CAAK1nD,KAAK,GAAG9J,SAAS;IACtBwxD,OAAA,CAAKh0C,KAAK,GAAGxd,SAAS;IACtBwxD,OAAA,CAAKj0C,MAAM,GAAGvd,SAAS;IACvBwxD,OAAA,CAAKrlC,QAAQ,GAAGnsB,SAAS;IACzBwxD,OAAA,CAAKhtC,MAAM,GAAGxkB,SAAS;IACvBwxD,OAAA,CAAK7hC,QAAQ,GAAG3vB,SAAS;IAAC,OAAAwxD,OAAA;EAC5B;EAACvxD,YAAA,CAAAoxD,KAAA;IAAAnxD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOkd,QAAQ,EAAEC,SAAS,EAAE;MAC1B,IAAM7hB,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvBlH,EAAE,CAAC2I,IAAI,GAAG,CAAC;MACX3I,EAAE,CAACwI,GAAG,GAAG,CAAC;MACV,IAAI,CAACN,IAAI,CAAC2f,OAAO,EAAE;QACjB7nB,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAAC0I,MAAM,GAAG,CAAC;QAC/C;MACF;MACA1I,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAACyI,KAAK,GAAGmZ,QAAQ;MAC9B5hB,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAAC0I,MAAM,GAAGmZ,SAAS;MACjC,IAAMyjB,SAAS,GAAGzyC,OAAO,CAACqV,IAAI,CAACwb,IAAI,CAAC,GAAGxb,IAAI,CAACwb,IAAI,CAACrjB,MAAM,GAAG,CAAC;MAC3DL,EAAE,CAACowD,QAAQ,GAAGv6D,SAAS,CAACqS,IAAI,CAACyoB,OAAO,CAAC;MACrC,IAAM0/B,QAAQ,GAAG/qB,SAAS,GAAGjtC,MAAM,CAAC6P,IAAI,CAACi0B,IAAI,CAAC,CAACE,UAAU,GAAGr8B,EAAE,CAACowD,QAAQ,CAACl0C,MAAM;MAC9E,IAAIlc,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACrB5Z,EAAE,CAACkc,MAAM,GAAGm0C,QAAQ;MACtB,CAAC,MAAM;QACLrwD,EAAE,CAACmc,KAAK,GAAGk0C,QAAQ;MACrB;IACF;EAAC;IAAAxxD,GAAA;IAAAC,KAAA,EACD,SAAA8a,aAAA,EAAe;MACb,IAAMiT,GAAG,GAAG,IAAI,CAAC3lB,OAAO,CAAC4jB,QAAQ;MACjC,OAAO+B,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ;IAC1C;EAAC;IAAAhuB,GAAA;IAAAC,KAAA,EACD,SAAAwxD,UAAU1yC,MAAM,EAAE;MAChB,IAAOpV,GAAG,GAAkC,IAAI,CAAzCA,GAAG;QAAEG,IAAI,GAA4B,IAAI,CAApCA,IAAI;QAAED,MAAM,GAAoB,IAAI,CAA9BA,MAAM;QAAED,KAAK,GAAa,IAAI,CAAtBA,KAAK;QAAEvB,OAAO,GAAI,IAAI,CAAfA,OAAO;MACxC,IAAM+xB,KAAK,GAAG/xB,OAAO,CAAC+xB,KAAK;MAC3B,IAAI9Z,QAAQ,GAAG,CAAC;MAChB,IAAIyC,QAAQ,EAAE8a,MAAM,EAAEC,MAAM;MAC5B,IAAI,IAAI,CAAC/iB,YAAY,CAAC,CAAC,EAAE;QACvB8iB,MAAM,GAAGjkC,cAAc,CAACwgC,KAAK,EAAEtwB,IAAI,EAAEF,KAAK,CAAC;QAC3Ck0B,MAAM,GAAGn0B,GAAG,GAAGoV,MAAM;QACrBgE,QAAQ,GAAGnZ,KAAK,GAAGE,IAAI;MACzB,CAAC,MAAM;QACL,IAAIzB,OAAO,CAAC4jB,QAAQ,KAAK,MAAM,EAAE;UAC/B4R,MAAM,GAAG/zB,IAAI,GAAGiV,MAAM;UACtB+e,MAAM,GAAGlkC,cAAc,CAACwgC,KAAK,EAAEvwB,MAAM,EAAEF,GAAG,CAAC;UAC3C2W,QAAQ,GAAGpqB,EAAE,GAAG,CAAC,GAAG;QACtB,CAAC,MAAM;UACL2nC,MAAM,GAAGj0B,KAAK,GAAGmV,MAAM;UACvB+e,MAAM,GAAGlkC,cAAc,CAACwgC,KAAK,EAAEzwB,GAAG,EAAEE,MAAM,CAAC;UAC3CyW,QAAQ,GAAGpqB,EAAE,GAAG,GAAG;QACrB;QACA6sB,QAAQ,GAAGlZ,MAAM,GAAGF,GAAG;MACzB;MACA,OAAO;QAACk0B,MAAM,EAANA,MAAM;QAAEC,MAAM,EAANA,MAAM;QAAE/a,QAAQ,EAARA,QAAQ;QAAEzC,QAAQ,EAARA;MAAQ,CAAC;IAC7C;EAAC;IAAAtgB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAI,CAACgB,IAAI,CAAC2f,OAAO,EAAE;QACjB;MACF;MACA,IAAM0oC,QAAQ,GAAGl4D,MAAM,CAAC6P,IAAI,CAACi0B,IAAI,CAAC;MAClC,IAAME,UAAU,GAAGk0B,QAAQ,CAACl0B,UAAU;MACtC,IAAMze,MAAM,GAAGye,UAAU,GAAG,CAAC,GAAGr8B,EAAE,CAACowD,QAAQ,CAAC5nD,GAAG;MAC/C,IAAAgoD,aAAA,GAA6CxwD,EAAE,CAACswD,SAAS,CAAC1yC,MAAM,CAAC;QAA1D8e,MAAM,GAAA8zB,aAAA,CAAN9zB,MAAM;QAAEC,MAAM,GAAA6zB,aAAA,CAAN7zB,MAAM;QAAE/a,QAAQ,GAAA4uC,aAAA,CAAR5uC,QAAQ;QAAEzC,QAAQ,GAAAqxC,aAAA,CAARrxC,QAAQ;MACzClnB,UAAU,CAAC6V,GAAG,EAAE5F,IAAI,CAACwb,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE6sC,QAAQ,EAAE;QACzCh+D,KAAK,EAAE2V,IAAI,CAAC3V,KAAK;QACjBqvB,QAAQ,EAARA,QAAQ;QACRzC,QAAQ,EAARA,QAAQ;QACRkmB,SAAS,EAAE9sC,kBAAkB,CAAC2P,IAAI,CAAC+wB,KAAK,CAAC;QACzCuM,YAAY,EAAE,QAAQ;QACtBQ,WAAW,EAAE,CAACtJ,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAqzB,KAAA;AAAA,EAnFiBx5B,OAAO;AAqF3B,SAASi6B,WAAWA,CAACzxD,KAAK,EAAEsiC,SAAS,EAAE;EACrC,IAAMriB,KAAK,GAAG,IAAI+wC,KAAK,CAAC;IACtBliD,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;IACd5G,OAAO,EAAEo6B,SAAS;IAClBtiC,KAAK,EAALA;EACF,CAAC,CAAC;EACF0uB,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEigB,KAAK,EAAEqiB,SAAS,CAAC;EAC1C5T,OAAO,CAACoD,MAAM,CAAC9xB,KAAK,EAAEigB,KAAK,CAAC;EAC5BjgB,KAAK,CAAC0xD,UAAU,GAAGzxC,KAAK;AAC1B;AACA,IAAI0xC,YAAY,GAAG;EACjBrmD,EAAE,EAAE,OAAO;EACXslD,QAAQ,EAAEI,KAAK;EACflwD,KAAK,WAAAA,MAACd,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAC3BupD,WAAW,CAACzxD,KAAK,EAAEkI,OAAO,CAAC;EAC7B,CAAC;EACD7E,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACV,IAAM0xD,UAAU,GAAG1xD,KAAK,CAAC0xD,UAAU;IACnChjC,OAAO,CAACsD,SAAS,CAAChyB,KAAK,EAAE0xD,UAAU,CAAC;IACpC,OAAO1xD,KAAK,CAAC0xD,UAAU;EACzB,CAAC;EACD/xB,YAAY,WAAAA,aAAC3/B,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAClC,IAAM+X,KAAK,GAAGjgB,KAAK,CAAC0xD,UAAU;IAC9BhjC,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEigB,KAAK,EAAE/X,OAAO,CAAC;IACxC+X,KAAK,CAAC/X,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDzU,QAAQ,EAAE;IACRwmC,KAAK,EAAE,QAAQ;IACfpR,OAAO,EAAE,KAAK;IACdsU,IAAI,EAAE;MACJhZ,MAAM,EAAE;IACV,CAAC;IACDmL,QAAQ,EAAE,IAAI;IACdqC,OAAO,EAAE,EAAE;IACX7F,QAAQ,EAAE,KAAK;IACfpH,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE;EACV,CAAC;EACD4T,aAAa,EAAE;IACbxkC,KAAK,EAAE;EACT,CAAC;EACD0G,WAAW,EAAE;IACX4M,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,IAAM4d,GAAG,GAAG,IAAIotC,OAAO,CAAC,CAAC;AACzB,IAAIC,eAAe,GAAG;EACpBvmD,EAAE,EAAE,UAAU;EACdxK,KAAK,WAAAA,MAACd,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAC3B,IAAM+X,KAAK,GAAG,IAAI+wC,KAAK,CAAC;MACtBliD,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;MACd5G,OAAO,EAAPA,OAAO;MACPlI,KAAK,EAALA;IACF,CAAC,CAAC;IACF0uB,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEigB,KAAK,EAAE/X,OAAO,CAAC;IACxCwmB,OAAO,CAACoD,MAAM,CAAC9xB,KAAK,EAAEigB,KAAK,CAAC;IAC5BuE,GAAG,CAACliB,GAAG,CAACtC,KAAK,EAAEigB,KAAK,CAAC;EACvB,CAAC;EACD5c,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACV0uB,OAAO,CAACsD,SAAS,CAAChyB,KAAK,EAAEwkB,GAAG,CAACriB,GAAG,CAACnC,KAAK,CAAC,CAAC;IACxCwkB,GAAG,CAAChhB,MAAM,CAACxD,KAAK,CAAC;EACnB,CAAC;EACD2/B,YAAY,WAAAA,aAAC3/B,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAClC,IAAM+X,KAAK,GAAGuE,GAAG,CAACriB,GAAG,CAACnC,KAAK,CAAC;IAC5B0uB,OAAO,CAACjnB,SAAS,CAACzH,KAAK,EAAEigB,KAAK,EAAE/X,OAAO,CAAC;IACxC+X,KAAK,CAAC/X,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDzU,QAAQ,EAAE;IACRwmC,KAAK,EAAE,QAAQ;IACfpR,OAAO,EAAE,KAAK;IACdsU,IAAI,EAAE;MACJhZ,MAAM,EAAE;IACV,CAAC;IACDmL,QAAQ,EAAE,IAAI;IACdqC,OAAO,EAAE,CAAC;IACV7F,QAAQ,EAAE,KAAK;IACfpH,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE;EACV,CAAC;EACD4T,aAAa,EAAE;IACbxkC,KAAK,EAAE;EACT,CAAC;EACD0G,WAAW,EAAE;IACX4M,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,IAAMkrD,WAAW,GAAG;EAClBC,OAAO,WAAAA,QAACrwD,KAAK,EAAE;IACb,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAI3N,CAAC,EAAEuoC,GAAG;IACV,IAAI3lC,CAAC,GAAG,CAAC;IACT,IAAIE,CAAC,GAAG,CAAC;IACT,IAAI6b,KAAK,GAAG,CAAC;IACb,KAAK3e,CAAC,GAAG,CAAC,EAAEuoC,GAAG,GAAGv6B,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGuoC,GAAG,EAAE,EAAEvoC,CAAC,EAAE;MAC5C,IAAMi4B,EAAE,GAAGjqB,KAAK,CAAChO,CAAC,CAAC,CAACua,OAAO;MAC3B,IAAI0d,EAAE,IAAIA,EAAE,CAACiM,QAAQ,CAAC,CAAC,EAAE;QACvB,IAAM/J,GAAG,GAAGlC,EAAE,CAAC8L,eAAe,CAAC,CAAC;QAChCnhC,CAAC,IAAIu3B,GAAG,CAACv3B,CAAC;QACVE,CAAC,IAAIq3B,GAAG,CAACr3B,CAAC;QACV,EAAE6b,KAAK;MACT;IACF;IACA,OAAO;MACL/b,CAAC,EAAEA,CAAC,GAAG+b,KAAK;MACZ7b,CAAC,EAAEA,CAAC,GAAG6b;IACT,CAAC;EACH,CAAC;EACDob,OAAO,WAAAA,QAAC/rB,KAAK,EAAEswD,aAAa,EAAE;IAC5B,IAAI,CAACtwD,KAAK,CAACL,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAI/K,CAAC,GAAG07D,aAAa,CAAC17D,CAAC;IACvB,IAAIE,CAAC,GAAGw7D,aAAa,CAACx7D,CAAC;IACvB,IAAIy2B,WAAW,GAAGthB,MAAM,CAACE,iBAAiB;IAC1C,IAAInY,CAAC,EAAEuoC,GAAG,EAAEg2B,cAAc;IAC1B,KAAKv+D,CAAC,GAAG,CAAC,EAAEuoC,GAAG,GAAGv6B,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGuoC,GAAG,EAAE,EAAEvoC,CAAC,EAAE;MAC5C,IAAMi4B,EAAE,GAAGjqB,KAAK,CAAChO,CAAC,CAAC,CAACua,OAAO;MAC3B,IAAI0d,EAAE,IAAIA,EAAE,CAACiM,QAAQ,CAAC,CAAC,EAAE;QACvB,IAAM3a,MAAM,GAAG0O,EAAE,CAACuB,cAAc,CAAC,CAAC;QAClC,IAAM15B,CAAC,GAAG2K,qBAAqB,CAAC6zD,aAAa,EAAE/0C,MAAM,CAAC;QACtD,IAAIzpB,CAAC,GAAGy5B,WAAW,EAAE;UACnBA,WAAW,GAAGz5B,CAAC;UACfy+D,cAAc,GAAGtmC,EAAE;QACrB;MACF;IACF;IACA,IAAIsmC,cAAc,EAAE;MAClB,IAAMC,EAAE,GAAGD,cAAc,CAACx6B,eAAe,CAAC,CAAC;MAC3CnhC,CAAC,GAAG47D,EAAE,CAAC57D,CAAC;MACRE,CAAC,GAAG07D,EAAE,CAAC17D,CAAC;IACV;IACA,OAAO;MACLF,CAAC,EAADA,CAAC;MACDE,CAAC,EAADA;IACF,CAAC;EACH;AACF,CAAC;AACD,SAAS27D,YAAYA,CAACp3C,IAAI,EAAEq3C,MAAM,EAAE;EAClC,IAAIA,MAAM,EAAE;IACV,IAAIv+D,OAAO,CAACu+D,MAAM,CAAC,EAAE;MACnBtnD,KAAK,CAACsN,SAAS,CAAC1V,IAAI,CAACG,KAAK,CAACkY,IAAI,EAAEq3C,MAAM,CAAC;IAC1C,CAAC,MAAM;MACLr3C,IAAI,CAACrY,IAAI,CAAC0vD,MAAM,CAAC;IACnB;EACF;EACA,OAAOr3C,IAAI;AACb;AACA,SAASs3C,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYC,MAAM,KAAKD,GAAG,CAAC70C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChF,OAAO60C,GAAG,CAACxoB,KAAK,CAAC,IAAI,CAAC;EACxB;EACA,OAAOwoB,GAAG;AACZ;AACA,SAASE,iBAAiBA,CAACxyD,KAAK,EAAE4B,IAAI,EAAE;EACtC,IAAOqM,OAAO,GAAyBrM,IAAI,CAApCqM,OAAO;IAAExD,YAAY,GAAW7I,IAAI,CAA3B6I,YAAY;IAAEN,KAAK,GAAIvI,IAAI,CAAbuI,KAAK;EACnC,IAAM0C,UAAU,GAAG7M,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC,CAACoC,UAAU;EAChE,IAAA4lD,qBAAA,GAAuB5lD,UAAU,CAACyH,gBAAgB,CAACnK,KAAK,CAAC;IAAlDoK,KAAK,GAAAk+C,qBAAA,CAALl+C,KAAK;IAAEzU,KAAK,GAAA2yD,qBAAA,CAAL3yD,KAAK;EACnB,OAAO;IACLE,KAAK,EAALA,KAAK;IACLuU,KAAK,EAALA,KAAK;IACLzH,MAAM,EAAED,UAAU,CAAC0G,SAAS,CAACpJ,KAAK,CAAC;IACnCgE,GAAG,EAAEnO,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC,CAACG,IAAI,CAACT,KAAK,CAAC;IAClDkb,cAAc,EAAEvlB,KAAK;IACrBiO,OAAO,EAAElB,UAAU,CAACmD,UAAU,CAAC,CAAC;IAChC9B,SAAS,EAAE/D,KAAK;IAChBM,YAAY,EAAZA,YAAY;IACZwD,OAAO,EAAPA;EACF,CAAC;AACH;AACA,SAASykD,cAAcA,CAAC1yC,OAAO,EAAE9X,OAAO,EAAE;EACxC,IAAM4G,GAAG,GAAGkR,OAAO,CAACzY,MAAM,CAACuH,GAAG;EAC9B,IAAO6jD,IAAI,GAAmB3yC,OAAO,CAA9B2yC,IAAI;IAAEC,MAAM,GAAW5yC,OAAO,CAAxB4yC,MAAM;IAAE3yC,KAAK,GAAID,OAAO,CAAhBC,KAAK;EAC1B,IAAOmsC,QAAQ,GAAelkD,OAAO,CAA9BkkD,QAAQ;IAAEF,SAAS,GAAIhkD,OAAO,CAApBgkD,SAAS;EAC1B,IAAM2G,QAAQ,GAAGx5D,MAAM,CAAC6O,OAAO,CAAC2qD,QAAQ,CAAC;EACzC,IAAM7C,SAAS,GAAG32D,MAAM,CAAC6O,OAAO,CAAC8nD,SAAS,CAAC;EAC3C,IAAM8C,UAAU,GAAGz5D,MAAM,CAAC6O,OAAO,CAAC4qD,UAAU,CAAC;EAC7C,IAAMC,cAAc,GAAG9yC,KAAK,CAAC5e,MAAM;EACnC,IAAM2xD,eAAe,GAAGJ,MAAM,CAACvxD,MAAM;EACrC,IAAM4xD,iBAAiB,GAAGN,IAAI,CAACtxD,MAAM;EACrC,IAAMswB,OAAO,GAAG96B,SAAS,CAACqR,OAAO,CAACypB,OAAO,CAAC;EAC1C,IAAIzU,MAAM,GAAGyU,OAAO,CAACzU,MAAM;EAC3B,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI+1C,kBAAkB,GAAGP,IAAI,CAAC3vD,MAAM,CAAC,UAACqP,KAAK,EAAE8gD,QAAQ;IAAA,OAAK9gD,KAAK,GAAG8gD,QAAQ,CAACC,MAAM,CAAC/xD,MAAM,GAAG8xD,QAAQ,CAAC/1B,KAAK,CAAC/7B,MAAM,GAAG8xD,QAAQ,CAACE,KAAK,CAAChyD,MAAM;EAAA,GAAE,CAAC,CAAC;EAC5I6xD,kBAAkB,IAAIlzC,OAAO,CAACszC,UAAU,CAACjyD,MAAM,GAAG2e,OAAO,CAACuzC,SAAS,CAAClyD,MAAM;EAC1E,IAAI0xD,cAAc,EAAE;IAClB71C,MAAM,IAAI61C,cAAc,GAAG/C,SAAS,CAAC3yB,UAAU,GAC9C,CAAC01B,cAAc,GAAG,CAAC,IAAI7qD,OAAO,CAACsrD,YAAY,GAC3CtrD,OAAO,CAACurD,iBAAiB;EAC5B;EACA,IAAIP,kBAAkB,EAAE;IACtB,IAAMQ,cAAc,GAAGxrD,OAAO,CAACyrD,aAAa,GAAG/yD,IAAI,CAACuC,GAAG,CAAC+oD,SAAS,EAAE2G,QAAQ,CAACx1B,UAAU,CAAC,GAAGw1B,QAAQ,CAACx1B,UAAU;IAC7GngB,MAAM,IAAI+1C,iBAAiB,GAAGS,cAAc,GAC3C,CAACR,kBAAkB,GAAGD,iBAAiB,IAAIJ,QAAQ,CAACx1B,UAAU,GAC9D,CAAC61B,kBAAkB,GAAG,CAAC,IAAIhrD,OAAO,CAAC0rD,WAAW;EACjD;EACA,IAAIZ,eAAe,EAAE;IACnB91C,MAAM,IAAIhV,OAAO,CAAC2rD,eAAe,GAChCb,eAAe,GAAGF,UAAU,CAACz1B,UAAU,GACvC,CAAC21B,eAAe,GAAG,CAAC,IAAI9qD,OAAO,CAAC4rD,aAAa;EAChD;EACA,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAYtuC,IAAI,EAAE;IAClCvI,KAAK,GAAGvc,IAAI,CAACuC,GAAG,CAACga,KAAK,EAAErO,GAAG,CAAC++C,WAAW,CAACnoC,IAAI,CAAC,CAACvI,KAAK,GAAG42C,YAAY,CAAC;EACrE,CAAC;EACDjlD,GAAG,CAACw4B,IAAI,CAAC,CAAC;EACVx4B,GAAG,CAACquB,IAAI,GAAG6yB,SAAS,CAAC/rB,MAAM;EAC3BltC,IAAI,CAACipB,OAAO,CAACC,KAAK,EAAE+zC,YAAY,CAAC;EACjCllD,GAAG,CAACquB,IAAI,GAAG01B,QAAQ,CAAC5uB,MAAM;EAC1BltC,IAAI,CAACipB,OAAO,CAACszC,UAAU,CAACjoD,MAAM,CAAC2U,OAAO,CAACuzC,SAAS,CAAC,EAAES,YAAY,CAAC;EAChED,YAAY,GAAG7rD,OAAO,CAACyrD,aAAa,GAAIvH,QAAQ,GAAG,CAAC,GAAI,CAAC;EACzDr1D,IAAI,CAAC47D,IAAI,EAAE,UAACQ,QAAQ,EAAK;IACvBp8D,IAAI,CAACo8D,QAAQ,CAACC,MAAM,EAAEY,YAAY,CAAC;IACnCj9D,IAAI,CAACo8D,QAAQ,CAAC/1B,KAAK,EAAE42B,YAAY,CAAC;IAClCj9D,IAAI,CAACo8D,QAAQ,CAACE,KAAK,EAAEW,YAAY,CAAC;EACpC,CAAC,CAAC;EACFD,YAAY,GAAG,CAAC;EAChBjlD,GAAG,CAACquB,IAAI,GAAG21B,UAAU,CAAC7uB,MAAM;EAC5BltC,IAAI,CAACipB,OAAO,CAAC4yC,MAAM,EAAEoB,YAAY,CAAC;EAClCllD,GAAG,CAAC04B,OAAO,CAAC,CAAC;EACbrqB,KAAK,IAAIwU,OAAO,CAACxU,KAAK;EACtB,OAAO;IAACA,KAAK,EAALA,KAAK;IAAED,MAAM,EAANA;EAAM,CAAC;AACxB;AACA,SAAS+2C,eAAeA,CAACj0D,KAAK,EAAE2I,IAAI,EAAE;EACpC,IAAOnS,CAAC,GAAYmS,IAAI,CAAjBnS,CAAC;IAAE0mB,MAAM,GAAIvU,IAAI,CAAduU,MAAM;EAChB,IAAI1mB,CAAC,GAAG0mB,MAAM,GAAG,CAAC,EAAE;IAClB,OAAO,KAAK;EACd,CAAC,MAAM,IAAI1mB,CAAC,GAAIwJ,KAAK,CAACkd,MAAM,GAAGA,MAAM,GAAG,CAAE,EAAE;IAC1C,OAAO,QAAQ;EACjB;EACA,OAAO,QAAQ;AACjB;AACA,SAASg3C,mBAAmBA,CAACC,MAAM,EAAEn0D,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE;EACzD,IAAOrS,CAAC,GAAWqS,IAAI,CAAhBrS,CAAC;IAAE6mB,KAAK,GAAIxU,IAAI,CAAbwU,KAAK;EACf,IAAMi3C,KAAK,GAAGlsD,OAAO,CAACmsD,SAAS,GAAGnsD,OAAO,CAACosD,YAAY;EACtD,IAAIH,MAAM,KAAK,MAAM,IAAI79D,CAAC,GAAG6mB,KAAK,GAAGi3C,KAAK,GAAGp0D,KAAK,CAACmd,KAAK,EAAE;IACxD,OAAO,IAAI;EACb;EACA,IAAIg3C,MAAM,KAAK,OAAO,IAAI79D,CAAC,GAAG6mB,KAAK,GAAGi3C,KAAK,GAAG,CAAC,EAAE;IAC/C,OAAO,IAAI;EACb;AACF;AACA,SAASG,eAAeA,CAACv0D,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE6rD,MAAM,EAAE;EACrD,IAAOl+D,CAAC,GAAWqS,IAAI,CAAhBrS,CAAC;IAAE6mB,KAAK,GAAIxU,IAAI,CAAbwU,KAAK;EACf,IAAcs3C,UAAU,GAA8Bz0D,KAAK,CAApDmd,KAAK;IAAAu3C,gBAAA,GAA0C10D,KAAK,CAAjC6U,SAAS;IAAGlL,IAAI,GAAA+qD,gBAAA,CAAJ/qD,IAAI;IAAEF,KAAK,GAAAirD,gBAAA,CAALjrD,KAAK;EACjD,IAAI0qD,MAAM,GAAG,QAAQ;EACrB,IAAIK,MAAM,KAAK,QAAQ,EAAE;IACvBL,MAAM,GAAG79D,CAAC,IAAI,CAACqT,IAAI,GAAGF,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;EACrD,CAAC,MAAM,IAAInT,CAAC,IAAI6mB,KAAK,GAAG,CAAC,EAAE;IACzBg3C,MAAM,GAAG,MAAM;EACjB,CAAC,MAAM,IAAI79D,CAAC,IAAIm+D,UAAU,GAAGt3C,KAAK,GAAG,CAAC,EAAE;IACtCg3C,MAAM,GAAG,OAAO;EAClB;EACA,IAAID,mBAAmB,CAACC,MAAM,EAAEn0D,KAAK,EAAEkI,OAAO,EAAES,IAAI,CAAC,EAAE;IACrDwrD,MAAM,GAAG,QAAQ;EACnB;EACA,OAAOA,MAAM;AACf;AACA,SAASQ,kBAAkBA,CAAC30D,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE;EAChD,IAAM6rD,MAAM,GAAGtsD,OAAO,CAACssD,MAAM,IAAIP,eAAe,CAACj0D,KAAK,EAAE2I,IAAI,CAAC;EAC7D,OAAO;IACLwrD,MAAM,EAAEjsD,OAAO,CAACisD,MAAM,IAAII,eAAe,CAACv0D,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE6rD,MAAM,CAAC;IACvEA,MAAM,EAANA;EACF,CAAC;AACH;AACA,SAASI,MAAMA,CAACjsD,IAAI,EAAEwrD,MAAM,EAAE;EAC5B,IAAK79D,CAAC,GAAWqS,IAAI,CAAhBrS,CAAC;IAAE6mB,KAAK,GAAIxU,IAAI,CAAbwU,KAAK;EACb,IAAIg3C,MAAM,KAAK,OAAO,EAAE;IACtB79D,CAAC,IAAI6mB,KAAK;EACZ,CAAC,MAAM,IAAIg3C,MAAM,KAAK,QAAQ,EAAE;IAC9B79D,CAAC,IAAK6mB,KAAK,GAAG,CAAE;EAClB;EACA,OAAO7mB,CAAC;AACV;AACA,SAASu+D,MAAMA,CAAClsD,IAAI,EAAE6rD,MAAM,EAAEM,cAAc,EAAE;EAC5C,IAAKt+D,CAAC,GAAYmS,IAAI,CAAjBnS,CAAC;IAAE0mB,MAAM,GAAIvU,IAAI,CAAduU,MAAM;EACd,IAAIs3C,MAAM,KAAK,KAAK,EAAE;IACpBh+D,CAAC,IAAIs+D,cAAc;EACrB,CAAC,MAAM,IAAIN,MAAM,KAAK,QAAQ,EAAE;IAC9Bh+D,CAAC,IAAI0mB,MAAM,GAAG43C,cAAc;EAC9B,CAAC,MAAM;IACLt+D,CAAC,IAAK0mB,MAAM,GAAG,CAAE;EACnB;EACA,OAAO1mB,CAAC;AACV;AACA,SAASu+D,kBAAkBA,CAAC7sD,OAAO,EAAES,IAAI,EAAEqsD,SAAS,EAAEh1D,KAAK,EAAE;EAC3D,IAAOq0D,SAAS,GAAgCnsD,OAAO,CAAhDmsD,SAAS;IAAEC,YAAY,GAAkBpsD,OAAO,CAArCosD,YAAY;IAAEW,YAAY,GAAI/sD,OAAO,CAAvB+sD,YAAY;EAC5C,IAAOd,MAAM,GAAYa,SAAS,CAA3Bb,MAAM;IAAEK,MAAM,GAAIQ,SAAS,CAAnBR,MAAM;EACrB,IAAMM,cAAc,GAAGT,SAAS,GAAGC,YAAY;EAC/C,IAAMY,gBAAgB,GAAGD,YAAY,GAAGX,YAAY;EACpD,IAAIh+D,CAAC,GAAGs+D,MAAM,CAACjsD,IAAI,EAAEwrD,MAAM,CAAC;EAC5B,IAAM39D,CAAC,GAAGq+D,MAAM,CAAClsD,IAAI,EAAE6rD,MAAM,EAAEM,cAAc,CAAC;EAC9C,IAAIN,MAAM,KAAK,QAAQ,EAAE;IACvB,IAAIL,MAAM,KAAK,MAAM,EAAE;MACrB79D,CAAC,IAAIw+D,cAAc;IACrB,CAAC,MAAM,IAAIX,MAAM,KAAK,OAAO,EAAE;MAC7B79D,CAAC,IAAIw+D,cAAc;IACrB;EACF,CAAC,MAAM,IAAIX,MAAM,KAAK,MAAM,EAAE;IAC5B79D,CAAC,IAAI4+D,gBAAgB;EACvB,CAAC,MAAM,IAAIf,MAAM,KAAK,OAAO,EAAE;IAC7B79D,CAAC,IAAI4+D,gBAAgB;EACvB;EACA,OAAO;IACL5+D,CAAC,EAAEH,WAAW,CAACG,CAAC,EAAE,CAAC,EAAE0J,KAAK,CAACmd,KAAK,GAAGxU,IAAI,CAACwU,KAAK,CAAC;IAC9C3mB,CAAC,EAAEL,WAAW,CAACK,CAAC,EAAE,CAAC,EAAEwJ,KAAK,CAACkd,MAAM,GAAGvU,IAAI,CAACuU,MAAM;EACjD,CAAC;AACH;AACA,SAASi4C,WAAWA,CAACn1C,OAAO,EAAEia,KAAK,EAAE/xB,OAAO,EAAE;EAC5C,IAAMypB,OAAO,GAAG96B,SAAS,CAACqR,OAAO,CAACypB,OAAO,CAAC;EAC1C,OAAOsI,KAAK,KAAK,QAAQ,GACrBja,OAAO,CAAC1pB,CAAC,GAAG0pB,OAAO,CAAC7C,KAAK,GAAG,CAAC,GAC7B8c,KAAK,KAAK,OAAO,GACfja,OAAO,CAAC1pB,CAAC,GAAG0pB,OAAO,CAAC7C,KAAK,GAAGwU,OAAO,CAACloB,KAAK,GACzCuW,OAAO,CAAC1pB,CAAC,GAAGq7B,OAAO,CAAChoB,IAAI;AAChC;AACA,SAASyrD,uBAAuBA,CAACj9D,QAAQ,EAAE;EACzC,OAAOg6D,YAAY,CAAC,EAAE,EAAEE,aAAa,CAACl6D,QAAQ,CAAC,CAAC;AAClD;AACA,SAASk9D,oBAAoBA,CAACxnD,MAAM,EAAEmS,OAAO,EAAEs1C,YAAY,EAAE;EAC3D,OAAO/uD,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CmS,OAAO,EAAPA,OAAO;IACPs1C,YAAY,EAAZA,YAAY;IACZn1D,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASo1D,iBAAiBA,CAACn1D,SAAS,EAAE8U,OAAO,EAAE;EAC7C,IAAM0V,QAAQ,GAAG1V,OAAO,IAAIA,OAAO,CAACnH,OAAO,IAAImH,OAAO,CAACnH,OAAO,CAACiS,OAAO,IAAI9K,OAAO,CAACnH,OAAO,CAACiS,OAAO,CAAC5f,SAAS;EAC3G,OAAOwqB,QAAQ,GAAGxqB,SAAS,CAACwqB,QAAQ,CAACA,QAAQ,CAAC,GAAGxqB,SAAS;AAC5D;AAAC,IACKo1D,OAAO,0BAAAC,SAAA;EAAA55C,SAAA,CAAA25C,OAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA35C,YAAA,CAAAy5C,OAAA;EACX,SAAAA,QAAYluD,MAAM,EAAE;IAAA,IAAAquD,OAAA;IAAAt2D,eAAA,OAAAm2D,OAAA;IAClBG,OAAA,GAAAD,QAAA,CAAAz0D,IAAA;IACA00D,OAAA,CAAKC,OAAO,GAAG,CAAC;IAChBD,OAAA,CAAK9zD,OAAO,GAAG,EAAE;IACjB8zD,OAAA,CAAKpuD,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC3BouD,OAAA,CAAKE,cAAc,GAAGl2D,SAAS;IAC/Bg2D,OAAA,CAAKG,KAAK,GAAGn2D,SAAS;IACtBg2D,OAAA,CAAKI,iBAAiB,GAAGp2D,SAAS;IAClCg2D,OAAA,CAAKK,aAAa,GAAG,EAAE;IACvBL,OAAA,CAAKptD,WAAW,GAAG5I,SAAS;IAC5Bg2D,OAAA,CAAKlmD,QAAQ,GAAG9P,SAAS;IACzBg2D,OAAA,CAAKztD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7BytD,OAAA,CAAKM,UAAU,GAAGt2D,SAAS;IAC3Bg2D,OAAA,CAAK11C,KAAK,GAAGtgB,SAAS;IACtBg2D,OAAA,CAAKrC,UAAU,GAAG3zD,SAAS;IAC3Bg2D,OAAA,CAAKhD,IAAI,GAAGhzD,SAAS;IACrBg2D,OAAA,CAAKpC,SAAS,GAAG5zD,SAAS;IAC1Bg2D,OAAA,CAAK/C,MAAM,GAAGjzD,SAAS;IACvBg2D,OAAA,CAAKxB,MAAM,GAAGx0D,SAAS;IACvBg2D,OAAA,CAAKnB,MAAM,GAAG70D,SAAS;IACvBg2D,OAAA,CAAKr/D,CAAC,GAAGqJ,SAAS;IAClBg2D,OAAA,CAAKn/D,CAAC,GAAGmJ,SAAS;IAClBg2D,OAAA,CAAKz4C,MAAM,GAAGvd,SAAS;IACvBg2D,OAAA,CAAKx4C,KAAK,GAAGxd,SAAS;IACtBg2D,OAAA,CAAKO,MAAM,GAAGv2D,SAAS;IACvBg2D,OAAA,CAAKQ,MAAM,GAAGx2D,SAAS;IACvBg2D,OAAA,CAAKS,WAAW,GAAGz2D,SAAS;IAC5Bg2D,OAAA,CAAKU,gBAAgB,GAAG12D,SAAS;IACjCg2D,OAAA,CAAKW,eAAe,GAAG32D,SAAS;IAAC,OAAAg2D,OAAA;EACnC;EAAC/1D,YAAA,CAAA41D,OAAA;IAAA31D,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAWzH,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAAC6tD,iBAAiB,GAAGp2D,SAAS;MAClC,IAAI,CAAC8P,QAAQ,GAAG9P,SAAS;IAC3B;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAgW,mBAAA,EAAqB;MACnB,IAAM9U,EAAE,GAAG,IAAI;MACf,IAAM0N,MAAM,GAAG1N,EAAE,CAAC+0D,iBAAiB;MACnC,IAAIrnD,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAM1O,KAAK,GAAGgB,EAAE,CAACuG,MAAM;MACvB,IAAMW,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACk3B,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MACtD,IAAMhJ,IAAI,GAAGhB,OAAO,CAAC2yB,OAAO,IAAI76B,KAAK,CAACkI,OAAO,CAACzB,SAAS,IAAIyB,OAAO,CAAChB,UAAU;MAC7E,IAAMA,UAAU,GAAG,IAAIG,UAAU,CAACrG,EAAE,CAACuG,MAAM,EAAE2B,IAAI,CAAC;MAClD,IAAIA,IAAI,CAAC+M,UAAU,EAAE;QACnBjV,EAAE,CAAC+0D,iBAAiB,GAAGxvD,MAAM,CAACsP,MAAM,CAAC3O,UAAU,CAAC;MAClD;MACA,OAAOA,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAA,EAAa;MACX,IAAMlR,EAAE,GAAG,IAAI;MACf,OAAOA,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAG4lD,oBAAoB,CAACr0D,EAAE,CAACuG,MAAM,CAAC2K,UAAU,CAAC,CAAC,EAAElR,EAAE,EAAEA,EAAE,CAACg1D,aAAa,CAAC,CAAC;IACnF;EAAC;IAAAn2D,GAAA;IAAAC,KAAA,EACD,SAAAy2D,SAASrhD,OAAO,EAAEhN,OAAO,EAAE;MACzB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAMo2D,WAAW,GAAGp2D,SAAS,CAACo2D,WAAW,CAAC3zD,KAAK,CAAC7B,EAAE,EAAE,CAACkU,OAAO,CAAC,CAAC;MAC9D,IAAM+K,KAAK,GAAG7f,SAAS,CAAC6f,KAAK,CAACpd,KAAK,CAAC7B,EAAE,EAAE,CAACkU,OAAO,CAAC,CAAC;MAClD,IAAMuhD,UAAU,GAAGr2D,SAAS,CAACq2D,UAAU,CAAC5zD,KAAK,CAAC7B,EAAE,EAAE,CAACkU,OAAO,CAAC,CAAC;MAC5D,IAAIkoB,KAAK,GAAG,EAAE;MACdA,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAACmE,WAAW,CAAC,CAAC;MACvDp5B,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAACpyC,KAAK,CAAC,CAAC;MACjDmd,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAACoE,UAAU,CAAC,CAAC;MACtD,OAAOr5B,KAAK;IACd;EAAC;IAAAv9B,GAAA;IAAAC,KAAA,EACD,SAAA42D,cAAcpB,YAAY,EAAEptD,OAAO,EAAE;MACnC,OAAOktD,uBAAuB,CAACltD,OAAO,CAAC9H,SAAS,CAACkzD,UAAU,CAACzwD,KAAK,CAAC,IAAI,EAAE,CAACyyD,YAAY,CAAC,CAAC,CAAC;IAC1F;EAAC;IAAAz1D,GAAA;IAAAC,KAAA,EACD,SAAA62D,QAAQrB,YAAY,EAAEptD,OAAO,EAAE;MAC7B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAMw2D,SAAS,GAAG,EAAE;MACpB7/D,IAAI,CAACu+D,YAAY,EAAE,UAACpgD,OAAO,EAAK;QAC9B,IAAMi+C,QAAQ,GAAG;UACfC,MAAM,EAAE,EAAE;UACVh2B,KAAK,EAAE,EAAE;UACTi2B,KAAK,EAAE;QACT,CAAC;QACD,IAAMwD,MAAM,GAAGtB,iBAAiB,CAACn1D,SAAS,EAAE8U,OAAO,CAAC;QACpDi9C,YAAY,CAACgB,QAAQ,CAACC,MAAM,EAAEf,aAAa,CAACwE,MAAM,CAACC,WAAW,CAAC71D,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC,CAAC;QAClFi9C,YAAY,CAACgB,QAAQ,CAAC/1B,KAAK,EAAEy5B,MAAM,CAACtiD,KAAK,CAACtT,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC;QAC5Di9C,YAAY,CAACgB,QAAQ,CAACE,KAAK,EAAEhB,aAAa,CAACwE,MAAM,CAACE,UAAU,CAAC91D,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC,CAAC;QAChF0hD,SAAS,CAACl0D,IAAI,CAACywD,QAAQ,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOyD,SAAS;IAClB;EAAC;IAAA/2D,GAAA;IAAAC,KAAA,EACD,SAAAk3D,aAAa1B,YAAY,EAAEptD,OAAO,EAAE;MAClC,OAAOktD,uBAAuB,CAACltD,OAAO,CAAC9H,SAAS,CAACmzD,SAAS,CAAC1wD,KAAK,CAAC,IAAI,EAAE,CAACyyD,YAAY,CAAC,CAAC,CAAC;IACzF;EAAC;IAAAz1D,GAAA;IAAAC,KAAA,EACD,SAAAm3D,UAAU3B,YAAY,EAAEptD,OAAO,EAAE;MAC/B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAM82D,YAAY,GAAG92D,SAAS,CAAC82D,YAAY,CAACr0D,KAAK,CAAC7B,EAAE,EAAE,CAACs0D,YAAY,CAAC,CAAC;MACrE,IAAM1C,MAAM,GAAGxyD,SAAS,CAACwyD,MAAM,CAAC/vD,KAAK,CAAC7B,EAAE,EAAE,CAACs0D,YAAY,CAAC,CAAC;MACzD,IAAM6B,WAAW,GAAG/2D,SAAS,CAAC+2D,WAAW,CAACt0D,KAAK,CAAC7B,EAAE,EAAE,CAACs0D,YAAY,CAAC,CAAC;MACnE,IAAIl4B,KAAK,GAAG,EAAE;MACdA,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAAC6E,YAAY,CAAC,CAAC;MACxD95B,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAACO,MAAM,CAAC,CAAC;MAClDx1B,KAAK,GAAG+0B,YAAY,CAAC/0B,KAAK,EAAEi1B,aAAa,CAAC8E,WAAW,CAAC,CAAC;MACvD,OAAO/5B,KAAK;IACd;EAAC;IAAAv9B,GAAA;IAAAC,KAAA,EACD,SAAAs3D,aAAalvD,OAAO,EAAE;MACpB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMyE,MAAM,GAAGzE,EAAE,CAACa,OAAO;MACzB,IAAM+I,IAAI,GAAG5J,EAAE,CAACuG,MAAM,CAACqD,IAAI;MAC3B,IAAMwrD,WAAW,GAAG,EAAE;MACtB,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAMC,eAAe,GAAG,EAAE;MAC1B,IAAIhB,YAAY,GAAG,EAAE;MACrB,IAAI5hE,CAAC,EAAEuoC,GAAG;MACV,KAAKvoC,CAAC,GAAG,CAAC,EAAEuoC,GAAG,GAAGx2B,MAAM,CAACpE,MAAM,EAAE3N,CAAC,GAAGuoC,GAAG,EAAE,EAAEvoC,CAAC,EAAE;QAC7C4hE,YAAY,CAAC5yD,IAAI,CAAC8vD,iBAAiB,CAACxxD,EAAE,CAACuG,MAAM,EAAE9B,MAAM,CAAC/R,CAAC,CAAC,CAAC,CAAC;MAC5D;MACA,IAAIwU,OAAO,CAACwF,MAAM,EAAE;QAClB4nD,YAAY,GAAGA,YAAY,CAAC5nD,MAAM,CAAC,UAACO,OAAO,EAAE9D,KAAK,EAAEyjB,KAAK;UAAA,OAAK1lB,OAAO,CAACwF,MAAM,CAACO,OAAO,EAAE9D,KAAK,EAAEyjB,KAAK,EAAEhjB,IAAI,CAAC;QAAA,EAAC;MAC5G;MACA,IAAI1C,OAAO,CAACmvD,QAAQ,EAAE;QACpB/B,YAAY,GAAGA,YAAY,CAAC78C,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC;UAAA,OAAKsU,OAAO,CAACmvD,QAAQ,CAACnkE,CAAC,EAAEU,CAAC,EAAEgX,IAAI,CAAC;QAAA,EAAC;MAC1E;MACA7T,IAAI,CAACu+D,YAAY,EAAE,UAACpgD,OAAO,EAAK;QAC9B,IAAM2hD,MAAM,GAAGtB,iBAAiB,CAACrtD,OAAO,CAAC9H,SAAS,EAAE8U,OAAO,CAAC;QAC5DkhD,WAAW,CAAC1zD,IAAI,CAACm0D,MAAM,CAACS,UAAU,CAACr2D,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC;QACrDmhD,gBAAgB,CAAC3zD,IAAI,CAACm0D,MAAM,CAACU,eAAe,CAACt2D,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC;QAC/DohD,eAAe,CAAC5zD,IAAI,CAACm0D,MAAM,CAACW,cAAc,CAACv2D,IAAI,CAACD,EAAE,EAAEkU,OAAO,CAAC,CAAC;MAC/D,CAAC,CAAC;MACFlU,EAAE,CAACo1D,WAAW,GAAGA,WAAW;MAC5Bp1D,EAAE,CAACq1D,gBAAgB,GAAGA,gBAAgB;MACtCr1D,EAAE,CAACs1D,eAAe,GAAGA,eAAe;MACpCt1D,EAAE,CAACi1D,UAAU,GAAGX,YAAY;MAC5B,OAAOA,YAAY;IACrB;EAAC;IAAAz1D,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOgiB,OAAO,EAAE8wB,MAAM,EAAE;MACtB,IAAMx3C,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACk3B,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MACtD,IAAMzM,MAAM,GAAGzE,EAAE,CAACa,OAAO;MACzB,IAAIkF,UAAU;MACd,IAAIuuD,YAAY,GAAG,EAAE;MACrB,IAAI,CAAC7vD,MAAM,CAACpE,MAAM,EAAE;QAClB,IAAIL,EAAE,CAAC40D,OAAO,KAAK,CAAC,EAAE;UACpB7uD,UAAU,GAAG;YACX6uD,OAAO,EAAE;UACX,CAAC;QACH;MACF,CAAC,MAAM;QACL,IAAM9pC,QAAQ,GAAGgmC,WAAW,CAAC5pD,OAAO,CAAC4jB,QAAQ,CAAC,CAAC7qB,IAAI,CAACD,EAAE,EAAEyE,MAAM,EAAEzE,EAAE,CAAC60D,cAAc,CAAC;QAClFP,YAAY,GAAGt0D,EAAE,CAACo2D,YAAY,CAAClvD,OAAO,CAAC;QACvClH,EAAE,CAACif,KAAK,GAAGjf,EAAE,CAACu1D,QAAQ,CAACjB,YAAY,EAAEptD,OAAO,CAAC;QAC7ClH,EAAE,CAACsyD,UAAU,GAAGtyD,EAAE,CAAC01D,aAAa,CAACpB,YAAY,EAAEptD,OAAO,CAAC;QACvDlH,EAAE,CAAC2xD,IAAI,GAAG3xD,EAAE,CAAC21D,OAAO,CAACrB,YAAY,EAAEptD,OAAO,CAAC;QAC3ClH,EAAE,CAACuyD,SAAS,GAAGvyD,EAAE,CAACg2D,YAAY,CAAC1B,YAAY,EAAEptD,OAAO,CAAC;QACrDlH,EAAE,CAAC4xD,MAAM,GAAG5xD,EAAE,CAACi2D,SAAS,CAAC3B,YAAY,EAAEptD,OAAO,CAAC;QAC/C,IAAMS,IAAI,GAAG3H,EAAE,CAAC80D,KAAK,GAAGpD,cAAc,CAAC1xD,EAAE,EAAEkH,OAAO,CAAC;QACnD,IAAMuvD,eAAe,GAAGlxD,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEkjB,QAAQ,EAAEnjB,IAAI,CAAC;QACzD,IAAMqsD,SAAS,GAAGL,kBAAkB,CAAC3zD,EAAE,CAACuG,MAAM,EAAEW,OAAO,EAAEuvD,eAAe,CAAC;QACzE,IAAMC,eAAe,GAAG3C,kBAAkB,CAAC7sD,OAAO,EAAEuvD,eAAe,EAAEzC,SAAS,EAAEh0D,EAAE,CAACuG,MAAM,CAAC;QAC1FvG,EAAE,CAACmzD,MAAM,GAAGa,SAAS,CAACb,MAAM;QAC5BnzD,EAAE,CAACwzD,MAAM,GAAGQ,SAAS,CAACR,MAAM;QAC5BztD,UAAU,GAAG;UACX6uD,OAAO,EAAE,CAAC;UACVt/D,CAAC,EAAEohE,eAAe,CAACphE,CAAC;UACpBE,CAAC,EAAEkhE,eAAe,CAAClhE,CAAC;UACpB2mB,KAAK,EAAExU,IAAI,CAACwU,KAAK;UACjBD,MAAM,EAAEvU,IAAI,CAACuU,MAAM;UACnBg5C,MAAM,EAAEpqC,QAAQ,CAACx1B,CAAC;UAClB6/D,MAAM,EAAErqC,QAAQ,CAACt1B;QACnB,CAAC;MACH;MACAwK,EAAE,CAACg1D,aAAa,GAAGV,YAAY;MAC/Bt0D,EAAE,CAACyO,QAAQ,GAAG9P,SAAS;MACvB,IAAIoH,UAAU,EAAE;QACd/F,EAAE,CAAC8U,kBAAkB,CAAC,CAAC,CAACpQ,MAAM,CAAC1E,EAAE,EAAE+F,UAAU,CAAC;MAChD;MACA,IAAI2gB,OAAO,IAAIxf,OAAO,CAACyvD,QAAQ,EAAE;QAC/BzvD,OAAO,CAACyvD,QAAQ,CAAC12D,IAAI,CAACD,EAAE,EAAE;UAAChB,KAAK,EAAEgB,EAAE,CAACuG,MAAM;UAAEyY,OAAO,EAAEhf,EAAE;UAAEw3C,MAAM,EAANA;QAAM,CAAC,CAAC;MACpE;IACF;EAAC;IAAA34C,GAAA;IAAAC,KAAA,EACD,SAAA83D,UAAUC,YAAY,EAAE/oD,GAAG,EAAEnG,IAAI,EAAET,OAAO,EAAE;MAC1C,IAAM4vD,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAElvD,IAAI,EAAET,OAAO,CAAC;MACxE4G,GAAG,CAACo5B,MAAM,CAAC4vB,aAAa,CAACtyB,EAAE,EAAEsyB,aAAa,CAACryB,EAAE,CAAC;MAC9C32B,GAAG,CAACo5B,MAAM,CAAC4vB,aAAa,CAACpyB,EAAE,EAAEoyB,aAAa,CAACnyB,EAAE,CAAC;MAC9C72B,GAAG,CAACo5B,MAAM,CAAC4vB,aAAa,CAACE,EAAE,EAAEF,aAAa,CAACG,EAAE,CAAC;IAChD;EAAC;IAAAp4D,GAAA;IAAAC,KAAA,EACD,SAAAi4D,iBAAiBF,YAAY,EAAElvD,IAAI,EAAET,OAAO,EAAE;MAC5C,IAAOisD,MAAM,GAAY,IAAI,CAAtBA,MAAM;QAAEK,MAAM,GAAI,IAAI,CAAdA,MAAM;MACrB,IAAOS,YAAY,GAAe/sD,OAAO,CAAlC+sD,YAAY;QAAEZ,SAAS,GAAInsD,OAAO,CAApBmsD,SAAS;MAC9B,IAAU6D,GAAG,GAAYL,YAAY,CAA9BvhE,CAAC;QAAU6hE,GAAG,GAAIN,YAAY,CAAtBrhE,CAAC;MAChB,IAAO2mB,KAAK,GAAYxU,IAAI,CAArBwU,KAAK;QAAED,MAAM,GAAIvU,IAAI,CAAduU,MAAM;MACpB,IAAIsoB,EAAE,EAAEE,EAAE,EAAEsyB,EAAE,EAAEvyB,EAAE,EAAEE,EAAE,EAAEsyB,EAAE;MAC1B,IAAIzD,MAAM,KAAK,QAAQ,EAAE;QACvB7uB,EAAE,GAAGwyB,GAAG,GAAIj7C,MAAM,GAAG,CAAE;QACvB,IAAIi3C,MAAM,KAAK,MAAM,EAAE;UACrB3uB,EAAE,GAAG0yB,GAAG;UACRxyB,EAAE,GAAGF,EAAE,GAAG6uB,SAAS;UACnB5uB,EAAE,GAAGE,EAAE,GAAG0uB,SAAS;UACnB4D,EAAE,GAAGtyB,EAAE,GAAG0uB,SAAS;QACrB,CAAC,MAAM;UACL7uB,EAAE,GAAG0yB,GAAG,GAAG/6C,KAAK;UAChBuoB,EAAE,GAAGF,EAAE,GAAG6uB,SAAS;UACnB5uB,EAAE,GAAGE,EAAE,GAAG0uB,SAAS;UACnB4D,EAAE,GAAGtyB,EAAE,GAAG0uB,SAAS;QACrB;QACA2D,EAAE,GAAGxyB,EAAE;MACT,CAAC,MAAM;QACL,IAAI2uB,MAAM,KAAK,MAAM,EAAE;UACrBzuB,EAAE,GAAGwyB,GAAG,GAAGjD,YAAY,GAAIZ,SAAU;QACvC,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;UAC7BzuB,EAAE,GAAGwyB,GAAG,GAAG/6C,KAAK,GAAG83C,YAAY,GAAGZ,SAAS;QAC7C,CAAC,MAAM;UACL3uB,EAAE,GAAG,IAAI,CAACwwB,MAAM;QAClB;QACA,IAAI1B,MAAM,KAAK,KAAK,EAAE;UACpB/uB,EAAE,GAAG0yB,GAAG;UACRxyB,EAAE,GAAGF,EAAE,GAAG4uB,SAAS;UACnB7uB,EAAE,GAAGE,EAAE,GAAG2uB,SAAS;UACnB2D,EAAE,GAAGtyB,EAAE,GAAG2uB,SAAS;QACrB,CAAC,MAAM;UACL5uB,EAAE,GAAG0yB,GAAG,GAAGj7C,MAAM;UACjByoB,EAAE,GAAGF,EAAE,GAAG4uB,SAAS;UACnB7uB,EAAE,GAAGE,EAAE,GAAG2uB,SAAS;UACnB2D,EAAE,GAAGtyB,EAAE,GAAG2uB,SAAS;QACrB;QACA4D,EAAE,GAAGxyB,EAAE;MACT;MACA,OAAO;QAACD,EAAE,EAAFA,EAAE;QAAEE,EAAE,EAAFA,EAAE;QAAEsyB,EAAE,EAAFA,EAAE;QAAEvyB,EAAE,EAAFA,EAAE;QAAEE,EAAE,EAAFA,EAAE;QAAEsyB,EAAE,EAAFA;MAAE,CAAC;IACjC;EAAC;IAAAp4D,GAAA;IAAAC,KAAA,EACD,SAAAwoC,UAAU8vB,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,EAAE;MAC1B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMif,KAAK,GAAGjf,EAAE,CAACif,KAAK;MACtB,IAAM5e,MAAM,GAAG4e,KAAK,CAAC5e,MAAM;MAC3B,IAAI2uD,SAAS,EAAEwD,YAAY,EAAE9/D,CAAC;MAC9B,IAAI2N,MAAM,EAAE;QACV,IAAMitD,SAAS,GAAG7wD,aAAa,CAACyK,OAAO,CAACmmD,GAAG,EAAErtD,EAAE,CAAC1K,CAAC,EAAE0K,EAAE,CAACmc,KAAK,CAAC;QAC5Di7C,EAAE,CAAC9hE,CAAC,GAAG6+D,WAAW,CAACn0D,EAAE,EAAEkH,OAAO,CAACs1B,UAAU,EAAEt1B,OAAO,CAAC;QACnD4G,GAAG,CAACu3B,SAAS,GAAGioB,SAAS,CAACjoB,SAAS,CAACn+B,OAAO,CAACs1B,UAAU,CAAC;QACvD1uB,GAAG,CAAC03B,YAAY,GAAG,QAAQ;QAC3BwpB,SAAS,GAAG32D,MAAM,CAAC6O,OAAO,CAAC8nD,SAAS,CAAC;QACrCwD,YAAY,GAAGtrD,OAAO,CAACsrD,YAAY;QACnC1kD,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACmwD,UAAU;QAClCvpD,GAAG,CAACquB,IAAI,GAAG6yB,SAAS,CAAC/rB,MAAM;QAC3B,KAAKvwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC3Bob,GAAG,CAAC4gD,QAAQ,CAACzvC,KAAK,CAACvsB,CAAC,CAAC,EAAE46D,SAAS,CAACh4D,CAAC,CAAC8hE,EAAE,CAAC9hE,CAAC,CAAC,EAAE8hE,EAAE,CAAC5hE,CAAC,GAAGw5D,SAAS,CAAC3yB,UAAU,GAAG,CAAC,CAAC;UAC1E+6B,EAAE,CAAC5hE,CAAC,IAAIw5D,SAAS,CAAC3yB,UAAU,GAAGm2B,YAAY;UAC3C,IAAI9/D,CAAC,GAAG,CAAC,KAAK2N,MAAM,EAAE;YACpB+2D,EAAE,CAAC5hE,CAAC,IAAI0R,OAAO,CAACurD,iBAAiB,GAAGD,YAAY;UAClD;QACF;MACF;IACF;EAAC;IAAA3zD,GAAA;IAAAC,KAAA,EACD,SAAAw4D,cAAcxpD,GAAG,EAAEspD,EAAE,EAAE1kE,CAAC,EAAE46D,SAAS,EAAEpmD,OAAO,EAAE;MAC5C,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMo1D,WAAW,GAAGp1D,EAAE,CAACo1D,WAAW,CAAC1iE,CAAC,CAAC;MACrC,IAAM6jE,eAAe,GAAGv2D,EAAE,CAACq1D,gBAAgB,CAAC3iE,CAAC,CAAC;MAC9C,IAAOw4D,SAAS,GAAchkD,OAAO,CAA9BgkD,SAAS;QAAEE,QAAQ,GAAIlkD,OAAO,CAAnBkkD,QAAQ;MAC1B,IAAMyG,QAAQ,GAAGx5D,MAAM,CAAC6O,OAAO,CAAC2qD,QAAQ,CAAC;MACzC,IAAM0F,MAAM,GAAGpD,WAAW,CAACn0D,EAAE,EAAE,MAAM,EAAEkH,OAAO,CAAC;MAC/C,IAAMswD,SAAS,GAAGlK,SAAS,CAACh4D,CAAC,CAACiiE,MAAM,CAAC;MACrC,IAAME,OAAO,GAAGvM,SAAS,GAAG2G,QAAQ,CAACx1B,UAAU,GAAG,CAACw1B,QAAQ,CAACx1B,UAAU,GAAG6uB,SAAS,IAAI,CAAC,GAAG,CAAC;MAC3F,IAAMwM,MAAM,GAAGN,EAAE,CAAC5hE,CAAC,GAAGiiE,OAAO;MAC7B,IAAIvwD,OAAO,CAACmkD,aAAa,EAAE;QACzB,IAAMgD,WAAW,GAAG;UAClBvvC,MAAM,EAAElf,IAAI,CAACC,GAAG,CAACurD,QAAQ,EAAEF,SAAS,CAAC,GAAG,CAAC;UACzC3nC,UAAU,EAAEgzC,eAAe,CAAChzC,UAAU;UACtCpE,QAAQ,EAAEo3C,eAAe,CAACp3C,QAAQ;UAClC4D,WAAW,EAAE;QACf,CAAC;QACD,IAAMP,OAAO,GAAG8qC,SAAS,CAACI,UAAU,CAAC8J,SAAS,EAAEpM,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAAC;QACxE,IAAM3oC,OAAO,GAAGi1C,MAAM,GAAGxM,SAAS,GAAG,CAAC;QACtCp9C,GAAG,CAAC+V,WAAW,GAAG3c,OAAO,CAACywD,kBAAkB;QAC5C7pD,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACywD,kBAAkB;QAC1C97D,SAAS,CAACiS,GAAG,EAAEugD,WAAW,EAAE7rC,OAAO,EAAEC,OAAO,CAAC;QAC7C3U,GAAG,CAAC+V,WAAW,GAAGuxC,WAAW,CAACtxC,WAAW;QACzChW,GAAG,CAAC6V,SAAS,GAAGyxC,WAAW,CAACxxC,eAAe;QAC3C/nB,SAAS,CAACiS,GAAG,EAAEugD,WAAW,EAAE7rC,OAAO,EAAEC,OAAO,CAAC;MAC/C,CAAC,MAAM;QACL3U,GAAG,CAACiW,SAAS,GAAGqxC,WAAW,CAACryC,WAAW,IAAI,CAAC;QAC5CjV,GAAG,CAAC+V,WAAW,GAAGuxC,WAAW,CAACtxC,WAAW;QACzChW,GAAG,CAACg5B,WAAW,CAACsuB,WAAW,CAAC/8B,UAAU,IAAI,EAAE,CAAC;QAC7CvqB,GAAG,CAACi5B,cAAc,GAAGquB,WAAW,CAAC98B,gBAAgB,IAAI,CAAC;QACtD,IAAMs/B,MAAM,GAAGtK,SAAS,CAACI,UAAU,CAAC8J,SAAS,EAAEpM,QAAQ,CAAC;QACxD,IAAMyM,MAAM,GAAGvK,SAAS,CAACI,UAAU,CAACJ,SAAS,CAACiB,KAAK,CAACiJ,SAAS,EAAE,CAAC,CAAC,EAAEpM,QAAQ,GAAG,CAAC,CAAC;QAChF,IAAMvS,YAAY,GAAG18C,aAAa,CAACi5D,WAAW,CAACvc,YAAY,CAAC;QAC5D,IAAItzC,MAAM,CAACyB,MAAM,CAAC6xC,YAAY,CAAC,CAAC7L,IAAI,CAAC,UAAAl6C,CAAC;UAAA,OAAIA,CAAC,KAAK,CAAC;QAAA,EAAC,EAAE;UAClDgb,GAAG,CAACk5B,SAAS,CAAC,CAAC;UACfl5B,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACywD,kBAAkB;UAC1C57D,kBAAkB,CAAC+R,GAAG,EAAE;YACtBxY,CAAC,EAAEsiE,MAAM;YACTpiE,CAAC,EAAEkiE,MAAM;YACTtiE,CAAC,EAAEg2D,QAAQ;YACX53D,CAAC,EAAE03D,SAAS;YACZpsC,MAAM,EAAE+5B;UACV,CAAC,CAAC;UACF/qC,GAAG,CAAC2a,IAAI,CAAC,CAAC;UACV3a,GAAG,CAACq5B,MAAM,CAAC,CAAC;UACZr5B,GAAG,CAAC6V,SAAS,GAAGyxC,WAAW,CAACxxC,eAAe;UAC3C9V,GAAG,CAACk5B,SAAS,CAAC,CAAC;UACfjrC,kBAAkB,CAAC+R,GAAG,EAAE;YACtBxY,CAAC,EAAEuiE,MAAM;YACTriE,CAAC,EAAEkiE,MAAM,GAAG,CAAC;YACbtiE,CAAC,EAAEg2D,QAAQ,GAAG,CAAC;YACf53D,CAAC,EAAE03D,SAAS,GAAG,CAAC;YAChBpsC,MAAM,EAAE+5B;UACV,CAAC,CAAC;UACF/qC,GAAG,CAAC2a,IAAI,CAAC,CAAC;QACZ,CAAC,MAAM;UACL3a,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACywD,kBAAkB;UAC1C7pD,GAAG,CAACy4B,QAAQ,CAACqxB,MAAM,EAAEF,MAAM,EAAEtM,QAAQ,EAAEF,SAAS,CAAC;UACjDp9C,GAAG,CAACgqD,UAAU,CAACF,MAAM,EAAEF,MAAM,EAAEtM,QAAQ,EAAEF,SAAS,CAAC;UACnDp9C,GAAG,CAAC6V,SAAS,GAAGyxC,WAAW,CAACxxC,eAAe;UAC3C9V,GAAG,CAACy4B,QAAQ,CAACsxB,MAAM,EAAEH,MAAM,GAAG,CAAC,EAAEtM,QAAQ,GAAG,CAAC,EAAEF,SAAS,GAAG,CAAC,CAAC;QAC/D;MACF;MACAp9C,GAAG,CAAC6V,SAAS,GAAG3jB,EAAE,CAACs1D,eAAe,CAAC5iE,CAAC,CAAC;IACvC;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAAi5D,SAASX,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,EAAE;MACzB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAO2xD,IAAI,GAAI3xD,EAAE,CAAV2xD,IAAI;MACX,IAAOiB,WAAW,GAAmD1rD,OAAO,CAArE0rD,WAAW;QAAEoF,SAAS,GAAwC9wD,OAAO,CAAxD8wD,SAAS;QAAErF,aAAa,GAAyBzrD,OAAO,CAA7CyrD,aAAa;QAAEzH,SAAS,GAAchkD,OAAO,CAA9BgkD,SAAS;QAAEE,QAAQ,GAAIlkD,OAAO,CAAnBkkD,QAAQ;MACjE,IAAMyG,QAAQ,GAAGx5D,MAAM,CAAC6O,OAAO,CAAC2qD,QAAQ,CAAC;MACzC,IAAIa,cAAc,GAAGb,QAAQ,CAACx1B,UAAU;MACxC,IAAI47B,YAAY,GAAG,CAAC;MACpB,IAAM3K,SAAS,GAAG7wD,aAAa,CAACyK,OAAO,CAACmmD,GAAG,EAAErtD,EAAE,CAAC1K,CAAC,EAAE0K,EAAE,CAACmc,KAAK,CAAC;MAC5D,IAAM+7C,cAAc,GAAG,SAAjBA,cAAcA,CAAYxzC,IAAI,EAAE;QACpC5W,GAAG,CAAC4gD,QAAQ,CAAChqC,IAAI,EAAE4oC,SAAS,CAACh4D,CAAC,CAAC8hE,EAAE,CAAC9hE,CAAC,GAAG2iE,YAAY,CAAC,EAAEb,EAAE,CAAC5hE,CAAC,GAAGk9D,cAAc,GAAG,CAAC,CAAC;QAC/E0E,EAAE,CAAC5hE,CAAC,IAAIk9D,cAAc,GAAGE,WAAW;MACtC,CAAC;MACD,IAAMuF,uBAAuB,GAAG7K,SAAS,CAACjoB,SAAS,CAAC2yB,SAAS,CAAC;MAC9D,IAAI7F,QAAQ,EAAEiG,SAAS,EAAEh8B,KAAK,EAAE1pC,CAAC,EAAEkB,CAAC,EAAEsV,IAAI,EAAEmhB,IAAI;MAChDvc,GAAG,CAACu3B,SAAS,GAAG2yB,SAAS;MACzBlqD,GAAG,CAAC03B,YAAY,GAAG,QAAQ;MAC3B13B,GAAG,CAACquB,IAAI,GAAG01B,QAAQ,CAAC5uB,MAAM;MAC1Bm0B,EAAE,CAAC9hE,CAAC,GAAG6+D,WAAW,CAACn0D,EAAE,EAAEm4D,uBAAuB,EAAEjxD,OAAO,CAAC;MACxD4G,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACmxD,SAAS;MACjCtiE,IAAI,CAACiK,EAAE,CAACsyD,UAAU,EAAE4F,cAAc,CAAC;MACnCD,YAAY,GAAGtF,aAAa,IAAIwF,uBAAuB,KAAK,OAAO,GAC/DH,SAAS,KAAK,QAAQ,GAAI5M,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAKA,QAAQ,GAAG,CAAE,GAC5D,CAAC;MACL,KAAK14D,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGyoD,IAAI,CAACtxD,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7Cy/D,QAAQ,GAAGR,IAAI,CAACj/D,CAAC,CAAC;QAClB0lE,SAAS,GAAGp4D,EAAE,CAACs1D,eAAe,CAAC5iE,CAAC,CAAC;QACjCob,GAAG,CAAC6V,SAAS,GAAGy0C,SAAS;QACzBriE,IAAI,CAACo8D,QAAQ,CAACC,MAAM,EAAE8F,cAAc,CAAC;QACrC97B,KAAK,GAAG+1B,QAAQ,CAAC/1B,KAAK;QACtB,IAAIu2B,aAAa,IAAIv2B,KAAK,CAAC/7B,MAAM,EAAE;UACjCL,EAAE,CAACs3D,aAAa,CAACxpD,GAAG,EAAEspD,EAAE,EAAE1kE,CAAC,EAAE46D,SAAS,EAAEpmD,OAAO,CAAC;UAChDwrD,cAAc,GAAG9yD,IAAI,CAACuC,GAAG,CAAC0vD,QAAQ,CAACx1B,UAAU,EAAE6uB,SAAS,CAAC;QAC3D;QACA,KAAKt3D,CAAC,GAAG,CAAC,EAAEy2B,IAAI,GAAG+R,KAAK,CAAC/7B,MAAM,EAAEzM,CAAC,GAAGy2B,IAAI,EAAE,EAAEz2B,CAAC,EAAE;UAC9CskE,cAAc,CAAC97B,KAAK,CAACxoC,CAAC,CAAC,CAAC;UACxB8+D,cAAc,GAAGb,QAAQ,CAACx1B,UAAU;QACtC;QACAtmC,IAAI,CAACo8D,QAAQ,CAACE,KAAK,EAAE6F,cAAc,CAAC;MACtC;MACAD,YAAY,GAAG,CAAC;MAChBvF,cAAc,GAAGb,QAAQ,CAACx1B,UAAU;MACpCtmC,IAAI,CAACiK,EAAE,CAACuyD,SAAS,EAAE2F,cAAc,CAAC;MAClCd,EAAE,CAAC5hE,CAAC,IAAIo9D,WAAW;IACrB;EAAC;IAAA/zD,GAAA;IAAAC,KAAA,EACD,SAAAw5D,WAAWlB,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,EAAE;MAC3B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAM4xD,MAAM,GAAG5xD,EAAE,CAAC4xD,MAAM;MACxB,IAAMvxD,MAAM,GAAGuxD,MAAM,CAACvxD,MAAM;MAC5B,IAAIyxD,UAAU,EAAEp/D,CAAC;MACjB,IAAI2N,MAAM,EAAE;QACV,IAAMitD,SAAS,GAAG7wD,aAAa,CAACyK,OAAO,CAACmmD,GAAG,EAAErtD,EAAE,CAAC1K,CAAC,EAAE0K,EAAE,CAACmc,KAAK,CAAC;QAC5Di7C,EAAE,CAAC9hE,CAAC,GAAG6+D,WAAW,CAACn0D,EAAE,EAAEkH,OAAO,CAACqxD,WAAW,EAAErxD,OAAO,CAAC;QACpDkwD,EAAE,CAAC5hE,CAAC,IAAI0R,OAAO,CAAC2rD,eAAe;QAC/B/kD,GAAG,CAACu3B,SAAS,GAAGioB,SAAS,CAACjoB,SAAS,CAACn+B,OAAO,CAACqxD,WAAW,CAAC;QACxDzqD,GAAG,CAAC03B,YAAY,GAAG,QAAQ;QAC3BssB,UAAU,GAAGz5D,MAAM,CAAC6O,OAAO,CAAC4qD,UAAU,CAAC;QACvChkD,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAACsxD,WAAW;QACnC1qD,GAAG,CAACquB,IAAI,GAAG21B,UAAU,CAAC7uB,MAAM;QAC5B,KAAKvwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC3Bob,GAAG,CAAC4gD,QAAQ,CAACkD,MAAM,CAACl/D,CAAC,CAAC,EAAE46D,SAAS,CAACh4D,CAAC,CAAC8hE,EAAE,CAAC9hE,CAAC,CAAC,EAAE8hE,EAAE,CAAC5hE,CAAC,GAAGs8D,UAAU,CAACz1B,UAAU,GAAG,CAAC,CAAC;UAC5E+6B,EAAE,CAAC5hE,CAAC,IAAIs8D,UAAU,CAACz1B,UAAU,GAAGn1B,OAAO,CAAC4rD,aAAa;QACvD;MACF;IACF;EAAC;IAAAj0D,GAAA;IAAAC,KAAA,EACD,SAAAunC,eAAe+wB,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,EAAE;MAC5C,IAAOisD,MAAM,GAAY,IAAI,CAAtBA,MAAM;QAAEK,MAAM,GAAI,IAAI,CAAdA,MAAM;MACrB,IAAOl+D,CAAC,GAAO8hE,EAAE,CAAV9hE,CAAC;QAAEE,CAAC,GAAI4hE,EAAE,CAAP5hE,CAAC;MACX,IAAO2mB,KAAK,GAAYs8C,WAAW,CAA5Bt8C,KAAK;QAAED,MAAM,GAAIu8C,WAAW,CAArBv8C,MAAM;MACpB,IAAM4C,MAAM,GAAG5X,OAAO,CAAC+sD,YAAY;MACnCnmD,GAAG,CAAC6V,SAAS,GAAGzc,OAAO,CAAC0c,eAAe;MACvC9V,GAAG,CAAC+V,WAAW,GAAG3c,OAAO,CAAC4c,WAAW;MACrChW,GAAG,CAACiW,SAAS,GAAG7c,OAAO,CAAC6b,WAAW;MACnCjV,GAAG,CAACk5B,SAAS,CAAC,CAAC;MACfl5B,GAAG,CAACm5B,MAAM,CAAC3xC,CAAC,GAAGwpB,MAAM,EAAEtpB,CAAC,CAAC;MACzB,IAAIg+D,MAAM,KAAK,KAAK,EAAE;QACpB,IAAI,CAACoD,SAAS,CAACQ,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACo5B,MAAM,CAAC5xC,CAAC,GAAG6mB,KAAK,GAAG2C,MAAM,EAAEtpB,CAAC,CAAC;MACjCsY,GAAG,CAAC4qD,gBAAgB,CAACpjE,CAAC,GAAG6mB,KAAK,EAAE3mB,CAAC,EAAEF,CAAC,GAAG6mB,KAAK,EAAE3mB,CAAC,GAAGspB,MAAM,CAAC;MACzD,IAAI00C,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,OAAO,EAAE;QAC7C,IAAI,CAACyD,SAAS,CAACQ,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACo5B,MAAM,CAAC5xC,CAAC,GAAG6mB,KAAK,EAAE3mB,CAAC,GAAG0mB,MAAM,GAAG4C,MAAM,CAAC;MAC1ChR,GAAG,CAAC4qD,gBAAgB,CAACpjE,CAAC,GAAG6mB,KAAK,EAAE3mB,CAAC,GAAG0mB,MAAM,EAAE5mB,CAAC,GAAG6mB,KAAK,GAAG2C,MAAM,EAAEtpB,CAAC,GAAG0mB,MAAM,CAAC;MAC3E,IAAIs3C,MAAM,KAAK,QAAQ,EAAE;QACvB,IAAI,CAACoD,SAAS,CAACQ,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACo5B,MAAM,CAAC5xC,CAAC,GAAGwpB,MAAM,EAAEtpB,CAAC,GAAG0mB,MAAM,CAAC;MAClCpO,GAAG,CAAC4qD,gBAAgB,CAACpjE,CAAC,EAAEE,CAAC,GAAG0mB,MAAM,EAAE5mB,CAAC,EAAEE,CAAC,GAAG0mB,MAAM,GAAG4C,MAAM,CAAC;MAC3D,IAAI00C,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,MAAM,EAAE;QAC5C,IAAI,CAACyD,SAAS,CAACQ,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACo5B,MAAM,CAAC5xC,CAAC,EAAEE,CAAC,GAAGspB,MAAM,CAAC;MACzBhR,GAAG,CAAC4qD,gBAAgB,CAACpjE,CAAC,EAAEE,CAAC,EAAEF,CAAC,GAAGwpB,MAAM,EAAEtpB,CAAC,CAAC;MACzCsY,GAAG,CAAC2qC,SAAS,CAAC,CAAC;MACf3qC,GAAG,CAAC2a,IAAI,CAAC,CAAC;MACV,IAAIvhB,OAAO,CAAC6b,WAAW,GAAG,CAAC,EAAE;QAC3BjV,GAAG,CAACq5B,MAAM,CAAC,CAAC;MACd;IACF;EAAC;IAAAtoC,GAAA;IAAAC,KAAA,EACD,SAAA65D,uBAAuBzxD,OAAO,EAAE;MAC9B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAACuG,MAAM;MACvB,IAAMtH,KAAK,GAAGe,EAAE,CAACuH,WAAW;MAC5B,IAAMqxD,KAAK,GAAG35D,KAAK,IAAIA,KAAK,CAAC3J,CAAC;MAC9B,IAAMujE,KAAK,GAAG55D,KAAK,IAAIA,KAAK,CAACzJ,CAAC;MAC9B,IAAIojE,KAAK,IAAIC,KAAK,EAAE;QAClB,IAAM/tC,QAAQ,GAAGgmC,WAAW,CAAC5pD,OAAO,CAAC4jB,QAAQ,CAAC,CAAC7qB,IAAI,CAACD,EAAE,EAAEA,EAAE,CAACa,OAAO,EAAEb,EAAE,CAAC60D,cAAc,CAAC;QACtF,IAAI,CAAC/pC,QAAQ,EAAE;UACb;QACF;QACA,IAAMnjB,IAAI,GAAG3H,EAAE,CAAC80D,KAAK,GAAGpD,cAAc,CAAC1xD,EAAE,EAAEkH,OAAO,CAAC;QACnD,IAAMuvD,eAAe,GAAGlxD,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEkjB,QAAQ,EAAE9qB,EAAE,CAAC80D,KAAK,CAAC;QAC7D,IAAMd,SAAS,GAAGL,kBAAkB,CAAC30D,KAAK,EAAEkI,OAAO,EAAEuvD,eAAe,CAAC;QACrE,IAAMh4C,KAAK,GAAGs1C,kBAAkB,CAAC7sD,OAAO,EAAEuvD,eAAe,EAAEzC,SAAS,EAAEh1D,KAAK,CAAC;QAC5E,IAAI45D,KAAK,CAACr0D,GAAG,KAAKka,KAAK,CAACnpB,CAAC,IAAIujE,KAAK,CAACt0D,GAAG,KAAKka,KAAK,CAACjpB,CAAC,EAAE;UAClDwK,EAAE,CAACmzD,MAAM,GAAGa,SAAS,CAACb,MAAM;UAC5BnzD,EAAE,CAACwzD,MAAM,GAAGQ,SAAS,CAACR,MAAM;UAC5BxzD,EAAE,CAACmc,KAAK,GAAGxU,IAAI,CAACwU,KAAK;UACrBnc,EAAE,CAACkc,MAAM,GAAGvU,IAAI,CAACuU,MAAM;UACvBlc,EAAE,CAACk1D,MAAM,GAAGpqC,QAAQ,CAACx1B,CAAC;UACtB0K,EAAE,CAACm1D,MAAM,GAAGrqC,QAAQ,CAACt1B,CAAC;UACtBwK,EAAE,CAAC8U,kBAAkB,CAAC,CAAC,CAACpQ,MAAM,CAAC1E,EAAE,EAAEye,KAAK,CAAC;QAC3C;MACF;IACF;EAAC;IAAA5f,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM9N,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACk3B,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC;MACtD,IAAI0jD,OAAO,GAAG50D,EAAE,CAAC40D,OAAO;MACxB,IAAI,CAACA,OAAO,EAAE;QACZ;MACF;MACA50D,EAAE,CAAC24D,sBAAsB,CAACzxD,OAAO,CAAC;MAClC,IAAMuxD,WAAW,GAAG;QAClBt8C,KAAK,EAAEnc,EAAE,CAACmc,KAAK;QACfD,MAAM,EAAElc,EAAE,CAACkc;MACb,CAAC;MACD,IAAMk7C,EAAE,GAAG;QACT9hE,CAAC,EAAE0K,EAAE,CAAC1K,CAAC;QACPE,CAAC,EAAEwK,EAAE,CAACxK;MACR,CAAC;MACDo/D,OAAO,GAAGh1D,IAAI,CAACkY,GAAG,CAAC88C,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGA,OAAO;MAChD,IAAMjkC,OAAO,GAAG96B,SAAS,CAACqR,OAAO,CAACypB,OAAO,CAAC;MAC1C,IAAMmoC,iBAAiB,GAAG94D,EAAE,CAACif,KAAK,CAAC5e,MAAM,IAAIL,EAAE,CAACsyD,UAAU,CAACjyD,MAAM,IAAIL,EAAE,CAAC2xD,IAAI,CAACtxD,MAAM,IAAIL,EAAE,CAACuyD,SAAS,CAAClyD,MAAM,IAAIL,EAAE,CAAC4xD,MAAM,CAACvxD,MAAM;MAC9H,IAAI6G,OAAO,CAAC2yB,OAAO,IAAIi/B,iBAAiB,EAAE;QACxChrD,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACVx4B,GAAG,CAACirD,WAAW,GAAGnE,OAAO;QACzB50D,EAAE,CAACqmC,cAAc,CAAC+wB,EAAE,EAAEtpD,GAAG,EAAE2qD,WAAW,EAAEvxD,OAAO,CAAC;QAChDvK,qBAAqB,CAACmR,GAAG,EAAE5G,OAAO,CAAC0nD,aAAa,CAAC;QACjDwI,EAAE,CAAC5hE,CAAC,IAAIm7B,OAAO,CAACnoB,GAAG;QACnBxI,EAAE,CAACsnC,SAAS,CAAC8vB,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,CAAC;QAC9BlH,EAAE,CAAC+3D,QAAQ,CAACX,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,CAAC;QAC7BlH,EAAE,CAACs4D,UAAU,CAAClB,EAAE,EAAEtpD,GAAG,EAAE5G,OAAO,CAAC;QAC/BnK,oBAAoB,CAAC+Q,GAAG,EAAE5G,OAAO,CAAC0nD,aAAa,CAAC;QAChD9gD,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf;IACF;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAo4C,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAACr2C,OAAO,IAAI,EAAE;IAC3B;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAAq4C,kBAAkBC,cAAc,EAAE4Z,aAAa,EAAE;MAC/C,IAAMhxD,EAAE,GAAG,IAAI;MACf,IAAMq3C,UAAU,GAAGr3C,EAAE,CAACa,OAAO;MAC7B,IAAM4D,MAAM,GAAG2yC,cAAc,CAAC5zB,GAAG,CAAC,UAAAw1C,KAAA,EAA2B;QAAA,IAAzBvvD,YAAY,GAAAuvD,KAAA,CAAZvvD,YAAY;UAAEN,KAAK,GAAA6vD,KAAA,CAAL7vD,KAAK;QACrD,IAAMa,IAAI,GAAGhK,EAAE,CAACuG,MAAM,CAACyJ,cAAc,CAACvG,YAAY,CAAC;QACnD,IAAI,CAACO,IAAI,EAAE;UACT,MAAM,IAAIif,KAAK,CAAC,iCAAiC,GAAGxf,YAAY,CAAC;QACnE;QACA,OAAO;UACLA,YAAY,EAAZA,YAAY;UACZwD,OAAO,EAAEjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;UACzBA,KAAK,EAALA;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAMud,OAAO,GAAG,CAACnsB,cAAc,CAAC88C,UAAU,EAAE5yC,MAAM,CAAC;MACnD,IAAMw0D,eAAe,GAAGj5D,EAAE,CAACk5D,gBAAgB,CAACz0D,MAAM,EAAEusD,aAAa,CAAC;MAClE,IAAItqC,OAAO,IAAIuyC,eAAe,EAAE;QAC9Bj5D,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAAC60D,cAAc,GAAG7D,aAAa;QACjChxD,EAAE,CAAC0E,MAAM,CAAC,IAAI,CAAC;MACjB;IACF;EAAC;IAAA7F,GAAA;IAAAC,KAAA,EACD,SAAAwwD,YAAYl9D,CAAC,EAAEolD,MAAM,EAAE;MACrB,IAAMx3C,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMmwC,UAAU,GAAGr3C,EAAE,CAACa,OAAO,IAAI,EAAE;MACnC,IAAI6lB,OAAO,GAAG,KAAK;MACnB,IAAIjiB,MAAM,GAAG,EAAE;MACf,IAAIrS,CAAC,CAAC+M,IAAI,KAAK,UAAU,EAAE;QACzBsF,MAAM,GAAGzE,EAAE,CAACuG,MAAM,CAAC6vC,yBAAyB,CAAChkD,CAAC,EAAE8U,OAAO,CAACsC,IAAI,EAAEtC,OAAO,EAAEswC,MAAM,CAAC;QAC9E,IAAItwC,OAAO,CAACiB,OAAO,EAAE;UACnB1D,MAAM,CAAC0D,OAAO,CAAC,CAAC;QAClB;MACF;MACA,IAAM8wD,eAAe,GAAGj5D,EAAE,CAACk5D,gBAAgB,CAACz0D,MAAM,EAAErS,CAAC,CAAC;MACtDs0B,OAAO,GAAG8wB,MAAM,IAAI,CAACj9C,cAAc,CAACkK,MAAM,EAAE4yC,UAAU,CAAC,IAAI4hB,eAAe;MAC1E,IAAIvyC,OAAO,EAAE;QACX1mB,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnB,IAAIyC,OAAO,CAAC2yB,OAAO,IAAI3yB,OAAO,CAACyvD,QAAQ,EAAE;UACvC32D,EAAE,CAAC60D,cAAc,GAAG;YAClBv/D,CAAC,EAAElD,CAAC,CAACkD,CAAC;YACNE,CAAC,EAAEpD,CAAC,CAACoD;UACP,CAAC;UACDwK,EAAE,CAAC0E,MAAM,CAAC,IAAI,EAAE8yC,MAAM,CAAC;QACzB;MACF;MACA,OAAO9wB,OAAO;IAChB;EAAC;IAAA7nB,GAAA;IAAAC,KAAA,EACD,SAAAo6D,iBAAiBz0D,MAAM,EAAErS,CAAC,EAAE;MAC1B,IAAO8iE,MAAM,GAAqB,IAAI,CAA/BA,MAAM;QAAEC,MAAM,GAAa,IAAI,CAAvBA,MAAM;QAAEjuD,OAAO,GAAI,IAAI,CAAfA,OAAO;MAC9B,IAAM4jB,QAAQ,GAAGgmC,WAAW,CAAC5pD,OAAO,CAAC4jB,QAAQ,CAAC,CAAC7qB,IAAI,CAAC,IAAI,EAAEwE,MAAM,EAAErS,CAAC,CAAC;MACpE,OAAO04B,QAAQ,KAAK,KAAK,KAAKoqC,MAAM,KAAKpqC,QAAQ,CAACx1B,CAAC,IAAI6/D,MAAM,KAAKrqC,QAAQ,CAACt1B,CAAC,CAAC;IAC/E;EAAC;EAAA,OAAAg/D,OAAA;AAAA,EAjhBmBh+B,OAAO;AAmhB7Bg+B,OAAO,CAAC1D,WAAW,GAAGA,WAAW;AACjC,IAAIqI,cAAc,GAAG;EACnB7uD,EAAE,EAAE,SAAS;EACbslD,QAAQ,EAAE4E,OAAO;EACjB1D,WAAW,EAAXA,WAAW;EACXsI,SAAS,WAAAA,UAACp6D,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAC/B,IAAIA,OAAO,EAAE;MACXlI,KAAK,CAACggB,OAAO,GAAG,IAAIw1C,OAAO,CAAC;QAACjuD,MAAM,EAAEvH,KAAK;QAAEkI,OAAO,EAAPA;MAAO,CAAC,CAAC;IACvD;EACF,CAAC;EACDy3B,YAAY,WAAAA,aAAC3/B,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAClC,IAAIlI,KAAK,CAACggB,OAAO,EAAE;MACjBhgB,KAAK,CAACggB,OAAO,CAACrQ,UAAU,CAACzH,OAAO,CAAC;IACnC;EACF,CAAC;EACDiJ,KAAK,WAAAA,MAACnR,KAAK,EAAEyrD,KAAK,EAAEvjD,OAAO,EAAE;IAC3B,IAAIlI,KAAK,CAACggB,OAAO,EAAE;MACjBhgB,KAAK,CAACggB,OAAO,CAACrQ,UAAU,CAACzH,OAAO,CAAC;IACnC;EACF,CAAC;EACDmyD,SAAS,WAAAA,UAACr6D,KAAK,EAAE;IACf,IAAMggB,OAAO,GAAGhgB,KAAK,CAACggB,OAAO;IAC7B,IAAMnI,IAAI,GAAG;MACXmI,OAAO,EAAPA;IACF,CAAC;IACD,IAAIhgB,KAAK,CAACuhC,aAAa,CAAC,mBAAmB,EAAE1pB,IAAI,CAAC,KAAK,KAAK,EAAE;MAC5D;IACF;IACA,IAAImI,OAAO,EAAE;MACXA,OAAO,CAACre,IAAI,CAAC3B,KAAK,CAAC8O,GAAG,CAAC;IACzB;IACA9O,KAAK,CAACuhC,aAAa,CAAC,kBAAkB,EAAE1pB,IAAI,CAAC;EAC/C,CAAC;EACDg5C,UAAU,WAAAA,WAAC7wD,KAAK,EAAE6X,IAAI,EAAE;IACtB,IAAI7X,KAAK,CAACggB,OAAO,EAAE;MACjB,IAAM2M,gBAAgB,GAAG9U,IAAI,CAAC2gC,MAAM;MACpC,IAAIx4C,KAAK,CAACggB,OAAO,CAACswC,WAAW,CAACz4C,IAAI,CAACrV,KAAK,EAAEmqB,gBAAgB,CAAC,EAAE;QAC3D9U,IAAI,CAAC6P,OAAO,GAAG,IAAI;MACrB;IACF;EACF,CAAC;EACDj0B,QAAQ,EAAE;IACRonC,OAAO,EAAE,IAAI;IACb88B,QAAQ,EAAE,IAAI;IACd7rC,QAAQ,EAAE,SAAS;IACnBlH,eAAe,EAAE,iBAAiB;IAClCyzC,UAAU,EAAE,MAAM;IAClBrI,SAAS,EAAE;MACT7rC,MAAM,EAAE;IACV,CAAC;IACDqvC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,CAAC;IACpBj2B,UAAU,EAAE,MAAM;IAClB67B,SAAS,EAAE,MAAM;IACjBzF,WAAW,EAAE,CAAC;IACdf,QAAQ,EAAE,CACV,CAAC;IACDmG,SAAS,EAAE,MAAM;IACjBQ,WAAW,EAAE,MAAM;IACnB1F,aAAa,EAAE,CAAC;IAChBD,eAAe,EAAE,CAAC;IAClBf,UAAU,EAAE;MACV3uC,MAAM,EAAE;IACV,CAAC;IACDo1C,WAAW,EAAE,MAAM;IACnB5nC,OAAO,EAAE,CAAC;IACV2iC,YAAY,EAAE,CAAC;IACfD,SAAS,EAAE,CAAC;IACZY,YAAY,EAAE,CAAC;IACf/I,SAAS,EAAE,SAAAA,UAACp9C,GAAG,EAAE5F,IAAI;MAAA,OAAKA,IAAI,CAAC2pD,QAAQ,CAAClqD,IAAI;IAAA;IAC5CyjD,QAAQ,EAAE,SAAAA,SAACt9C,GAAG,EAAE5F,IAAI;MAAA,OAAKA,IAAI,CAAC2pD,QAAQ,CAAClqD,IAAI;IAAA;IAC3CgwD,kBAAkB,EAAE,MAAM;IAC1BhF,aAAa,EAAE,IAAI;IACnB7uC,WAAW,EAAE,eAAe;IAC5Bf,WAAW,EAAE,CAAC;IACdtd,SAAS,EAAE;MACTlG,QAAQ,EAAE,GAAG;MACbsE,MAAM,EAAE;IACV,CAAC;IACDqC,UAAU,EAAE;MACVd,OAAO,EAAE;QACPjG,IAAI,EAAE,QAAQ;QACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;MAC9D,CAAC;MACD6uD,OAAO,EAAE;QACP/wD,MAAM,EAAE,QAAQ;QAChBtE,QAAQ,EAAE;MACZ;IACF,CAAC;IACDH,SAAS,EAAE;MACTo2D,WAAW,EAAEv4D,IAAI;MACjBgiB,KAAK,WAAAA,MAACq1C,YAAY,EAAE;QAClB,IAAIA,YAAY,CAACj0D,MAAM,GAAG,CAAC,EAAE;UAC3B,IAAMO,IAAI,GAAG0zD,YAAY,CAAC,CAAC,CAAC;UAC5B,IAAMziD,MAAM,GAAGjR,IAAI,CAAC5B,KAAK,CAAC4K,IAAI,CAACiI,MAAM;UACrC,IAAMynD,UAAU,GAAGznD,MAAM,GAAGA,MAAM,CAACxR,MAAM,GAAG,CAAC;UAC7C,IAAI,IAAI,IAAI,IAAI,CAAC6G,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;YAC3D,OAAO5I,IAAI,CAACmM,OAAO,CAACwG,KAAK,IAAI,EAAE;UACjC,CAAC,MAAM,IAAI3S,IAAI,CAAC2S,KAAK,EAAE;YACrB,OAAO3S,IAAI,CAAC2S,KAAK;UACnB,CAAC,MAAM,IAAI+lD,UAAU,GAAG,CAAC,IAAI14D,IAAI,CAACsM,SAAS,GAAGosD,UAAU,EAAE;YACxD,OAAOznD,MAAM,CAACjR,IAAI,CAACsM,SAAS,CAAC;UAC/B;QACF;QACA,OAAO,EAAE;MACX,CAAC;MACDuoD,UAAU,EAAEx4D,IAAI;MAChBq1D,UAAU,EAAEr1D,IAAI;MAChB64D,WAAW,EAAE74D,IAAI;MACjBsW,KAAK,WAAAA,MAAC4Q,WAAW,EAAE;QACjB,IAAI,IAAI,IAAI,IAAI,CAACjd,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;UAC3D,OAAO2a,WAAW,CAAC5Q,KAAK,GAAG,IAAI,GAAG4Q,WAAW,CAACE,cAAc,IAAIF,WAAW,CAACE,cAAc;QAC5F;QACA,IAAI9Q,KAAK,GAAG4Q,WAAW,CAACpX,OAAO,CAACwG,KAAK,IAAI,EAAE;QAC3C,IAAIA,KAAK,EAAE;UACTA,KAAK,IAAI,IAAI;QACf;QACA,IAAMzU,KAAK,GAAGqlB,WAAW,CAACE,cAAc;QACxC,IAAI,CAACxwB,aAAa,CAACiL,KAAK,CAAC,EAAE;UACzByU,KAAK,IAAIzU,KAAK;QAChB;QACA,OAAOyU,KAAK;MACd,CAAC;MACD+iD,UAAU,WAAAA,WAACnyC,WAAW,EAAE;QACtB,IAAMna,IAAI,GAAGma,WAAW,CAACnlB,KAAK,CAACgR,cAAc,CAACmU,WAAW,CAAC1a,YAAY,CAAC;QACvE,IAAMvC,OAAO,GAAG8C,IAAI,CAAC6B,UAAU,CAACkI,QAAQ,CAACoQ,WAAW,CAACjX,SAAS,CAAC;QAC/D,OAAO;UACL4W,WAAW,EAAE5c,OAAO,CAAC4c,WAAW;UAChCF,eAAe,EAAE1c,OAAO,CAAC0c,eAAe;UACxCb,WAAW,EAAE7b,OAAO,CAAC6b,WAAW;UAChCsV,UAAU,EAAEnxB,OAAO,CAACmxB,UAAU;UAC9BC,gBAAgB,EAAEpxB,OAAO,CAACoxB,gBAAgB;UAC1CugB,YAAY,EAAE;QAChB,CAAC;MACH,CAAC;MACD2d,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAACtvD,OAAO,CAACmxD,SAAS;MAC/B,CAAC;MACD9B,eAAe,WAAAA,gBAACpyC,WAAW,EAAE;QAC3B,IAAMna,IAAI,GAAGma,WAAW,CAACnlB,KAAK,CAACgR,cAAc,CAACmU,WAAW,CAAC1a,YAAY,CAAC;QACvE,IAAMvC,OAAO,GAAG8C,IAAI,CAAC6B,UAAU,CAACkI,QAAQ,CAACoQ,WAAW,CAACjX,SAAS,CAAC;QAC/D,OAAO;UACLqW,UAAU,EAAErc,OAAO,CAACqc,UAAU;UAC9BpE,QAAQ,EAAEjY,OAAO,CAACiY;QACpB,CAAC;MACH,CAAC;MACD42C,UAAU,EAAE94D,IAAI;MAChBs1D,SAAS,EAAEt1D,IAAI;MACfi5D,YAAY,EAAEj5D,IAAI;MAClB20D,MAAM,EAAE30D,IAAI;MACZk5D,WAAW,EAAEl5D;IACf;EACF,CAAC;EACD85B,aAAa,EAAE;IACb86B,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClB9C,SAAS,EAAE;EACb,CAAC;EACD/1D,WAAW,EAAE;IACX4M,WAAW,EAAE,SAAAA,YAACC,IAAI;MAAA,OAAKA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU;IAAA;IACtFF,UAAU,EAAE,KAAK;IACjBxG,SAAS,EAAE;MACTyG,WAAW,EAAE,KAAK;MAClBD,UAAU,EAAE;IACd,CAAC;IACDH,SAAS,EAAE;MACTE,SAAS,EAAE;IACb,CAAC;IACDO,UAAU,EAAE;MACVP,SAAS,EAAE;IACb;EACF,CAAC;EACDgqC,sBAAsB,EAAE,CAAC,aAAa;AACxC,CAAC;AAED,IAAI5wB,OAAO,GAAG,aAAaxZ,MAAM,CAACsP,MAAM,CAAC;EACzCkU,SAAS,EAAE,IAAI;EACfwwC,UAAU,EAAEpU,iBAAiB;EAC7BqU,MAAM,EAAEjP,aAAa;EACrBiB,MAAM,EAAEmE,aAAa;EACrB8J,QAAQ,EAAE5I,eAAe;EACzBb,KAAK,EAAEW,YAAY;EACnB6D,OAAO,EAAE2E;AACT,CAAC,CAAC;AAEF,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAI7nD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK;EAAA,OAAK,OAAOgE,GAAG,KAAK,QAAQ,GAC/D0E,MAAM,CAACnQ,IAAI,CAACyL,GAAG,CAAC,GAAG,CAAC,GACpBqP,KAAK,CAACrP,GAAG,CAAC,GAAG,IAAI,GAAGhE,KAAK;AAAA;AAC7B,SAASwwD,cAAcA,CAAC9nD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK,EAAE;EAC1C,IAAM6wB,KAAK,GAAGnoB,MAAM,CAAC4K,OAAO,CAACtP,GAAG,CAAC;EACjC,IAAI6sB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,OAAO0/B,WAAW,CAAC7nD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK,CAAC;EACxC;EACA,IAAMkT,IAAI,GAAGxK,MAAM,CAAC+nD,WAAW,CAACzsD,GAAG,CAAC;EACpC,OAAO6sB,KAAK,KAAK3d,IAAI,GAAGlT,KAAK,GAAG6wB,KAAK;AACvC;AACA,IAAMyB,UAAU,GAAG,SAAbA,UAAUA,CAAItyB,KAAK,EAAEhH,GAAG;EAAA,OAAKgH,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGhU,WAAW,CAACyK,IAAI,CAACy6B,KAAK,CAAClxB,KAAK,CAAC,EAAE,CAAC,EAAEhH,GAAG,CAAC;AAAA;AAAC,IAC5F03D,aAAa,0BAAAC,MAAA;EAAAj/C,SAAA,CAAAg/C,aAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAh/C,YAAA,CAAA8+C,aAAA;EACjB,SAAAA,cAAYt2D,GAAG,EAAE;IAAA,IAAAy2D,OAAA;IAAA37D,eAAA,OAAAw7D,aAAA;IACfG,OAAA,GAAAD,QAAA,CAAA95D,IAAA,OAAMsD,GAAG;IACTy2D,OAAA,CAAKC,WAAW,GAAGt7D,SAAS;IAC5Bq7D,OAAA,CAAKE,WAAW,GAAG,CAAC;IAAC,OAAAF,OAAA;EACvB;EAACp7D,YAAA,CAAAi7D,aAAA;IAAAh7D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAItV,aAAa,CAACsZ,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,IAAM0E,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC/B3I,KAAK,GAAGgxD,QAAQ,CAAChxD,KAAK,CAAC,IAAI0I,MAAM,CAAC1I,KAAK,CAAC,KAAKgE,GAAG,GAAGhE,KAAK,GACpDwwD,cAAc,CAAC9nD,MAAM,EAAE1E,GAAG,EAAEpa,cAAc,CAACoW,KAAK,EAAEgE,GAAG,CAAC,CAAC;MAC3D,OAAOsuB,UAAU,CAACtyB,KAAK,EAAE0I,MAAM,CAACxR,MAAM,GAAG,CAAC,CAAC;IAC7C;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAogC,oBAAA,EAAsB;MACpB,IAAMl/B,EAAE,GAAG,IAAI;MACf,IAAAo6D,kBAAA,GAAiCp6D,EAAE,CAACuK,aAAa,CAAC,CAAC;QAA5CE,UAAU,GAAA2vD,kBAAA,CAAV3vD,UAAU;QAAEC,UAAU,GAAA0vD,kBAAA,CAAV1vD,UAAU;MAC7B,IAAA2vD,aAAA,GAAiBr6D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAAw6D,aAAA,CAAHx6D,GAAG;QAAEsC,GAAG,GAAAk4D,aAAA,CAAHl4D,GAAG;MACb,IAAInC,EAAE,CAACkH,OAAO,CAAC2wB,MAAM,KAAK,OAAO,EAAE;QACjC,IAAI,CAACptB,UAAU,EAAE;UACf5K,GAAG,GAAG,CAAC;QACT;QACA,IAAI,CAAC6K,UAAU,EAAE;UACfvI,GAAG,GAAGnC,EAAE,CAAC8R,SAAS,CAAC,CAAC,CAACzR,MAAM,GAAG,CAAC;QACjC;MACF;MACAL,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAugC,WAAA,EAAa;MACX,IAAMr/B,EAAE,GAAG,IAAI;MACf,IAAMH,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAMyb,MAAM,GAAG5d,EAAE,CAACkH,OAAO,CAAC0W,MAAM;MAChC,IAAM5F,KAAK,GAAG,EAAE;MAChB,IAAInG,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,CAAC,CAAC;MAC3BD,MAAM,GAAIhS,GAAG,KAAK,CAAC,IAAIsC,GAAG,KAAK0P,MAAM,CAACxR,MAAM,GAAG,CAAC,GAAIwR,MAAM,GAAGA,MAAM,CAACyS,KAAK,CAACzkB,GAAG,EAAEsC,GAAG,GAAG,CAAC,CAAC;MACvFnC,EAAE,CAACk6D,WAAW,GAAGt6D,IAAI,CAACuC,GAAG,CAAC0P,MAAM,CAACxR,MAAM,IAAIud,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9D5d,EAAE,CAACi6D,WAAW,GAAGj6D,EAAE,CAACH,GAAG,IAAI+d,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;MAC5C,KAAK,IAAI9e,KAAK,GAAGe,GAAG,EAAEf,KAAK,IAAIqD,GAAG,EAAErD,KAAK,EAAE,EAAE;QAC3CkZ,KAAK,CAACtW,IAAI,CAAC;UAAC5C,KAAK,EAALA;QAAK,CAAC,CAAC;MACrB;MACA,OAAOkZ,KAAK;IACd;EAAC;IAAAnZ,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM6R,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,CAAC,CAAC;MAC7B,IAAIhT,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG+S,MAAM,CAACxR,MAAM,EAAE;QACvC,OAAOwR,MAAM,CAAC/S,KAAK,CAAC;MACtB;MACA,OAAOA,KAAK;IACd;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACfsb,IAAA,CAAAC,eAAA,CAAAs+C,aAAA,CAAAziD,SAAA,sBAAAnX,IAAA;MACA,IAAI,CAACD,EAAE,CAAC4Z,YAAY,CAAC,CAAC,EAAE;QACtB5Z,EAAE,CAAC0qB,cAAc,GAAG,CAAC1qB,EAAE,CAAC0qB,cAAc;MACxC;IACF;EAAC;IAAA7rB,GAAA;IAAAC,KAAA,EACD,SAAAiZ,iBAAiBjZ,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAI,OAAOlB,KAAK,KAAK,QAAQ,EAAE;QAC7BA,KAAK,GAAGkB,EAAE,CAACoR,KAAK,CAACtS,KAAK,CAAC;MACzB;MACA,OAAOA,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG5S,EAAE,CAAC2e,kBAAkB,CAAC,CAAC7f,KAAK,GAAGkB,EAAE,CAACi6D,WAAW,IAAIj6D,EAAE,CAACk6D,WAAW,CAAC;IAChG;EAAC;IAAAr7D,GAAA;IAAAC,KAAA,EACD,SAAAmZ,gBAAgB9O,KAAK,EAAE;MACrB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgY,KAAK,GAAGhY,EAAE,CAACgY,KAAK;MACtB,IAAI7O,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG6O,KAAK,CAAC3X,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAOL,EAAE,CAAC+X,gBAAgB,CAACC,KAAK,CAAC7O,KAAK,CAAC,CAACrK,KAAK,CAAC;IAChD;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE;MACtB,IAAMrjC,EAAE,GAAG,IAAI;MACf,OAAOJ,IAAI,CAACy6B,KAAK,CAACr6B,EAAE,CAACi6D,WAAW,GAAGj6D,EAAE,CAACujC,kBAAkB,CAACF,KAAK,CAAC,GAAGrjC,EAAE,CAACk6D,WAAW,CAAC;IACnF;EAAC;IAAAr7D,GAAA;IAAAC,KAAA,EACD,SAAA2c,aAAA,EAAe;MACb,OAAO,IAAI,CAAC/S,MAAM;IACpB;EAAC;EAAA,OAAAmxD,aAAA;AAAA,EAjFyBh9B,KAAK;AAmFjCg9B,aAAa,CAACvvD,EAAE,GAAG,UAAU;AAC7BuvD,aAAa,CAACpnE,QAAQ,GAAG;EACvBulB,KAAK,EAAE;IACL7gB,QAAQ,EAAE0iE,aAAa,CAACziD,SAAS,CAAC5D;EACpC;AACF,CAAC;AAED,SAAS8mD,eAAeA,CAACC,iBAAiB,EAAEC,SAAS,EAAE;EACrD,IAAMxiD,KAAK,GAAG,EAAE;EAChB,IAAMyiD,WAAW,GAAG,KAAK;EACzB,IAAO5iC,MAAM,GAA0E0iC,iBAAiB,CAAjG1iC,MAAM;IAAEgN,IAAI,GAAoE01B,iBAAiB,CAAzF11B,IAAI;IAAEhlC,GAAG,GAA+D06D,iBAAiB,CAAnF16D,GAAG;IAAEsC,GAAG,GAA0Do4D,iBAAiB,CAA9Ep4D,GAAG;IAAEu4D,SAAS,GAA+CH,iBAAiB,CAAzEG,SAAS;IAAErpD,KAAK,GAAwCkpD,iBAAiB,CAA9DlpD,KAAK;IAAEspD,QAAQ,GAA8BJ,iBAAiB,CAAvDI,QAAQ;IAAEC,SAAS,GAAmBL,iBAAiB,CAA7CK,SAAS;IAAEC,aAAa,GAAIN,iBAAiB,CAAlCM,aAAa;EACnF,IAAMtxC,IAAI,GAAGsb,IAAI,IAAI,CAAC;EACtB,IAAMi2B,SAAS,GAAGH,QAAQ,GAAG,CAAC;EAC9B,IAAYI,IAAI,GAAeP,SAAS,CAAjC36D,GAAG;IAAam7D,IAAI,GAAIR,SAAS,CAAtBr4D,GAAG;EACrB,IAAMsI,UAAU,GAAG,CAAC5W,aAAa,CAACgM,GAAG,CAAC;EACtC,IAAM6K,UAAU,GAAG,CAAC7W,aAAa,CAACsO,GAAG,CAAC;EACtC,IAAM84D,YAAY,GAAG,CAACpnE,aAAa,CAACwd,KAAK,CAAC;EAC1C,IAAM6pD,UAAU,GAAG,CAACF,IAAI,GAAGD,IAAI,KAAKH,SAAS,GAAG,CAAC,CAAC;EAClD,IAAIx5C,OAAO,GAAG7jB,OAAO,CAAC,CAACy9D,IAAI,GAAGD,IAAI,IAAID,SAAS,GAAGvxC,IAAI,CAAC,GAAGA,IAAI;EAC9D,IAAIxmB,MAAM,EAAEo4D,OAAO,EAAEC,OAAO,EAAEC,SAAS;EACvC,IAAIj6C,OAAO,GAAGq5C,WAAW,IAAI,CAAChwD,UAAU,IAAI,CAACC,UAAU,EAAE;IACvD,OAAO,CAAC;MAAC5L,KAAK,EAAEi8D;IAAI,CAAC,EAAE;MAACj8D,KAAK,EAAEk8D;IAAI,CAAC,CAAC;EACvC;EACAK,SAAS,GAAGz7D,IAAI,CAACk7B,IAAI,CAACkgC,IAAI,GAAG55C,OAAO,CAAC,GAAGxhB,IAAI,CAACoE,KAAK,CAAC+2D,IAAI,GAAG35C,OAAO,CAAC;EAClE,IAAIi6C,SAAS,GAAGP,SAAS,EAAE;IACzB15C,OAAO,GAAG7jB,OAAO,CAAC89D,SAAS,GAAGj6C,OAAO,GAAG05C,SAAS,GAAGvxC,IAAI,CAAC,GAAGA,IAAI;EAClE;EACA,IAAI,CAAC11B,aAAa,CAAC6mE,SAAS,CAAC,EAAE;IAC7B33D,MAAM,GAAGnD,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAEivC,SAAS,CAAC;IAChCt5C,OAAO,GAAGxhB,IAAI,CAACk7B,IAAI,CAAC1Z,OAAO,GAAGre,MAAM,CAAC,GAAGA,MAAM;EAChD;EACA,IAAI80B,MAAM,KAAK,OAAO,EAAE;IACtBsjC,OAAO,GAAGv7D,IAAI,CAACoE,KAAK,CAAC+2D,IAAI,GAAG35C,OAAO,CAAC,GAAGA,OAAO;IAC9Cg6C,OAAO,GAAGx7D,IAAI,CAACk7B,IAAI,CAACkgC,IAAI,GAAG55C,OAAO,CAAC,GAAGA,OAAO;EAC/C,CAAC,MAAM;IACL+5C,OAAO,GAAGJ,IAAI;IACdK,OAAO,GAAGJ,IAAI;EAChB;EACA,IAAIvwD,UAAU,IAAIC,UAAU,IAAIm6B,IAAI,IAAIpnC,WAAW,CAAC,CAAC0E,GAAG,GAAGtC,GAAG,IAAIglC,IAAI,EAAEzjB,OAAO,GAAG,IAAI,CAAC,EAAE;IACvFi6C,SAAS,GAAGz7D,IAAI,CAACy6B,KAAK,CAACz6B,IAAI,CAACC,GAAG,CAAC,CAACsC,GAAG,GAAGtC,GAAG,IAAIuhB,OAAO,EAAEu5C,QAAQ,CAAC,CAAC;IACjEv5C,OAAO,GAAG,CAACjf,GAAG,GAAGtC,GAAG,IAAIw7D,SAAS;IACjCF,OAAO,GAAGt7D,GAAG;IACbu7D,OAAO,GAAGj5D,GAAG;EACf,CAAC,MAAM,IAAI84D,YAAY,EAAE;IACvBE,OAAO,GAAG1wD,UAAU,GAAG5K,GAAG,GAAGs7D,OAAO;IACpCC,OAAO,GAAG1wD,UAAU,GAAGvI,GAAG,GAAGi5D,OAAO;IACpCC,SAAS,GAAGhqD,KAAK,GAAG,CAAC;IACrB+P,OAAO,GAAG,CAACg6C,OAAO,GAAGD,OAAO,IAAIE,SAAS;EAC3C,CAAC,MAAM;IACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAO,IAAI/5C,OAAO;IACzC,IAAIzjB,YAAY,CAAC09D,SAAS,EAAEz7D,IAAI,CAACy6B,KAAK,CAACghC,SAAS,CAAC,EAAEj6C,OAAO,GAAG,IAAI,CAAC,EAAE;MAClEi6C,SAAS,GAAGz7D,IAAI,CAACy6B,KAAK,CAACghC,SAAS,CAAC;IACnC,CAAC,MAAM;MACLA,SAAS,GAAGz7D,IAAI,CAACk7B,IAAI,CAACugC,SAAS,CAAC;IAClC;EACF;EACA,IAAMC,aAAa,GAAG17D,IAAI,CAACuC,GAAG,CAC5BtE,cAAc,CAACujB,OAAO,CAAC,EACvBvjB,cAAc,CAACs9D,OAAO,CACxB,CAAC;EACDp4D,MAAM,GAAGnD,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE53B,aAAa,CAAC6mE,SAAS,CAAC,GAAGY,aAAa,GAAGZ,SAAS,CAAC;EAC3ES,OAAO,GAAGv7D,IAAI,CAACy6B,KAAK,CAAC8gC,OAAO,GAAGp4D,MAAM,CAAC,GAAGA,MAAM;EAC/Cq4D,OAAO,GAAGx7D,IAAI,CAACy6B,KAAK,CAAC+gC,OAAO,GAAGr4D,MAAM,CAAC,GAAGA,MAAM;EAC/C,IAAInP,CAAC,GAAG,CAAC;EACT,IAAI6W,UAAU,EAAE;IACd,IAAIowD,aAAa,IAAIM,OAAO,KAAKt7D,GAAG,EAAE;MACpCmY,KAAK,CAACtW,IAAI,CAAC;QAAC5C,KAAK,EAAEe;MAAG,CAAC,CAAC;MACxB,IAAIs7D,OAAO,GAAGt7D,GAAG,EAAE;QACjBjM,CAAC,EAAE;MACL;MACA,IAAI+J,YAAY,CAACiC,IAAI,CAACy6B,KAAK,CAAC,CAAC8gC,OAAO,GAAGvnE,CAAC,GAAGwtB,OAAO,IAAIre,MAAM,CAAC,GAAGA,MAAM,EAAElD,GAAG,EAAE07D,iBAAiB,CAAC17D,GAAG,EAAEq7D,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;QACnI3mE,CAAC,EAAE;MACL;IACF,CAAC,MAAM,IAAIunE,OAAO,GAAGt7D,GAAG,EAAE;MACxBjM,CAAC,EAAE;IACL;EACF;EACA,OAAOA,CAAC,GAAGynE,SAAS,EAAE,EAAEznE,CAAC,EAAE;IACzBokB,KAAK,CAACtW,IAAI,CAAC;MAAC5C,KAAK,EAAEc,IAAI,CAACy6B,KAAK,CAAC,CAAC8gC,OAAO,GAAGvnE,CAAC,GAAGwtB,OAAO,IAAIre,MAAM,CAAC,GAAGA;IAAM,CAAC,CAAC;EAC5E;EACA,IAAI2H,UAAU,IAAImwD,aAAa,IAAIO,OAAO,KAAKj5D,GAAG,EAAE;IAClD,IAAIxE,YAAY,CAACqa,KAAK,CAACA,KAAK,CAAC3X,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,EAAEqD,GAAG,EAAEo5D,iBAAiB,CAACp5D,GAAG,EAAE+4D,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;MAC3GviD,KAAK,CAACA,KAAK,CAAC3X,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,GAAGqD,GAAG;IACrC,CAAC,MAAM;MACL6V,KAAK,CAACtW,IAAI,CAAC;QAAC5C,KAAK,EAAEqD;MAAG,CAAC,CAAC;IAC1B;EACF,CAAC,MAAM,IAAI,CAACuI,UAAU,IAAI0wD,OAAO,KAAKj5D,GAAG,EAAE;IACzC6V,KAAK,CAACtW,IAAI,CAAC;MAAC5C,KAAK,EAAEs8D;IAAO,CAAC,CAAC;EAC9B;EACA,OAAOpjD,KAAK;AACd;AACA,SAASujD,iBAAiBA,CAACz8D,KAAK,EAAEo8D,UAAU,EAAAM,KAAA,EAA6B;EAAA,IAA1B1hD,UAAU,GAAA0hD,KAAA,CAAV1hD,UAAU;IAAEye,WAAW,GAAAijC,KAAA,CAAXjjC,WAAW;EACpE,IAAMkjC,GAAG,GAAGxnE,SAAS,CAACskC,WAAW,CAAC;EAClC,IAAMhgB,KAAK,GAAG,CAACuB,UAAU,GAAGla,IAAI,CAACmgB,GAAG,CAAC07C,GAAG,CAAC,GAAG77D,IAAI,CAACigB,GAAG,CAAC47C,GAAG,CAAC,KAAK,KAAK;EACnE,IAAMp7D,MAAM,GAAG,IAAI,GAAG66D,UAAU,GAAG,CAAC,EAAE,GAAGp8D,KAAK,EAAEuB,MAAM;EACtD,OAAOT,IAAI,CAACC,GAAG,CAACq7D,UAAU,GAAG3iD,KAAK,EAAElY,MAAM,CAAC;AAC7C;AAAC,IACKq7D,eAAe,0BAAAC,OAAA;EAAA9gD,SAAA,CAAA6gD,eAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA7gD,YAAA,CAAA2gD,eAAA;EACnB,SAAAA,gBAAYn4D,GAAG,EAAE;IAAA,IAAAs4D,OAAA;IAAAx9D,eAAA,OAAAq9D,eAAA;IACfG,OAAA,GAAAD,QAAA,CAAA37D,IAAA,OAAMsD,GAAG;IACTs4D,OAAA,CAAK/7D,KAAK,GAAGnB,SAAS;IACtBk9D,OAAA,CAAKzzD,GAAG,GAAGzJ,SAAS;IACpBk9D,OAAA,CAAK5B,WAAW,GAAGt7D,SAAS;IAC5Bk9D,OAAA,CAAKC,SAAS,GAAGn9D,SAAS;IAC1Bk9D,OAAA,CAAK3B,WAAW,GAAG,CAAC;IAAC,OAAA2B,OAAA;EACvB;EAACj9D,YAAA,CAAA88D,eAAA;IAAA78D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAItV,aAAa,CAACsZ,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYxC,MAAM,KAAK,CAACwvD,QAAQ,CAAC,CAAChtD,GAAG,CAAC,EAAE;QACzE,OAAO,IAAI;MACb;MACA,OAAO,CAACA,GAAG;IACb;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAAi9D,uBAAA,EAAyB;MACvB,IAAM/7D,EAAE,GAAG,IAAI;MACf,IAAO+d,WAAW,GAAI/d,EAAE,CAACkH,OAAO,CAAzB6W,WAAW;MAClB,IAAAi+C,kBAAA,GAAiCh8D,EAAE,CAACuK,aAAa,CAAC,CAAC;QAA5CE,UAAU,GAAAuxD,kBAAA,CAAVvxD,UAAU;QAAEC,UAAU,GAAAsxD,kBAAA,CAAVtxD,UAAU;MAC7B,IAAK7K,GAAG,GAASG,EAAE,CAAdH,GAAG;QAAEsC,GAAG,GAAInC,EAAE,CAATmC,GAAG;MACb,IAAM85D,MAAM,GAAG,SAATA,MAAMA,CAAGnpE,CAAC;QAAA,OAAK+M,GAAG,GAAG4K,UAAU,GAAG5K,GAAG,GAAG/M,CAAC;MAAA,CAAC;MAChD,IAAMopE,MAAM,GAAG,SAATA,MAAMA,CAAGppE,CAAC;QAAA,OAAKqP,GAAG,GAAGuI,UAAU,GAAGvI,GAAG,GAAGrP,CAAC;MAAA,CAAC;MAChD,IAAIirB,WAAW,EAAE;QACf,IAAMo+C,OAAO,GAAGxoE,IAAI,CAACkM,GAAG,CAAC;QACzB,IAAMu8D,OAAO,GAAGzoE,IAAI,CAACwO,GAAG,CAAC;QACzB,IAAIg6D,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UAC9BF,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,MAAM,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UACrCH,MAAM,CAAC,CAAC,CAAC;QACX;MACF;MACA,IAAIp8D,GAAG,KAAKsC,GAAG,EAAE;QACf,IAAIyb,MAAM,GAAG,CAAC;QACd,IAAIzb,GAAG,IAAIwI,MAAM,CAAC0xD,gBAAgB,IAAIx8D,GAAG,IAAI8K,MAAM,CAAC2xD,gBAAgB,EAAE;UACpE1+C,MAAM,GAAGhe,IAAI,CAACkY,GAAG,CAAC3V,GAAG,GAAG,IAAI,CAAC;QAC/B;QACA+5D,MAAM,CAAC/5D,GAAG,GAAGyb,MAAM,CAAC;QACpB,IAAI,CAACG,WAAW,EAAE;UAChBk+C,MAAM,CAACp8D,GAAG,GAAG+d,MAAM,CAAC;QACtB;MACF;MACA5d,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAy9D,aAAA,EAAe;MACb,IAAMv8D,EAAE,GAAG,IAAI;MACf,IAAMw5B,QAAQ,GAAGx5B,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MACjC,IAAK0hB,aAAa,GAAcF,QAAQ,CAAnCE,aAAa;QAAE8iC,QAAQ,GAAIhjC,QAAQ,CAApBgjC,QAAQ;MAC5B,IAAI7B,QAAQ;MACZ,IAAI6B,QAAQ,EAAE;QACZ7B,QAAQ,GAAG/6D,IAAI,CAACk7B,IAAI,CAAC96B,EAAE,CAACmC,GAAG,GAAGq6D,QAAQ,CAAC,GAAG58D,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAACH,GAAG,GAAG28D,QAAQ,CAAC,GAAG,CAAC;MAC7E,CAAC,MAAM;QACL7B,QAAQ,GAAG36D,EAAE,CAACy8D,gBAAgB,CAAC,CAAC;QAChC/iC,aAAa,GAAGA,aAAa,IAAI,EAAE;MACrC;MACA,IAAIA,aAAa,EAAE;QACjBihC,QAAQ,GAAG/6D,IAAI,CAACC,GAAG,CAAC65B,aAAa,EAAEihC,QAAQ,CAAC;MAC9C;MACA,OAAOA,QAAQ;IACjB;EAAC;IAAA97D,GAAA;IAAAC,KAAA,EACD,SAAA29D,iBAAA,EAAmB;MACjB,OAAO9xD,MAAM,CAACE,iBAAiB;IACjC;EAAC;IAAAhM,GAAA;IAAAC,KAAA,EACD,SAAAugC,WAAA,EAAa;MACX,IAAMr/B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMsyB,QAAQ,GAAGtxB,IAAI,CAAC8P,KAAK;MAC3B,IAAI2iD,QAAQ,GAAG36D,EAAE,CAACu8D,YAAY,CAAC,CAAC;MAChC5B,QAAQ,GAAG/6D,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEw4D,QAAQ,CAAC;MAChC,IAAM+B,uBAAuB,GAAG;QAC9B/B,QAAQ,EAARA,QAAQ;QACR9iC,MAAM,EAAE3vB,IAAI,CAAC2vB,MAAM;QACnBh4B,GAAG,EAAEqI,IAAI,CAACrI,GAAG;QACbsC,GAAG,EAAE+F,IAAI,CAAC/F,GAAG;QACbu4D,SAAS,EAAElhC,QAAQ,CAACkhC,SAAS;QAC7B71B,IAAI,EAAErL,QAAQ,CAACgjC,QAAQ;QACvBnrD,KAAK,EAAEmoB,QAAQ,CAACnoB,KAAK;QACrBupD,SAAS,EAAE56D,EAAE,CAAC4nC,UAAU,CAAC,CAAC;QAC1B9tB,UAAU,EAAE9Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;QAC7B2e,WAAW,EAAEiB,QAAQ,CAACjB,WAAW,IAAI,CAAC;QACtCsiC,aAAa,EAAErhC,QAAQ,CAACqhC,aAAa,KAAK;MAC5C,CAAC;MACD,IAAML,SAAS,GAAGx6D,EAAE,CAACu9B,MAAM,IAAIv9B,EAAE;MACjC,IAAMgY,KAAK,GAAGsiD,eAAe,CAACoC,uBAAuB,EAAElC,SAAS,CAAC;MACjE,IAAItyD,IAAI,CAAC2vB,MAAM,KAAK,OAAO,EAAE;QAC3Bx6B,kBAAkB,CAAC2a,KAAK,EAAEhY,EAAE,EAAE,OAAO,CAAC;MACxC;MACA,IAAIkI,IAAI,CAACC,OAAO,EAAE;QAChB6P,KAAK,CAAC7P,OAAO,CAAC,CAAC;QACfnI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACmC,GAAG;QACjBnC,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACH,GAAG;MACjB,CAAC,MAAM;QACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;QACjBG,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MACjB;MACA,OAAO6V,KAAK;IACd;EAAC;IAAAnZ,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAMgY,KAAK,GAAGhY,EAAE,CAACgY,KAAK;MACtB,IAAIlY,KAAK,GAAGE,EAAE,CAACH,GAAG;MAClB,IAAIuI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MAChBmZ,IAAA,CAAAC,eAAA,CAAAmgD,eAAA,CAAAtkD,SAAA,sBAAAnX,IAAA;MACA,IAAID,EAAE,CAACkH,OAAO,CAAC0W,MAAM,IAAI5F,KAAK,CAAC3X,MAAM,EAAE;QACrC,IAAMud,MAAM,GAAG,CAACxV,GAAG,GAAGtI,KAAK,IAAIF,IAAI,CAACuC,GAAG,CAAC6V,KAAK,CAAC3X,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;QAChEP,KAAK,IAAI8d,MAAM;QACfxV,GAAG,IAAIwV,MAAM;MACf;MACA5d,EAAE,CAACi6D,WAAW,GAAGn6D,KAAK;MACtBE,EAAE,CAAC87D,SAAS,GAAG1zD,GAAG;MAClBpI,EAAE,CAACk6D,WAAW,GAAG9xD,GAAG,GAAGtI,KAAK;IAC9B;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOrK,YAAY,CAACqK,KAAK,EAAE,IAAI,CAACE,KAAK,CAACkI,OAAO,CAAC2b,MAAM,CAAC;IACvD;EAAC;EAAA,OAAA64C,eAAA;AAAA,EArH2B7+B,KAAK;AAAA,IAwH7B8/B,WAAW,0BAAAC,gBAAA;EAAA/hD,SAAA,CAAA8hD,WAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA9hD,YAAA,CAAA4hD,WAAA;EAAA,SAAAA,YAAA;IAAAt+D,eAAA,OAAAs+D,WAAA;IAAA,OAAAE,QAAA,CAAAh7D,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA+9D,WAAA;IAAA99D,GAAA;IAAAC,KAAA,EACf,SAAAogC,oBAAA,EAAsB;MACpB,IAAMl/B,EAAE,GAAG,IAAI;MACf,IAAA88D,cAAA,GAAmB98D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAAi9D,cAAA,CAAHj9D,GAAG;QAAEsC,GAAG,GAAA26D,cAAA,CAAH36D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGtM,cAAc,CAACsM,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACtCG,EAAE,CAACmC,GAAG,GAAG5O,cAAc,CAAC4O,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACtCnC,EAAE,CAAC+7D,sBAAsB,CAAC,CAAC;IAC7B;EAAC;IAAAl9D,GAAA;IAAAC,KAAA,EACD,SAAA29D,iBAAA,EAAmB;MACjB,IAAMz8D,EAAE,GAAG,IAAI;MACf,IAAM8Z,UAAU,GAAG9Z,EAAE,CAAC4Z,YAAY,CAAC,CAAC;MACpC,IAAMvZ,MAAM,GAAGyZ,UAAU,GAAG9Z,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAACkc,MAAM;MAChD,IAAMqc,WAAW,GAAGtkC,SAAS,CAAC+L,EAAE,CAACkH,OAAO,CAAC8Q,KAAK,CAACugB,WAAW,CAAC;MAC3D,IAAMhgB,KAAK,GAAG,CAACuB,UAAU,GAAGla,IAAI,CAACmgB,GAAG,CAACwY,WAAW,CAAC,GAAG34B,IAAI,CAACigB,GAAG,CAAC0Y,WAAW,CAAC,KAAK,KAAK;MACnF,IAAMsK,QAAQ,GAAG7iC,EAAE,CAACgjC,uBAAuB,CAAC,CAAC,CAAC;MAC9C,OAAOpjC,IAAI,CAACk7B,IAAI,CAACz6B,MAAM,GAAGT,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEgjC,QAAQ,CAACxG,UAAU,GAAG9jB,KAAK,CAAC,CAAC;IACtE;EAAC;IAAA1Z,GAAA;IAAAC,KAAA,EACD,SAAAiZ,iBAAiBjZ,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG,IAAI,CAAC+L,kBAAkB,CAAC,CAAC7f,KAAK,GAAG,IAAI,CAACm7D,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;IACtG;EAAC;IAAAr7D,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE;MACtB,OAAO,IAAI,CAAC42B,WAAW,GAAG,IAAI,CAAC12B,kBAAkB,CAACF,KAAK,CAAC,GAAG,IAAI,CAAC62B,WAAW;IAC7E;EAAC;EAAA,OAAAyC,WAAA;AAAA,EAtBuBjB,eAAe;AAwBzCiB,WAAW,CAACryD,EAAE,GAAG,QAAQ;AACzBqyD,WAAW,CAAClqE,QAAQ,GAAG;EACrBulB,KAAK,EAAE;IACL7gB,QAAQ,EAAEygC,KAAK,CAACZ,UAAU,CAACC;EAC7B;AACF,CAAC;AAED,SAAS8lC,OAAOA,CAACC,OAAO,EAAE;EACxB,IAAMp4D,MAAM,GAAGo4D,OAAO,GAAIp9D,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE7rB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACmmE,OAAO,CAAC,CAAC,CAAE;EACnE,OAAOp4D,MAAM,KAAK,CAAC;AACrB;AACA,SAASq4D,aAAaA,CAAC1C,iBAAiB,EAAEC,SAAS,EAAE;EACnD,IAAM0C,MAAM,GAAGt9D,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC2jE,SAAS,CAACr4D,GAAG,CAAC,CAAC;EAC/C,IAAMg7D,cAAc,GAAGv9D,IAAI,CAACk7B,IAAI,CAAC0/B,SAAS,CAACr4D,GAAG,GAAGvC,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAEyxC,MAAM,CAAC,CAAC;EACtE,IAAMllD,KAAK,GAAG,EAAE;EAChB,IAAIglD,OAAO,GAAG/lE,eAAe,CAACsjE,iBAAiB,CAAC16D,GAAG,EAAED,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE7rB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC2jE,SAAS,CAAC36D,GAAG,CAAC,CAAC,CAAC,CAAC;EACpG,IAAIu9D,GAAG,GAAGx9D,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACmmE,OAAO,CAAC,CAAC;EACpC,IAAIK,WAAW,GAAGz9D,IAAI,CAACoE,KAAK,CAACg5D,OAAO,GAAGp9D,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE2xC,GAAG,CAAC,CAAC;EACzD,IAAI1C,SAAS,GAAG0C,GAAG,GAAG,CAAC,GAAGx9D,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE7rB,IAAI,CAACkY,GAAG,CAACslD,GAAG,CAAC,CAAC,GAAG,CAAC;EACzD,GAAG;IACDplD,KAAK,CAACtW,IAAI,CAAC;MAAC5C,KAAK,EAAEk+D,OAAO;MAAEhkC,KAAK,EAAE+jC,OAAO,CAACC,OAAO;IAAC,CAAC,CAAC;IACrD,EAAEK,WAAW;IACb,IAAIA,WAAW,KAAK,EAAE,EAAE;MACtBA,WAAW,GAAG,CAAC;MACf,EAAED,GAAG;MACL1C,SAAS,GAAG0C,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG1C,SAAS;IACtC;IACAsC,OAAO,GAAGp9D,IAAI,CAACy6B,KAAK,CAACgjC,WAAW,GAAGz9D,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE2xC,GAAG,CAAC,GAAG1C,SAAS,CAAC,GAAGA,SAAS;EAC/E,CAAC,QAAQ0C,GAAG,GAAGF,MAAM,IAAKE,GAAG,KAAKF,MAAM,IAAIG,WAAW,GAAGF,cAAe;EACzE,IAAMG,QAAQ,GAAGrmE,eAAe,CAACsjE,iBAAiB,CAACp4D,GAAG,EAAE66D,OAAO,CAAC;EAChEhlD,KAAK,CAACtW,IAAI,CAAC;IAAC5C,KAAK,EAAEw+D,QAAQ;IAAEtkC,KAAK,EAAE+jC,OAAO,CAACC,OAAO;EAAC,CAAC,CAAC;EACtD,OAAOhlD,KAAK;AACd;AAAC,IACKulD,gBAAgB,0BAAAC,OAAA;EAAA3iD,SAAA,CAAA0iD,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA1iD,YAAA,CAAAwiD,gBAAA;EACpB,SAAAA,iBAAYh6D,GAAG,EAAE;IAAA,IAAAm6D,OAAA;IAAAr/D,eAAA,OAAAk/D,gBAAA;IACfG,OAAA,GAAAD,QAAA,CAAAx9D,IAAA,OAAMsD,GAAG;IACTm6D,OAAA,CAAK59D,KAAK,GAAGnB,SAAS;IACtB++D,OAAA,CAAKt1D,GAAG,GAAGzJ,SAAS;IACpB++D,OAAA,CAAKzD,WAAW,GAAGt7D,SAAS;IAC5B++D,OAAA,CAAKxD,WAAW,GAAG,CAAC;IAAC,OAAAwD,OAAA;EACvB;EAAC9+D,YAAA,CAAA2+D,gBAAA;IAAA1+D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAMrK,KAAK,GAAG48D,eAAe,CAACtkD,SAAS,CAAChG,KAAK,CAACvP,KAAK,CAAC,IAAI,EAAE,CAACsL,GAAG,EAAEhE,KAAK,CAAC,CAAC;MACvE,IAAIrK,KAAK,KAAK,CAAC,EAAE;QACf,IAAI,CAAC6+D,KAAK,GAAG,IAAI;QACjB,OAAOh/D,SAAS;MAClB;MACA,OAAOpL,cAAc,CAACuL,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,IAAI;IAC1D;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAogC,oBAAA,EAAsB;MACpB,IAAMl/B,EAAE,GAAG,IAAI;MACf,IAAA49D,cAAA,GAAmB59D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAA+9D,cAAA,CAAH/9D,GAAG;QAAEsC,GAAG,GAAAy7D,cAAA,CAAHz7D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGtM,cAAc,CAACsM,GAAG,CAAC,GAAGD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEtC,GAAG,CAAC,GAAG,IAAI;MACtDG,EAAE,CAACmC,GAAG,GAAG5O,cAAc,CAAC4O,GAAG,CAAC,GAAGvC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,GAAG,IAAI;MACtD,IAAInC,EAAE,CAACkH,OAAO,CAAC6W,WAAW,EAAE;QAC1B/d,EAAE,CAAC29D,KAAK,GAAG,IAAI;MACjB;MACA39D,EAAE,CAAC+7D,sBAAsB,CAAC,CAAC;IAC7B;EAAC;IAAAl9D,GAAA;IAAAC,KAAA,EACD,SAAAi9D,uBAAA,EAAyB;MACvB,IAAM/7D,EAAE,GAAG,IAAI;MACf,IAAA69D,kBAAA,GAAiC79D,EAAE,CAACuK,aAAa,CAAC,CAAC;QAA5CE,UAAU,GAAAozD,kBAAA,CAAVpzD,UAAU;QAAEC,UAAU,GAAAmzD,kBAAA,CAAVnzD,UAAU;MAC7B,IAAI7K,GAAG,GAAGG,EAAE,CAACH,GAAG;MAChB,IAAIsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAChB,IAAM85D,MAAM,GAAG,SAATA,MAAMA,CAAGnpE,CAAC;QAAA,OAAK+M,GAAG,GAAG4K,UAAU,GAAG5K,GAAG,GAAG/M,CAAC;MAAA,CAAC;MAChD,IAAMopE,MAAM,GAAG,SAATA,MAAMA,CAAGppE,CAAC;QAAA,OAAKqP,GAAG,GAAGuI,UAAU,GAAGvI,GAAG,GAAGrP,CAAC;MAAA,CAAC;MAChD,IAAMsqE,GAAG,GAAG,SAANA,GAAGA,CAAItqE,CAAC,EAAEsB,CAAC;QAAA,OAAKwL,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAE7rB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC/D,CAAC,CAAC,CAAC,GAAGsB,CAAC,CAAC;MAAA;MAC5D,IAAIyL,GAAG,KAAKsC,GAAG,EAAE;QACf,IAAItC,GAAG,IAAI,CAAC,EAAE;UACZo8D,MAAM,CAAC,CAAC,CAAC;UACTC,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,MAAM;UACLD,MAAM,CAACmB,GAAG,CAACv9D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UACpBq8D,MAAM,CAACkB,GAAG,CAACj7D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACtB;MACF;MACA,IAAItC,GAAG,IAAI,CAAC,EAAE;QACZo8D,MAAM,CAACmB,GAAG,CAACj7D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAIA,GAAG,IAAI,CAAC,EAAE;QACZ+5D,MAAM,CAACkB,GAAG,CAACv9D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAIG,EAAE,CAAC29D,KAAK,IAAI39D,EAAE,CAACH,GAAG,KAAKG,EAAE,CAAC+9B,aAAa,IAAIl+B,GAAG,KAAKu9D,GAAG,CAACp9D,EAAE,CAACH,GAAG,EAAE,CAAC,CAAC,EAAE;QACrEo8D,MAAM,CAACmB,GAAG,CAACv9D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAugC,WAAA,EAAa;MACX,IAAMr/B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMqzD,iBAAiB,GAAG;QACxB16D,GAAG,EAAEG,EAAE,CAAC69B,QAAQ;QAChB17B,GAAG,EAAEnC,EAAE,CAAC49B;MACV,CAAC;MACD,IAAM5lB,KAAK,GAAGilD,aAAa,CAAC1C,iBAAiB,EAAEv6D,EAAE,CAAC;MAClD,IAAIkI,IAAI,CAAC2vB,MAAM,KAAK,OAAO,EAAE;QAC3Bx6B,kBAAkB,CAAC2a,KAAK,EAAEhY,EAAE,EAAE,OAAO,CAAC;MACxC;MACA,IAAIkI,IAAI,CAACC,OAAO,EAAE;QAChB6P,KAAK,CAAC7P,OAAO,CAAC,CAAC;QACfnI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACmC,GAAG;QACjBnC,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACH,GAAG;MACjB,CAAC,MAAM;QACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;QACjBG,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MACjB;MACA,OAAO6V,KAAK;IACd;EAAC;IAAAnZ,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAKH,SAAS,GAAG,GAAG,GAAGlK,YAAY,CAACqK,KAAK,EAAE,IAAI,CAACE,KAAK,CAACkI,OAAO,CAAC2b,MAAM,CAAC;IACnF;EAAC;IAAAhkB,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAMF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACpByb,IAAA,CAAAC,eAAA,CAAAgiD,gBAAA,CAAAnmD,SAAA,sBAAAnX,IAAA;MACAD,EAAE,CAACi6D,WAAW,GAAGpjE,KAAK,CAACiJ,KAAK,CAAC;MAC7BE,EAAE,CAACk6D,WAAW,GAAGrjE,KAAK,CAACmJ,EAAE,CAACmC,GAAG,CAAC,GAAGtL,KAAK,CAACiJ,KAAK,CAAC;IAC/C;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAAiZ,iBAAiBjZ,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAIlB,KAAK,KAAKH,SAAS,IAAIG,KAAK,KAAK,CAAC,EAAE;QACtCA,KAAK,GAAGkB,EAAE,CAACH,GAAG;MAChB;MACA,IAAIf,KAAK,KAAK,IAAI,IAAI0d,KAAK,CAAC1d,KAAK,CAAC,EAAE;QAClC,OAAO8T,GAAG;MACZ;MACA,OAAO5S,EAAE,CAAC2e,kBAAkB,CAAC7f,KAAK,KAAKkB,EAAE,CAACH,GAAG,GACzC,CAAC,GACD,CAAChJ,KAAK,CAACiI,KAAK,CAAC,GAAGkB,EAAE,CAACi6D,WAAW,IAAIj6D,EAAE,CAACk6D,WAAW,CAAC;IACvD;EAAC;IAAAr7D,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE;MACtB,IAAMrjC,EAAE,GAAG,IAAI;MACf,IAAMsjC,OAAO,GAAGtjC,EAAE,CAACujC,kBAAkB,CAACF,KAAK,CAAC;MAC5C,OAAOzjC,IAAI,CAAC6rB,GAAG,CAAC,EAAE,EAAEzrB,EAAE,CAACi6D,WAAW,GAAG32B,OAAO,GAAGtjC,EAAE,CAACk6D,WAAW,CAAC;IAChE;EAAC;EAAA,OAAAqD,gBAAA;AAAA,EAtG4B1gC,KAAK;AAwGpC0gC,gBAAgB,CAACjzD,EAAE,GAAG,aAAa;AACnCizD,gBAAgB,CAAC9qE,QAAQ,GAAG;EAC1BulB,KAAK,EAAE;IACL7gB,QAAQ,EAAEygC,KAAK,CAACZ,UAAU,CAACW,WAAW;IACtCqB,KAAK,EAAE;MACLa,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASikC,qBAAqBA,CAAC51D,IAAI,EAAE;EACnC,IAAMsxB,QAAQ,GAAGtxB,IAAI,CAAC8P,KAAK;EAC3B,IAAIwhB,QAAQ,CAAC3R,OAAO,IAAI3f,IAAI,CAAC2f,OAAO,EAAE;IACpC,IAAM8I,OAAO,GAAG96B,SAAS,CAAC2jC,QAAQ,CAACH,eAAe,CAAC;IACnD,OAAOtmC,cAAc,CAACymC,QAAQ,CAAC2C,IAAI,IAAI3C,QAAQ,CAAC2C,IAAI,CAACx0B,IAAI,EAAElV,QAAQ,CAAC0pC,IAAI,CAACx0B,IAAI,CAAC,GAAGgpB,OAAO,CAACzU,MAAM;EACjG;EACA,OAAO,CAAC;AACV;AACA,SAAS6hD,gBAAgBA,CAACjwD,GAAG,EAAEquB,IAAI,EAAE5oB,KAAK,EAAE;EAC1CA,KAAK,GAAG1gB,OAAO,CAAC0gB,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;EACxC,OAAO;IACLne,CAAC,EAAE2I,YAAY,CAAC+P,GAAG,EAAEquB,IAAI,CAAC8G,MAAM,EAAE1vB,KAAK,CAAC;IACxC/f,CAAC,EAAE+f,KAAK,CAAClT,MAAM,GAAG87B,IAAI,CAACE;EACzB,CAAC;AACH;AACA,SAAS2hC,eAAeA,CAAC79C,KAAK,EAAE0M,GAAG,EAAEllB,IAAI,EAAE9H,GAAG,EAAEsC,GAAG,EAAE;EACnD,IAAIge,KAAK,KAAKtgB,GAAG,IAAIsgB,KAAK,KAAKhe,GAAG,EAAE;IAClC,OAAO;MACLrC,KAAK,EAAE+sB,GAAG,GAAIllB,IAAI,GAAG,CAAE;MACvBS,GAAG,EAAEykB,GAAG,GAAIllB,IAAI,GAAG;IACrB,CAAC;EACH,CAAC,MAAM,IAAIwY,KAAK,GAAGtgB,GAAG,IAAIsgB,KAAK,GAAGhe,GAAG,EAAE;IACrC,OAAO;MACLrC,KAAK,EAAE+sB,GAAG,GAAGllB,IAAI;MACjBS,GAAG,EAAEykB;IACP,CAAC;EACH;EACA,OAAO;IACL/sB,KAAK,EAAE+sB,GAAG;IACVzkB,GAAG,EAAEykB,GAAG,GAAGllB;EACb,CAAC;AACH;AACA,SAASs2D,kBAAkBA,CAACj2D,KAAK,EAAE;EACjC,IAAMk2D,cAAc,GAAG;IACrBhrE,CAAC,EAAE,CAAC;IACJlB,CAAC,EAAEgW,KAAK,CAACmU,KAAK;IACdnoB,CAAC,EAAE,CAAC;IACJpB,CAAC,EAAEoV,KAAK,CAACkU,MAAM,GAAGlU,KAAK,CAACk1B;EAC1B,CAAC;EACD,IAAMihC,cAAc,GAAG,CAAC,CAAC;EACzB,IAAMr9B,UAAU,GAAG,EAAE;EACrB,IAAMnQ,OAAO,GAAG,EAAE;EAClB,IAAMytC,UAAU,GAAGp2D,KAAK,CAAC8J,SAAS,CAAC,CAAC,CAACzR,MAAM;EAC3C,KAAK,IAAI3N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0rE,UAAU,EAAE1rE,CAAC,EAAE,EAAE;IACnC,IAAMwV,IAAI,GAAGF,KAAK,CAACd,OAAO,CAAC6gB,WAAW,CAACqW,UAAU,CAACp2B,KAAK,CAACq2D,oBAAoB,CAAC3rE,CAAC,CAAC,CAAC;IAChFi+B,OAAO,CAACj+B,CAAC,CAAC,GAAGwV,IAAI,CAACyoB,OAAO;IACzB,IAAMpI,aAAa,GAAGvgB,KAAK,CAACs2D,gBAAgB,CAAC5rE,CAAC,EAAEsV,KAAK,CAACu2D,WAAW,GAAG5tC,OAAO,CAACj+B,CAAC,CAAC,CAAC;IAC/E,IAAM8rE,MAAM,GAAGnmE,MAAM,CAAC6P,IAAI,CAACi0B,IAAI,CAAC;IAChC,IAAMk0B,QAAQ,GAAG0N,gBAAgB,CAAC/1D,KAAK,CAAC8F,GAAG,EAAE0wD,MAAM,EAAEx2D,KAAK,CAACy2D,YAAY,CAAC/rE,CAAC,CAAC,CAAC;IAC3EouC,UAAU,CAACpuC,CAAC,CAAC,GAAG29D,QAAQ;IACxB,IAAM1uB,YAAY,GAAG35B,KAAK,CAACsf,aAAa,CAAC50B,CAAC,CAAC;IAC3C,IAAMytB,KAAK,GAAG5oB,SAAS,CAACoqC,YAAY,CAAC;IACrC,IAAM+8B,OAAO,GAAGV,eAAe,CAAC79C,KAAK,EAAEoI,aAAa,CAACjzB,CAAC,EAAE+6D,QAAQ,CAACj7D,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC3E,IAAMupE,OAAO,GAAGX,eAAe,CAAC79C,KAAK,EAAEoI,aAAa,CAAC/yB,CAAC,EAAE66D,QAAQ,CAAC78D,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5E,IAAIkrE,OAAO,CAAC5+D,KAAK,GAAGo+D,cAAc,CAAChrE,CAAC,EAAE;MACpCgrE,cAAc,CAAChrE,CAAC,GAAGwrE,OAAO,CAAC5+D,KAAK;MAChCq+D,cAAc,CAACjrE,CAAC,GAAGyuC,YAAY;IACjC;IACA,IAAI+8B,OAAO,CAACt2D,GAAG,GAAG81D,cAAc,CAAClsE,CAAC,EAAE;MAClCksE,cAAc,CAAClsE,CAAC,GAAG0sE,OAAO,CAACt2D,GAAG;MAC9B+1D,cAAc,CAACnsE,CAAC,GAAG2vC,YAAY;IACjC;IACA,IAAIg9B,OAAO,CAAC7+D,KAAK,GAAGo+D,cAAc,CAAClqE,CAAC,EAAE;MACpCkqE,cAAc,CAAClqE,CAAC,GAAG2qE,OAAO,CAAC7+D,KAAK;MAChCq+D,cAAc,CAACnqE,CAAC,GAAG2tC,YAAY;IACjC;IACA,IAAIg9B,OAAO,CAACv2D,GAAG,GAAG81D,cAAc,CAACtrE,CAAC,EAAE;MAClCsrE,cAAc,CAACtrE,CAAC,GAAG+rE,OAAO,CAACv2D,GAAG;MAC9B+1D,cAAc,CAACvrE,CAAC,GAAG+uC,YAAY;IACjC;EACF;EACA35B,KAAK,CAAC42D,cAAc,CAAC52D,KAAK,CAACu2D,WAAW,EAAEL,cAAc,EAAEC,cAAc,CAAC;EACvEn2D,KAAK,CAAC62D,gBAAgB,GAAGC,oBAAoB,CAAC92D,KAAK,EAAE84B,UAAU,EAAEnQ,OAAO,CAAC;AAC3E;AACA,SAASmuC,oBAAoBA,CAAC92D,KAAK,EAAE84B,UAAU,EAAEnQ,OAAO,EAAE;EACxD,IAAMjwB,KAAK,GAAG,EAAE;EAChB,IAAM09D,UAAU,GAAGp2D,KAAK,CAAC8J,SAAS,CAAC,CAAC,CAACzR,MAAM;EAC3C,IAAM6H,IAAI,GAAGF,KAAK,CAACd,OAAO;EAC1B,IAAM63D,kBAAkB,GAAGjB,qBAAqB,CAAC51D,IAAI,CAAC;EACtD,IAAM82D,aAAa,GAAGh3D,KAAK,CAAC0f,6BAA6B,CAACxf,IAAI,CAAC8P,KAAK,CAAC7P,OAAO,GAAGH,KAAK,CAACnI,GAAG,GAAGmI,KAAK,CAAC7F,GAAG,CAAC;EACrG,KAAK,IAAIzP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0rE,UAAU,EAAE1rE,CAAC,EAAE,EAAE;IACnC,IAAMusE,KAAK,GAAIvsE,CAAC,KAAK,CAAC,GAAGqsE,kBAAkB,GAAG,CAAC,GAAG,CAAE;IACpD,IAAMG,kBAAkB,GAAGl3D,KAAK,CAACs2D,gBAAgB,CAAC5rE,CAAC,EAAEssE,aAAa,GAAGC,KAAK,GAAGtuC,OAAO,CAACj+B,CAAC,CAAC,CAAC;IACxF,IAAMytB,KAAK,GAAG5oB,SAAS,CAACyQ,KAAK,CAACsf,aAAa,CAAC50B,CAAC,CAAC,CAAC;IAC/C,IAAMiV,IAAI,GAAGm5B,UAAU,CAACpuC,CAAC,CAAC;IAC1B,IAAM8C,CAAC,GAAG2pE,SAAS,CAACD,kBAAkB,CAAC1pE,CAAC,EAAEmS,IAAI,CAACnU,CAAC,EAAE2sB,KAAK,CAAC;IACxD,IAAMklB,SAAS,GAAG+5B,oBAAoB,CAACj/C,KAAK,CAAC;IAC7C,IAAMxX,IAAI,GAAG02D,gBAAgB,CAACH,kBAAkB,CAAC5pE,CAAC,EAAEqS,IAAI,CAACvS,CAAC,EAAEiwC,SAAS,CAAC;IACtE3kC,KAAK,CAACgB,IAAI,CAAC;MACTpM,CAAC,EAAE4pE,kBAAkB,CAAC5pE,CAAC;MACvBE,CAAC,EAADA,CAAC;MACD6vC,SAAS,EAATA,SAAS;MACT18B,IAAI,EAAJA,IAAI;MACJH,GAAG,EAAEhT,CAAC;MACNiT,KAAK,EAAEE,IAAI,GAAGhB,IAAI,CAACvS,CAAC;MACpBsT,MAAM,EAAElT,CAAC,GAAGmS,IAAI,CAACnU;IACnB,CAAC,CAAC;EACJ;EACA,OAAOkN,KAAK;AACd;AACA,SAAS0+D,oBAAoBA,CAACj/C,KAAK,EAAE;EACnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;IAChC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;IACtB,OAAO,MAAM;EACf;EACA,OAAO,OAAO;AAChB;AACA,SAASk/C,gBAAgBA,CAAC/pE,CAAC,EAAEF,CAAC,EAAE6jC,KAAK,EAAE;EACrC,IAAIA,KAAK,KAAK,OAAO,EAAE;IACrB3jC,CAAC,IAAIF,CAAC;EACR,CAAC,MAAM,IAAI6jC,KAAK,KAAK,QAAQ,EAAE;IAC7B3jC,CAAC,IAAKF,CAAC,GAAG,CAAE;EACd;EACA,OAAOE,CAAC;AACV;AACA,SAAS6pE,SAASA,CAAC3pE,CAAC,EAAEhC,CAAC,EAAE2sB,KAAK,EAAE;EAC9B,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,GAAG,EAAE;IACjC3qB,CAAC,IAAKhC,CAAC,GAAG,CAAE;EACd,CAAC,MAAM,IAAI2sB,KAAK,GAAG,GAAG,IAAIA,KAAK,GAAG,EAAE,EAAE;IACpC3qB,CAAC,IAAIhC,CAAC;EACR;EACA,OAAOgC,CAAC;AACV;AACA,SAAS8pE,eAAeA,CAACt3D,KAAK,EAAEsxD,UAAU,EAAE;EAC1C,IAAOxrD,GAAG,GAA4B9F,KAAK,CAApC8F,GAAG;IAAYia,WAAW,GAAK/f,KAAK,CAA/Bd,OAAO,CAAG6gB,WAAW;EACjC,KAAK,IAAIr1B,CAAC,GAAG4mE,UAAU,GAAG,CAAC,EAAE5mE,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,IAAMoyC,WAAW,GAAG/c,WAAW,CAACqW,UAAU,CAACp2B,KAAK,CAACq2D,oBAAoB,CAAC3rE,CAAC,CAAC,CAAC;IACzE,IAAM8rE,MAAM,GAAGnmE,MAAM,CAACysC,WAAW,CAAC3I,IAAI,CAAC;IACvC,IAAAojC,qBAAA,GAAoDv3D,KAAK,CAAC62D,gBAAgB,CAACnsE,CAAC,CAAC;MAAtE4C,CAAC,GAAAiqE,qBAAA,CAADjqE,CAAC;MAAEE,CAAC,GAAA+pE,qBAAA,CAAD/pE,CAAC;MAAE6vC,SAAS,GAAAk6B,qBAAA,CAATl6B,SAAS;MAAE18B,IAAI,GAAA42D,qBAAA,CAAJ52D,IAAI;MAAEH,GAAG,GAAA+2D,qBAAA,CAAH/2D,GAAG;MAAEC,KAAK,GAAA82D,qBAAA,CAAL92D,KAAK;MAAEC,MAAM,GAAA62D,qBAAA,CAAN72D,MAAM;IAChD,IAAO0wB,aAAa,GAAI0L,WAAW,CAA5B1L,aAAa;IACpB,IAAI,CAACvlC,aAAa,CAACulC,aAAa,CAAC,EAAE;MACjC,IAAMzI,OAAO,GAAG96B,SAAS,CAACivC,WAAW,CAACzL,eAAe,CAAC;MACtDvrB,GAAG,CAAC6V,SAAS,GAAGyV,aAAa;MAC7BtrB,GAAG,CAACy4B,QAAQ,CAAC59B,IAAI,GAAGgoB,OAAO,CAAChoB,IAAI,EAAEH,GAAG,GAAGmoB,OAAO,CAACnoB,GAAG,EAAEC,KAAK,GAAGE,IAAI,GAAGgoB,OAAO,CAACxU,KAAK,EAAEzT,MAAM,GAAGF,GAAG,GAAGmoB,OAAO,CAACzU,MAAM,CAAC;IACnH;IACAjkB,UAAU,CACR6V,GAAG,EACH9F,KAAK,CAACy2D,YAAY,CAAC/rE,CAAC,CAAC,EACrB4C,CAAC,EACDE,CAAC,GAAIgpE,MAAM,CAACniC,UAAU,GAAG,CAAE,EAC3BmiC,MAAM,EACN;MACEjsE,KAAK,EAAEuyC,WAAW,CAACvyC,KAAK;MACxB8yC,SAAS,EAAEA,SAAS;MACpBG,YAAY,EAAE;IAChB,CACF,CAAC;EACH;AACF;AACA,SAASg6B,cAAcA,CAACx3D,KAAK,EAAE8W,MAAM,EAAEgJ,QAAQ,EAAEwxC,UAAU,EAAE;EAC3D,IAAOxrD,GAAG,GAAI9F,KAAK,CAAZ8F,GAAG;EACV,IAAIga,QAAQ,EAAE;IACZha,GAAG,CAAC6U,GAAG,CAAC3a,KAAK,CAACmf,OAAO,EAAEnf,KAAK,CAACof,OAAO,EAAEtI,MAAM,EAAE,CAAC,EAAEvqB,GAAG,CAAC;EACvD,CAAC,MAAM;IACL,IAAIg0B,aAAa,GAAGvgB,KAAK,CAACs2D,gBAAgB,CAAC,CAAC,EAAEx/C,MAAM,CAAC;IACrDhR,GAAG,CAACm5B,MAAM,CAAC1e,aAAa,CAACjzB,CAAC,EAAEizB,aAAa,CAAC/yB,CAAC,CAAC;IAC5C,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4mE,UAAU,EAAE5mE,CAAC,EAAE,EAAE;MACnC61B,aAAa,GAAGvgB,KAAK,CAACs2D,gBAAgB,CAAC5rE,CAAC,EAAEosB,MAAM,CAAC;MACjDhR,GAAG,CAACo5B,MAAM,CAAC3e,aAAa,CAACjzB,CAAC,EAAEizB,aAAa,CAAC/yB,CAAC,CAAC;IAC9C;EACF;AACF;AACA,SAASiqE,cAAcA,CAACz3D,KAAK,EAAE03D,YAAY,EAAE5gD,MAAM,EAAEw6C,UAAU,EAAE;EAC/D,IAAMxrD,GAAG,GAAG9F,KAAK,CAAC8F,GAAG;EACrB,IAAMga,QAAQ,GAAG43C,YAAY,CAAC53C,QAAQ;EACtC,IAAOv1B,KAAK,GAAemtE,YAAY,CAAhCntE,KAAK;IAAEwxB,SAAS,GAAI27C,YAAY,CAAzB37C,SAAS;EACvB,IAAK,CAAC+D,QAAQ,IAAI,CAACwxC,UAAU,IAAK,CAAC/mE,KAAK,IAAI,CAACwxB,SAAS,IAAIjF,MAAM,GAAG,CAAC,EAAE;IACpE;EACF;EACAhR,GAAG,CAACw4B,IAAI,CAAC,CAAC;EACVx4B,GAAG,CAAC+V,WAAW,GAAGtxB,KAAK;EACvBub,GAAG,CAACiW,SAAS,GAAGA,SAAS;EACzBjW,GAAG,CAACg5B,WAAW,CAAC44B,YAAY,CAACrnC,UAAU,CAAC;EACxCvqB,GAAG,CAACi5B,cAAc,GAAG24B,YAAY,CAACpnC,gBAAgB;EAClDxqB,GAAG,CAACk5B,SAAS,CAAC,CAAC;EACfw4B,cAAc,CAACx3D,KAAK,EAAE8W,MAAM,EAAEgJ,QAAQ,EAAEwxC,UAAU,CAAC;EACnDxrD,GAAG,CAAC2qC,SAAS,CAAC,CAAC;EACf3qC,GAAG,CAACq5B,MAAM,CAAC,CAAC;EACZr5B,GAAG,CAAC04B,OAAO,CAAC,CAAC;AACf;AACA,SAASm5B,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAO3qE,QAAQ,CAAC2qE,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC;AACpC;AACA,SAASC,uBAAuBA,CAAChzD,MAAM,EAAE1D,KAAK,EAAEoK,KAAK,EAAE;EACrD,OAAOhO,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C0G,KAAK,EAALA,KAAK;IACLpK,KAAK,EAALA,KAAK;IACLhK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AAAC,IACK2gE,iBAAiB,0BAAAC,iBAAA;EAAAllD,SAAA,CAAAilD,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAjlD,YAAA,CAAA+kD,iBAAA;EACrB,SAAAA,kBAAYv8D,GAAG,EAAE;IAAA,IAAA08D,OAAA;IAAA5hE,eAAA,OAAAyhE,iBAAA;IACfG,OAAA,GAAAD,QAAA,CAAA//D,IAAA,OAAMsD,GAAG;IACT08D,OAAA,CAAK94C,OAAO,GAAGxoB,SAAS;IACxBshE,OAAA,CAAK74C,OAAO,GAAGzoB,SAAS;IACxBshE,OAAA,CAAK1B,WAAW,GAAG5/D,SAAS;IAC5BshE,OAAA,CAAKxB,YAAY,GAAG,EAAE;IACtBwB,OAAA,CAAKpB,gBAAgB,GAAG,EAAE;IAAC,OAAAoB,OAAA;EAC7B;EAACrhE,YAAA,CAAAkhE,iBAAA;IAAAjhE,GAAA;IAAAC,KAAA,EACD,SAAAigC,cAAA,EAAgB;MACd,IAAM/+B,EAAE,GAAG,IAAI;MACfA,EAAE,CAACmc,KAAK,GAAGnc,EAAE,CAAC4hB,QAAQ;MACtB5hB,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAAC6hB,SAAS;MACxB7hB,EAAE,CAACk9B,UAAU,GAAG4gC,qBAAqB,CAAC99D,EAAE,CAACkH,OAAO,CAAC,GAAG,CAAC;MACrDlH,EAAE,CAACmnB,OAAO,GAAGvnB,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAACmc,KAAK,GAAG,CAAC,CAAC;MACrCnc,EAAE,CAAConB,OAAO,GAAGxnB,IAAI,CAACoE,KAAK,CAAC,CAAChE,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAACk9B,UAAU,IAAI,CAAC,CAAC;MACxDl9B,EAAE,CAACu+D,WAAW,GAAG3+D,IAAI,CAACC,GAAG,CAACG,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAACk9B,UAAU,EAAEl9B,EAAE,CAACmc,KAAK,CAAC,GAAG,CAAC;IACpE;EAAC;IAAAtd,GAAA;IAAAC,KAAA,EACD,SAAAogC,oBAAA,EAAsB;MACpB,IAAMl/B,EAAE,GAAG,IAAI;MACf,IAAAkgE,cAAA,GAAmBlgE,EAAE,CAAC6S,SAAS,CAAC,KAAK,CAAC;QAA/BhT,GAAG,GAAAqgE,cAAA,CAAHrgE,GAAG;QAAEsC,GAAG,GAAA+9D,cAAA,CAAH/9D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGtM,cAAc,CAACsM,GAAG,CAAC,IAAI,CAAC2c,KAAK,CAAC3c,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACrDG,EAAE,CAACmC,GAAG,GAAG5O,cAAc,CAAC4O,GAAG,CAAC,IAAI,CAACqa,KAAK,CAACra,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACrDnC,EAAE,CAAC+7D,sBAAsB,CAAC,CAAC;IAC7B;EAAC;IAAAl9D,GAAA;IAAAC,KAAA,EACD,SAAA29D,iBAAA,EAAmB;MACjB,OAAO78D,IAAI,CAACk7B,IAAI,CAAC,IAAI,CAACyjC,WAAW,GAAGT,qBAAqB,CAAC,IAAI,CAAC52D,OAAO,CAAC,CAAC;IAC1E;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAA2hC,mBAAmBzoB,KAAK,EAAE;MACxB,IAAMhY,EAAE,GAAG,IAAI;MACf07D,eAAe,CAACtkD,SAAS,CAACqpB,kBAAkB,CAACxgC,IAAI,CAACD,EAAE,EAAEgY,KAAK,CAAC;MAC5DhY,EAAE,CAACy+D,YAAY,GAAGz+D,EAAE,CAAC8R,SAAS,CAAC,CAAC,CAAC0R,GAAG,CAAC,UAAC1kB,KAAK,EAAEqK,KAAK,EAAK;QACrD,IAAMoK,KAAK,GAAGpc,QAAQ,CAAC6I,EAAE,CAACkH,OAAO,CAAC6gB,WAAW,CAAC5wB,QAAQ,EAAE,CAAC2H,KAAK,EAAEqK,KAAK,CAAC,EAAEnJ,EAAE,CAAC;QAC3E,OAAOuT,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;MAC1C,CAAC,CAAC;IACJ;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAAghC,IAAA,EAAM;MACJ,IAAM9/B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAIgB,IAAI,CAAC2f,OAAO,IAAI3f,IAAI,CAAC6f,WAAW,CAACF,OAAO,EAAE;QAC5Co2C,kBAAkB,CAACj+D,EAAE,CAAC;MACxB,CAAC,MAAM;QACLA,EAAE,CAACmgE,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/B;IACF;EAAC;IAAAthE,GAAA;IAAAC,KAAA,EACD,SAAA8/D,eAAewB,qBAAqB,EAAElC,cAAc,EAAEC,cAAc,EAAE;MACpE,IAAMn+D,EAAE,GAAG,IAAI;MACf,IAAIqgE,mBAAmB,GAAGnC,cAAc,CAAChrE,CAAC,GAAG0M,IAAI,CAACmgB,GAAG,CAACo+C,cAAc,CAACjrE,CAAC,CAAC;MACvE,IAAIotE,oBAAoB,GAAG1gE,IAAI,CAACuC,GAAG,CAAC+7D,cAAc,CAAClsE,CAAC,GAAGgO,EAAE,CAACmc,KAAK,EAAE,CAAC,CAAC,GAAGvc,IAAI,CAACmgB,GAAG,CAACo+C,cAAc,CAACnsE,CAAC,CAAC;MAChG,IAAIuuE,kBAAkB,GAAG,CAACrC,cAAc,CAAClqE,CAAC,GAAG4L,IAAI,CAACigB,GAAG,CAACs+C,cAAc,CAACnqE,CAAC,CAAC;MACvE,IAAIwsE,qBAAqB,GAAG,CAAC5gE,IAAI,CAACuC,GAAG,CAAC+7D,cAAc,CAACtrE,CAAC,IAAIoN,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAACk9B,UAAU,CAAC,EAAE,CAAC,CAAC,GAAGt9B,IAAI,CAACigB,GAAG,CAACs+C,cAAc,CAACvrE,CAAC,CAAC;MACrHytE,mBAAmB,GAAGV,YAAY,CAACU,mBAAmB,CAAC;MACvDC,oBAAoB,GAAGX,YAAY,CAACW,oBAAoB,CAAC;MACzDC,kBAAkB,GAAGZ,YAAY,CAACY,kBAAkB,CAAC;MACrDC,qBAAqB,GAAGb,YAAY,CAACa,qBAAqB,CAAC;MAC3DxgE,EAAE,CAACu+D,WAAW,GAAG3+D,IAAI,CAACuC,GAAG,CAACi+D,qBAAqB,GAAG,CAAC,EAAExgE,IAAI,CAACC,GAAG,CAC3DD,IAAI,CAACoE,KAAK,CAACo8D,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAoB,IAAI,CAAC,CAAC,EACpF1gE,IAAI,CAACoE,KAAK,CAACo8D,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC;MACxFxgE,EAAE,CAACmgE,cAAc,CAACE,mBAAmB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,qBAAqB,CAAC;IACzG;EAAC;IAAA3hE,GAAA;IAAAC,KAAA,EACD,SAAAqhE,eAAeM,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;MACvE,IAAM5gE,EAAE,GAAG,IAAI;MACf,IAAM6gE,QAAQ,GAAG7gE,EAAE,CAACmc,KAAK,GAAGukD,aAAa,GAAG1gE,EAAE,CAACu+D,WAAW;MAC1D,IAAMuC,OAAO,GAAGL,YAAY,GAAGzgE,EAAE,CAACu+D,WAAW;MAC7C,IAAMwC,MAAM,GAAGJ,WAAW,GAAG3gE,EAAE,CAACu+D,WAAW;MAC3C,IAAMyC,SAAS,GAAIhhE,EAAE,CAACkc,MAAM,GAAGlc,EAAE,CAACk9B,UAAU,GAAI0jC,cAAc,GAAG5gE,EAAE,CAACu+D,WAAW;MAC/Ev+D,EAAE,CAACmnB,OAAO,GAAGvnB,IAAI,CAACoE,KAAK,CAAE,CAAC88D,OAAO,GAAGD,QAAQ,IAAI,CAAC,GAAI7gE,EAAE,CAAC2I,IAAI,CAAC;MAC7D3I,EAAE,CAAConB,OAAO,GAAGxnB,IAAI,CAACoE,KAAK,CAAE,CAAC+8D,MAAM,GAAGC,SAAS,IAAI,CAAC,GAAIhhE,EAAE,CAACwI,GAAG,GAAGxI,EAAE,CAACk9B,UAAU,CAAC;IAC9E;EAAC;IAAAr+B,GAAA;IAAAC,KAAA,EACD,SAAAwoB,cAAcne,KAAK,EAAE;MACnB,IAAM83D,eAAe,GAAG1sE,GAAG,GAAG,IAAI,CAACud,SAAS,CAAC,CAAC,CAACzR,MAAM;MACrD,IAAMqf,UAAU,GAAG,IAAI,CAACxY,OAAO,CAACwY,UAAU,IAAI,CAAC;MAC/C,OAAOnjB,eAAe,CAAC4M,KAAK,GAAG83D,eAAe,GAAGhtE,SAAS,CAACyrB,UAAU,CAAC,CAAC;IACzE;EAAC;IAAA7gB,GAAA;IAAAC,KAAA,EACD,SAAA4oB,8BAA8B5oB,KAAK,EAAE;MACnC,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAInM,aAAa,CAACiL,KAAK,CAAC,EAAE;QACxB,OAAO8T,GAAG;MACZ;MACA,IAAMsuD,aAAa,GAAGlhE,EAAE,CAACu+D,WAAW,IAAIv+D,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;MACxD,IAAIG,EAAE,CAACkH,OAAO,CAACiB,OAAO,EAAE;QACtB,OAAO,CAACnI,EAAE,CAACmC,GAAG,GAAGrD,KAAK,IAAIoiE,aAAa;MACzC;MACA,OAAO,CAACpiE,KAAK,GAAGkB,EAAE,CAACH,GAAG,IAAIqhE,aAAa;IACzC;EAAC;IAAAriE,GAAA;IAAAC,KAAA,EACD,SAAAqiE,8BAA8Bh1C,QAAQ,EAAE;MACtC,IAAIt4B,aAAa,CAACs4B,QAAQ,CAAC,EAAE;QAC3B,OAAOvZ,GAAG;MACZ;MACA,IAAM5S,EAAE,GAAG,IAAI;MACf,IAAMohE,cAAc,GAAGj1C,QAAQ,IAAInsB,EAAE,CAACu+D,WAAW,IAAIv+D,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC,CAAC;MACtE,OAAOG,EAAE,CAACkH,OAAO,CAACiB,OAAO,GAAGnI,EAAE,CAACmC,GAAG,GAAGi/D,cAAc,GAAGphE,EAAE,CAACH,GAAG,GAAGuhE,cAAc;IAC/E;EAAC;IAAAviE,GAAA;IAAAC,KAAA,EACD,SAAAu/D,qBAAqBl1D,KAAK,EAAE;MAC1B,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAM+nB,WAAW,GAAG/nB,EAAE,CAACy+D,YAAY,IAAI,EAAE;MACzC,IAAIt1D,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG4e,WAAW,CAAC1nB,MAAM,EAAE;QAC5C,IAAMghE,UAAU,GAAGt5C,WAAW,CAAC5e,KAAK,CAAC;QACrC,OAAO02D,uBAAuB,CAAC7/D,EAAE,CAACkR,UAAU,CAAC,CAAC,EAAE/H,KAAK,EAAEk4D,UAAU,CAAC;MACpE;IACF;EAAC;IAAAxiE,GAAA;IAAAC,KAAA,EACD,SAAAw/D,iBAAiBn1D,KAAK,EAAEm4D,kBAAkB,EAAE;MAC1C,IAAMthE,EAAE,GAAG,IAAI;MACf,IAAMmgB,KAAK,GAAGngB,EAAE,CAACsnB,aAAa,CAACne,KAAK,CAAC,GAAGtU,OAAO;MAC/C,OAAO;QACLS,CAAC,EAAEsK,IAAI,CAACigB,GAAG,CAACM,KAAK,CAAC,GAAGmhD,kBAAkB,GAAGthE,EAAE,CAACmnB,OAAO;QACpD3xB,CAAC,EAAEoK,IAAI,CAACmgB,GAAG,CAACI,KAAK,CAAC,GAAGmhD,kBAAkB,GAAGthE,EAAE,CAAConB,OAAO;QACpDjH,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAthB,GAAA;IAAAC,KAAA,EACD,SAAA0pB,yBAAyBrf,KAAK,EAAErK,KAAK,EAAE;MACrC,OAAO,IAAI,CAACw/D,gBAAgB,CAACn1D,KAAK,EAAE,IAAI,CAACue,6BAA6B,CAAC5oB,KAAK,CAAC,CAAC;IAChF;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAyiE,gBAAgBp4D,KAAK,EAAE;MACrB,OAAO,IAAI,CAACqf,wBAAwB,CAACrf,KAAK,IAAI,CAAC,EAAE,IAAI,CAACq6B,YAAY,CAAC,CAAC,CAAC;IACvE;EAAC;IAAA3kC,GAAA;IAAAC,KAAA,EACD,SAAA0iE,sBAAsBr4D,KAAK,EAAE;MAC3B,IAAAs4D,qBAAA,GAAmC,IAAI,CAAC5C,gBAAgB,CAAC11D,KAAK,CAAC;QAAxDR,IAAI,GAAA84D,qBAAA,CAAJ94D,IAAI;QAAEH,GAAG,GAAAi5D,qBAAA,CAAHj5D,GAAG;QAAEC,KAAK,GAAAg5D,qBAAA,CAALh5D,KAAK;QAAEC,MAAM,GAAA+4D,qBAAA,CAAN/4D,MAAM;MAC/B,OAAO;QACLC,IAAI,EAAJA,IAAI;QACJH,GAAG,EAAHA,GAAG;QACHC,KAAK,EAALA,KAAK;QACLC,MAAM,EAANA;MACF,CAAC;IACH;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAAunC,eAAA,EAAiB;MACf,IAAMrmC,EAAE,GAAG,IAAI;MACf,IAAA0hE,YAAA,GAA4C1hE,EAAE,CAACkH,OAAO;QAA/C0c,eAAe,GAAA89C,YAAA,CAAf99C,eAAe;QAASkE,QAAQ,GAAA45C,YAAA,CAAf7jD,IAAI,CAAGiK,QAAQ;MACvC,IAAIlE,eAAe,EAAE;QACnB,IAAM9V,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;QAClBA,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACVx4B,GAAG,CAACk5B,SAAS,CAAC,CAAC;QACfw4B,cAAc,CAACx/D,EAAE,EAAEA,EAAE,CAAC0nB,6BAA6B,CAAC1nB,EAAE,CAAC87D,SAAS,CAAC,EAAEh0C,QAAQ,EAAE9nB,EAAE,CAAC8R,SAAS,CAAC,CAAC,CAACzR,MAAM,CAAC;QACnGyN,GAAG,CAAC2qC,SAAS,CAAC,CAAC;QACf3qC,GAAG,CAAC6V,SAAS,GAAGC,eAAe;QAC/B9V,GAAG,CAAC2a,IAAI,CAAC,CAAC;QACV3a,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf;IACF;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAA4nC,SAAA,EAAW;MACT,IAAM1mC,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAO0gB,UAAU,GAAU1f,IAAI,CAAxB0f,UAAU;QAAE/J,IAAI,GAAI3V,IAAI,CAAZ2V,IAAI;MACvB,IAAMy7C,UAAU,GAAGt5D,EAAE,CAAC8R,SAAS,CAAC,CAAC,CAACzR,MAAM;MACxC,IAAI3N,CAAC,EAAEkrB,MAAM,EAAEkN,QAAQ;MACvB,IAAI5iB,IAAI,CAAC6f,WAAW,CAACF,OAAO,EAAE;QAC5By3C,eAAe,CAACt/D,EAAE,EAAEs5D,UAAU,CAAC;MACjC;MACA,IAAIz7C,IAAI,CAACgK,OAAO,EAAE;QAChB7nB,EAAE,CAACgY,KAAK,CAACxY,OAAO,CAAC,UAACuB,IAAI,EAAEoI,KAAK,EAAK;UAChC,IAAIA,KAAK,KAAK,CAAC,EAAE;YACfyU,MAAM,GAAG5d,EAAE,CAAC0nB,6BAA6B,CAAC3mB,IAAI,CAACjC,KAAK,CAAC;YACrD,IAAMgmC,WAAW,GAAGjnB,IAAI,CAACugB,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,GAAG,CAAC,CAAC,CAAC;YAC7Ds2D,cAAc,CAACz/D,EAAE,EAAE8kC,WAAW,EAAElnB,MAAM,EAAE07C,UAAU,CAAC;UACrD;QACF,CAAC,CAAC;MACJ;MACA,IAAI1xC,UAAU,CAACC,OAAO,EAAE;QACtB/Z,GAAG,CAACw4B,IAAI,CAAC,CAAC;QACV,KAAK5zC,CAAC,GAAGsN,EAAE,CAAC8R,SAAS,CAAC,CAAC,CAACzR,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC/C,IAAMoyC,WAAW,GAAGld,UAAU,CAACwW,UAAU,CAACp+B,EAAE,CAACq+D,oBAAoB,CAAC3rE,CAAC,CAAC,CAAC;UACrE,IAAOH,KAAK,GAAeuyC,WAAW,CAA/BvyC,KAAK;YAAEwxB,SAAS,GAAI+gB,WAAW,CAAxB/gB,SAAS;UACvB,IAAI,CAACA,SAAS,IAAI,CAACxxB,KAAK,EAAE;YACxB;UACF;UACAub,GAAG,CAACiW,SAAS,GAAGA,SAAS;UACzBjW,GAAG,CAAC+V,WAAW,GAAGtxB,KAAK;UACvBub,GAAG,CAACg5B,WAAW,CAAChC,WAAW,CAACzM,UAAU,CAAC;UACvCvqB,GAAG,CAACi5B,cAAc,GAAGjC,WAAW,CAACxM,gBAAgB;UACjD1a,MAAM,GAAG5d,EAAE,CAAC0nB,6BAA6B,CAACxf,IAAI,CAAC8P,KAAK,CAAC7P,OAAO,GAAGnI,EAAE,CAACH,GAAG,GAAGG,EAAE,CAACmC,GAAG,CAAC;UAC/E2oB,QAAQ,GAAG9qB,EAAE,CAACs+D,gBAAgB,CAAC5rE,CAAC,EAAEkrB,MAAM,CAAC;UACzC9P,GAAG,CAACk5B,SAAS,CAAC,CAAC;UACfl5B,GAAG,CAACm5B,MAAM,CAACjnC,EAAE,CAACmnB,OAAO,EAAEnnB,EAAE,CAAConB,OAAO,CAAC;UAClCtZ,GAAG,CAACo5B,MAAM,CAACpc,QAAQ,CAACx1B,CAAC,EAAEw1B,QAAQ,CAACt1B,CAAC,CAAC;UAClCsY,GAAG,CAACq5B,MAAM,CAAC,CAAC;QACd;QACAr5B,GAAG,CAAC04B,OAAO,CAAC,CAAC;MACf;IACF;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAi5B,WAAA,EAAa,CAAC;EAAC;IAAAl5B,GAAA;IAAAC,KAAA,EACf,SAAAuoC,WAAA,EAAa;MACX,IAAMrnC,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMsyB,QAAQ,GAAGtxB,IAAI,CAAC8P,KAAK;MAC3B,IAAI,CAACwhB,QAAQ,CAAC3R,OAAO,EAAE;QACrB;MACF;MACA,IAAMnI,UAAU,GAAG1f,EAAE,CAACsnB,aAAa,CAAC,CAAC,CAAC;MACtC,IAAI1J,MAAM,EAAEzB,KAAK;MACjBrO,GAAG,CAACw4B,IAAI,CAAC,CAAC;MACVx4B,GAAG,CAACsuC,SAAS,CAACp8C,EAAE,CAACmnB,OAAO,EAAEnnB,EAAE,CAAConB,OAAO,CAAC;MACrCtZ,GAAG,CAAC6zD,MAAM,CAACjiD,UAAU,CAAC;MACtB5R,GAAG,CAACu3B,SAAS,GAAG,QAAQ;MACxBv3B,GAAG,CAAC03B,YAAY,GAAG,QAAQ;MAC3BxlC,EAAE,CAACgY,KAAK,CAACxY,OAAO,CAAC,UAACuB,IAAI,EAAEoI,KAAK,EAAK;QAChC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAACjB,IAAI,CAACC,OAAO,EAAE;UAChC;QACF;QACA,IAAM28B,WAAW,GAAGtL,QAAQ,CAAC4E,UAAU,CAACp+B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,CAAC,CAAC;QAC7D,IAAM05B,QAAQ,GAAGxqC,MAAM,CAACysC,WAAW,CAAC3I,IAAI,CAAC;QACzCve,MAAM,GAAG5d,EAAE,CAAC0nB,6BAA6B,CAAC1nB,EAAE,CAACgY,KAAK,CAAC7O,KAAK,CAAC,CAACrK,KAAK,CAAC;QAChE,IAAIgmC,WAAW,CAAC3L,iBAAiB,EAAE;UACjCrrB,GAAG,CAACquB,IAAI,GAAG0G,QAAQ,CAACI,MAAM;UAC1B9mB,KAAK,GAAGrO,GAAG,CAAC++C,WAAW,CAAC9rD,IAAI,CAACwS,KAAK,CAAC,CAAC4I,KAAK;UACzCrO,GAAG,CAAC6V,SAAS,GAAGmhB,WAAW,CAAC1L,aAAa;UACzC,IAAMzI,OAAO,GAAG96B,SAAS,CAACivC,WAAW,CAACzL,eAAe,CAAC;UACtDvrB,GAAG,CAACy4B,QAAQ,CACV,CAACpqB,KAAK,GAAG,CAAC,GAAGwU,OAAO,CAAChoB,IAAI,EACzB,CAACiV,MAAM,GAAGilB,QAAQ,CAACl7B,IAAI,GAAG,CAAC,GAAGgpB,OAAO,CAACnoB,GAAG,EACzC2T,KAAK,GAAGwU,OAAO,CAACxU,KAAK,EACrB0mB,QAAQ,CAACl7B,IAAI,GAAGgpB,OAAO,CAACzU,MAC1B,CAAC;QACH;QACAjkB,UAAU,CAAC6V,GAAG,EAAE/M,IAAI,CAACwS,KAAK,EAAE,CAAC,EAAE,CAACqK,MAAM,EAAEilB,QAAQ,EAAE;UAChDtwC,KAAK,EAAEuyC,WAAW,CAACvyC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;MACFub,GAAG,CAAC04B,OAAO,CAAC,CAAC;IACf;EAAC;IAAA3nC,GAAA;IAAAC,KAAA,EACD,SAAAwoC,UAAA,EAAY,CAAC;EAAC;EAAA,OAAAw4B,iBAAA;AAAA,EA7NgBpE,eAAe;AA+N/CoE,iBAAiB,CAACx1D,EAAE,GAAG,cAAc;AACrCw1D,iBAAiB,CAACrtE,QAAQ,GAAG;EAC3Bo1B,OAAO,EAAE,IAAI;EACb+5C,OAAO,EAAE,IAAI;EACb92C,QAAQ,EAAE,WAAW;EACrBlD,UAAU,EAAE;IACVC,OAAO,EAAE,IAAI;IACb9D,SAAS,EAAE,CAAC;IACZsU,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE;EACpB,CAAC;EACDza,IAAI,EAAE;IACJiK,QAAQ,EAAE;EACZ,CAAC;EACDpI,UAAU,EAAE,CAAC;EACb1H,KAAK,EAAE;IACLmhB,iBAAiB,EAAE,IAAI;IACvBhiC,QAAQ,EAAEygC,KAAK,CAACZ,UAAU,CAACC;EAC7B,CAAC;EACDlP,WAAW,EAAE;IACXqR,aAAa,EAAEz6B,SAAS;IACxB06B,eAAe,EAAE,CAAC;IAClBxR,OAAO,EAAE,IAAI;IACbsU,IAAI,EAAE;MACJx0B,IAAI,EAAE;IACR,CAAC;IACDxQ,QAAQ,WAAAA,SAACoc,KAAK,EAAE;MACd,OAAOA,KAAK;IACd,CAAC;IACDod,OAAO,EAAE;EACX;AACF,CAAC;AACDmvC,iBAAiB,CAAC/oC,aAAa,GAAG;EAChC,kBAAkB,EAAE,aAAa;EACjC,mBAAmB,EAAE,OAAO;EAC5B,aAAa,EAAE;AACjB,CAAC;AACD+oC,iBAAiB,CAAC7mE,WAAW,GAAG;EAC9B2uB,UAAU,EAAE;IACVjiB,SAAS,EAAE;EACb;AACF,CAAC;AAED,IAAMk8D,SAAS,GAAG;EAChBC,WAAW,EAAE;IAACC,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,CAAC;IAAEq6D,KAAK,EAAE;EAAI,CAAC;EACjDC,MAAM,EAAE;IAACF,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,IAAI;IAAEq6D,KAAK,EAAE;EAAE,CAAC;EAC7CE,MAAM,EAAE;IAACH,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,KAAK;IAAEq6D,KAAK,EAAE;EAAE,CAAC;EAC9CG,IAAI,EAAE;IAACJ,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,OAAO;IAAEq6D,KAAK,EAAE;EAAE,CAAC;EAC9CI,GAAG,EAAE;IAACL,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,QAAQ;IAAEq6D,KAAK,EAAE;EAAE,CAAC;EAC9CK,IAAI,EAAE;IAACN,MAAM,EAAE,KAAK;IAAEp6D,IAAI,EAAE,SAAS;IAAEq6D,KAAK,EAAE;EAAC,CAAC;EAChDM,KAAK,EAAE;IAACP,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE,OAAO;IAAEq6D,KAAK,EAAE;EAAE,CAAC;EAC/CO,OAAO,EAAE;IAACR,MAAM,EAAE,KAAK;IAAEp6D,IAAI,EAAE,OAAO;IAAEq6D,KAAK,EAAE;EAAC,CAAC;EACjDQ,IAAI,EAAE;IAACT,MAAM,EAAE,IAAI;IAAEp6D,IAAI,EAAE;EAAQ;AACrC,CAAC;AACD,IAAM86D,KAAK,GAAIl9D,MAAM,CAACC,IAAI,CAACq8D,SAAS,CAAE;AACtC,SAASa,MAAMA,CAACxwE,CAAC,EAAEU,CAAC,EAAE;EACpB,OAAOV,CAAC,GAAGU,CAAC;AACd;AACA,SAASwe,MAAKA,CAACpJ,KAAK,EAAE26D,KAAK,EAAE;EAC3B,IAAI9uE,aAAa,CAAC8uE,KAAK,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMC,OAAO,GAAG56D,KAAK,CAAC66D,QAAQ;EAC9B,IAAAC,iBAAA,GAAoC96D,KAAK,CAAC+6D,UAAU;IAA7CC,MAAM,GAAAF,iBAAA,CAANE,MAAM;IAAE3oC,KAAK,GAAAyoC,iBAAA,CAALzoC,KAAK;IAAE4oC,UAAU,GAAAH,iBAAA,CAAVG,UAAU;EAChC,IAAInkE,KAAK,GAAG6jE,KAAK;EACjB,IAAI,OAAOK,MAAM,KAAK,UAAU,EAAE;IAChClkE,KAAK,GAAGkkE,MAAM,CAAClkE,KAAK,CAAC;EACvB;EACA,IAAI,CAACvL,cAAc,CAACuL,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAG,OAAOkkE,MAAM,KAAK,QAAQ,GAC9BJ,OAAO,CAACxxD,KAAK,CAACtS,KAAK,EAAEkkE,MAAM,CAAC,GAC5BJ,OAAO,CAACxxD,KAAK,CAACtS,KAAK,CAAC;EAC1B;EACA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIu7B,KAAK,EAAE;IACTv7B,KAAK,GAAGu7B,KAAK,KAAK,MAAM,KAAKplC,QAAQ,CAACguE,UAAU,CAAC,IAAIA,UAAU,KAAK,IAAI,CAAC,GACrEL,OAAO,CAACn5C,OAAO,CAAC3qB,KAAK,EAAE,SAAS,EAAEmkE,UAAU,CAAC,GAC7CL,OAAO,CAACn5C,OAAO,CAAC3qB,KAAK,EAAEu7B,KAAK,CAAC;EACnC;EACA,OAAO,CAACv7B,KAAK;AACf;AACA,SAASokE,yBAAyBA,CAACC,OAAO,EAAEtjE,GAAG,EAAEsC,GAAG,EAAEihE,QAAQ,EAAE;EAC9D,IAAMl6D,IAAI,GAAGu5D,KAAK,CAACpiE,MAAM;EACzB,KAAK,IAAI3N,CAAC,GAAG+vE,KAAK,CAAChmD,OAAO,CAAC0mD,OAAO,CAAC,EAAEzwE,CAAC,GAAGwW,IAAI,GAAG,CAAC,EAAE,EAAExW,CAAC,EAAE;IACtD,IAAM2wE,QAAQ,GAAGxB,SAAS,CAACY,KAAK,CAAC/vE,CAAC,CAAC,CAAC;IACpC,IAAMqQ,MAAM,GAAGsgE,QAAQ,CAACrB,KAAK,GAAGqB,QAAQ,CAACrB,KAAK,GAAGr3D,MAAM,CAAC0xD,gBAAgB;IACxE,IAAIgH,QAAQ,CAACtB,MAAM,IAAIniE,IAAI,CAACk7B,IAAI,CAAC,CAAC34B,GAAG,GAAGtC,GAAG,KAAKkD,MAAM,GAAGsgE,QAAQ,CAAC17D,IAAI,CAAC,CAAC,IAAIy7D,QAAQ,EAAE;MACpF,OAAOX,KAAK,CAAC/vE,CAAC,CAAC;IACjB;EACF;EACA,OAAO+vE,KAAK,CAACv5D,IAAI,GAAG,CAAC,CAAC;AACxB;AACA,SAASo6D,0BAA0BA,CAACt7D,KAAK,EAAE24B,QAAQ,EAAEwiC,OAAO,EAAEtjE,GAAG,EAAEsC,GAAG,EAAE;EACtE,KAAK,IAAIzP,CAAC,GAAG+vE,KAAK,CAACpiE,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI+vE,KAAK,CAAChmD,OAAO,CAAC0mD,OAAO,CAAC,EAAEzwE,CAAC,EAAE,EAAE;IAC/D,IAAM62B,IAAI,GAAGk5C,KAAK,CAAC/vE,CAAC,CAAC;IACrB,IAAImvE,SAAS,CAACt4C,IAAI,CAAC,CAACw4C,MAAM,IAAI/5D,KAAK,CAAC66D,QAAQ,CAACr5C,IAAI,CAACrnB,GAAG,EAAEtC,GAAG,EAAE0pB,IAAI,CAAC,IAAIoX,QAAQ,GAAG,CAAC,EAAE;MACjF,OAAOpX,IAAI;IACb;EACF;EACA,OAAOk5C,KAAK,CAACU,OAAO,GAAGV,KAAK,CAAChmD,OAAO,CAAC0mD,OAAO,CAAC,GAAG,CAAC,CAAC;AACpD;AACA,SAASI,kBAAkBA,CAACh6C,IAAI,EAAE;EAChC,KAAK,IAAI72B,CAAC,GAAG+vE,KAAK,CAAChmD,OAAO,CAAC8M,IAAI,CAAC,GAAG,CAAC,EAAErgB,IAAI,GAAGu5D,KAAK,CAACpiE,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACxE,IAAImvE,SAAS,CAACY,KAAK,CAAC/vE,CAAC,CAAC,CAAC,CAACqvE,MAAM,EAAE;MAC9B,OAAOU,KAAK,CAAC/vE,CAAC,CAAC;IACjB;EACF;AACF;AACA,SAAS8wE,OAAOA,CAACxrD,KAAK,EAAEyrD,IAAI,EAAEC,UAAU,EAAE;EACxC,IAAI,CAACA,UAAU,EAAE;IACf1rD,KAAK,CAACyrD,IAAI,CAAC,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIC,UAAU,CAACrjE,MAAM,EAAE;IAC5B,IAAAsjE,QAAA,GAAiBxlE,OAAO,CAACulE,UAAU,EAAED,IAAI,CAAC;MAAnCv9C,EAAE,GAAAy9C,QAAA,CAAFz9C,EAAE;MAAEC,EAAE,GAAAw9C,QAAA,CAAFx9C,EAAE;IACb,IAAMkD,SAAS,GAAGq6C,UAAU,CAACx9C,EAAE,CAAC,IAAIu9C,IAAI,GAAGC,UAAU,CAACx9C,EAAE,CAAC,GAAGw9C,UAAU,CAACv9C,EAAE,CAAC;IAC1EnO,KAAK,CAACqR,SAAS,CAAC,GAAG,IAAI;EACzB;AACF;AACA,SAASu6C,aAAaA,CAAC57D,KAAK,EAAEgQ,KAAK,EAAEwL,GAAG,EAAEqgD,SAAS,EAAE;EACnD,IAAMjB,OAAO,GAAG56D,KAAK,CAAC66D,QAAQ;EAC9B,IAAM7oC,KAAK,GAAG,CAAC4oC,OAAO,CAACn5C,OAAO,CAACzR,KAAK,CAAC,CAAC,CAAC,CAAClZ,KAAK,EAAE+kE,SAAS,CAAC;EACzD,IAAMxnD,IAAI,GAAGrE,KAAK,CAACA,KAAK,CAAC3X,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK;EAC1C,IAAIk6B,KAAK,EAAE7vB,KAAK;EAChB,KAAK6vB,KAAK,GAAGgB,KAAK,EAAEhB,KAAK,IAAI3c,IAAI,EAAE2c,KAAK,GAAG,CAAC4pC,OAAO,CAACjhE,GAAG,CAACq3B,KAAK,EAAE,CAAC,EAAE6qC,SAAS,CAAC,EAAE;IAC5E16D,KAAK,GAAGqa,GAAG,CAACwV,KAAK,CAAC;IAClB,IAAI7vB,KAAK,IAAI,CAAC,EAAE;MACd6O,KAAK,CAAC7O,KAAK,CAAC,CAAC6vB,KAAK,GAAG,IAAI;IAC3B;EACF;EACA,OAAOhhB,KAAK;AACd;AACA,SAAS8rD,mBAAmBA,CAAC97D,KAAK,EAAEhB,MAAM,EAAE68D,SAAS,EAAE;EACrD,IAAM7rD,KAAK,GAAG,EAAE;EAChB,IAAMwL,GAAG,GAAG,CAAC,CAAC;EACd,IAAMta,IAAI,GAAGlC,MAAM,CAAC3G,MAAM;EAC1B,IAAI3N,CAAC,EAAEoM,KAAK;EACZ,KAAKpM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACzBoM,KAAK,GAAGkI,MAAM,CAACtU,CAAC,CAAC;IACjB8wB,GAAG,CAAC1kB,KAAK,CAAC,GAAGpM,CAAC;IACdslB,KAAK,CAACtW,IAAI,CAAC;MACT5C,KAAK,EAALA,KAAK;MACLk6B,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACA,OAAQ9vB,IAAI,KAAK,CAAC,IAAI,CAAC26D,SAAS,GAAI7rD,KAAK,GAAG4rD,aAAa,CAAC57D,KAAK,EAAEgQ,KAAK,EAAEwL,GAAG,EAAEqgD,SAAS,CAAC;AACzF;AAAC,IACKE,SAAS,0BAAAC,OAAA;EAAAnpD,SAAA,CAAAkpD,SAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAlpD,YAAA,CAAAgpD,SAAA;EACb,SAAAA,UAAYt8D,KAAK,EAAE;IAAA,IAAAy8D,OAAA;IAAA7lE,eAAA,OAAA0lE,SAAA;IACjBG,OAAA,GAAAD,QAAA,CAAAhkE,IAAA,OAAMwH,KAAK;IACXy8D,OAAA,CAAK5sD,MAAM,GAAG;MACZ1N,IAAI,EAAE,EAAE;MACRiI,MAAM,EAAE,EAAE;MACV/J,GAAG,EAAE;IACP,CAAC;IACDo8D,OAAA,CAAKC,KAAK,GAAG,KAAK;IAClBD,OAAA,CAAKE,UAAU,GAAGzlE,SAAS;IAC3BulE,OAAA,CAAKG,QAAQ,GAAG,CAAC,CAAC;IAClBH,OAAA,CAAKI,WAAW,GAAG,KAAK;IACxBJ,OAAA,CAAKnB,UAAU,GAAGpkE,SAAS;IAAC,OAAAulE,OAAA;EAC9B;EAACtlE,YAAA,CAAAmlE,SAAA;IAAAllE,GAAA;IAAAC,KAAA,EACD,SAAAq/B,KAAK8V,SAAS,EAAE/rC,IAAI,EAAE;MACpB,IAAMu7D,IAAI,GAAGxvB,SAAS,CAACwvB,IAAI,KAAKxvB,SAAS,CAACwvB,IAAI,GAAG,CAAC,CAAC,CAAC;MACpD,IAAMb,OAAO,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI/4C,QAAQ,CAACC,KAAK,CAACkqB,SAAS,CAACnqB,QAAQ,CAAC5qB,IAAI,CAAC;MAC3EvF,OAAO,CAAC8pE,IAAI,CAACc,cAAc,EAAE3B,OAAO,CAACz5C,OAAO,CAAC,CAAC,CAAC;MAC/C,IAAI,CAAC45C,UAAU,GAAG;QAChBC,MAAM,EAAES,IAAI,CAACT,MAAM;QACnB3oC,KAAK,EAAEopC,IAAI,CAACppC,KAAK;QACjB4oC,UAAU,EAAEQ,IAAI,CAACR;MACnB,CAAC;MACD3nD,IAAA,CAAAC,eAAA,CAAAwoD,SAAA,CAAA3sD,SAAA,iBAAAnX,IAAA,OAAWg0C,SAAS;MACpB,IAAI,CAACqwB,WAAW,GAAGp8D,IAAI,CAACs8D,UAAU;IACpC;EAAC;IAAA3lE,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAIgE,GAAG,KAAKxO,SAAS,EAAE;QACrB,OAAO,IAAI;MACb;MACA,OAAOyS,MAAK,CAAC,IAAI,EAAEjE,GAAG,CAAC;IACzB;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAAuyB,aAAA,EAAe;MACb/V,IAAA,CAAAC,eAAA,CAAAwoD,SAAA,CAAA3sD,SAAA,yBAAAnX,IAAA;MACA,IAAI,CAACqX,MAAM,GAAG;QACZ1N,IAAI,EAAE,EAAE;QACRiI,MAAM,EAAE,EAAE;QACV/J,GAAG,EAAE;MACP,CAAC;IACH;EAAC;IAAAjJ,GAAA;IAAAC,KAAA,EACD,SAAAogC,oBAAA,EAAsB;MACpB,IAAMl/B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM07D,OAAO,GAAG5iE,EAAE,CAAC6iE,QAAQ;MAC3B,IAAMt5C,IAAI,GAAGriB,OAAO,CAACu8D,IAAI,CAACl6C,IAAI,IAAI,KAAK;MACvC,IAAAk7C,kBAAA,GAAyCzkE,EAAE,CAACuK,aAAa,CAAC,CAAC;QAAtD1K,GAAG,GAAA4kE,kBAAA,CAAH5kE,GAAG;QAAEsC,GAAG,GAAAsiE,kBAAA,CAAHtiE,GAAG;QAAEsI,UAAU,GAAAg6D,kBAAA,CAAVh6D,UAAU;QAAEC,UAAU,GAAA+5D,kBAAA,CAAV/5D,UAAU;MACrC,SAASg6D,YAAYA,CAAC7sC,MAAM,EAAE;QAC5B,IAAI,CAACptB,UAAU,IAAI,CAAC+R,KAAK,CAACqb,MAAM,CAACh4B,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEg4B,MAAM,CAACh4B,GAAG,CAAC;QACjC;QACA,IAAI,CAAC6K,UAAU,IAAI,CAAC8R,KAAK,CAACqb,MAAM,CAAC11B,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE01B,MAAM,CAAC11B,GAAG,CAAC;QACjC;MACF;MACA,IAAI,CAACsI,UAAU,IAAI,CAACC,UAAU,EAAE;QAC9Bg6D,YAAY,CAAC1kE,EAAE,CAAC2kE,eAAe,CAAC,CAAC,CAAC;QAClC,IAAIz9D,OAAO,CAAC2wB,MAAM,KAAK,OAAO,IAAI3wB,OAAO,CAAC8Q,KAAK,CAAC4nB,MAAM,KAAK,QAAQ,EAAE;UACnE8kC,YAAY,CAAC1kE,EAAE,CAAC6S,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC;MACF;MACAhT,GAAG,GAAGtM,cAAc,CAACsM,GAAG,CAAC,IAAI,CAAC2c,KAAK,CAAC3c,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC+iE,OAAO,CAACn5C,OAAO,CAACnpB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEgpB,IAAI,CAAC;MACnFpnB,GAAG,GAAG5O,cAAc,CAAC4O,GAAG,CAAC,IAAI,CAACqa,KAAK,CAACra,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACygE,OAAO,CAACj5C,KAAK,CAACrpB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEgpB,IAAI,CAAC,GAAG,CAAC;MACrFvpB,EAAE,CAACH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEsC,GAAG,GAAG,CAAC,CAAC;MAC/BnC,EAAE,CAACmC,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACtC,GAAG,GAAG,CAAC,EAAEsC,GAAG,CAAC;IACjC;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAA6lE,gBAAA,EAAkB;MAChB,IAAMnuD,GAAG,GAAG,IAAI,CAACouD,kBAAkB,CAAC,CAAC;MACrC,IAAI/kE,GAAG,GAAG8K,MAAM,CAACE,iBAAiB;MAClC,IAAI1I,GAAG,GAAGwI,MAAM,CAACC,iBAAiB;MAClC,IAAI4L,GAAG,CAACnW,MAAM,EAAE;QACdR,GAAG,GAAG2W,GAAG,CAAC,CAAC,CAAC;QACZrU,GAAG,GAAGqU,GAAG,CAACA,GAAG,CAACnW,MAAM,GAAG,CAAC,CAAC;MAC3B;MACA,OAAO;QAACR,GAAG,EAAHA,GAAG;QAAEsC,GAAG,EAAHA;MAAG,CAAC;IACnB;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAugC,WAAA,EAAa;MACX,IAAMr/B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM29D,QAAQ,GAAG39D,OAAO,CAACu8D,IAAI;MAC7B,IAAMjqC,QAAQ,GAAGtyB,OAAO,CAAC8Q,KAAK;MAC9B,IAAM0rD,UAAU,GAAGlqC,QAAQ,CAACoG,MAAM,KAAK,QAAQ,GAAG5/B,EAAE,CAAC4kE,kBAAkB,CAAC,CAAC,GAAG5kE,EAAE,CAAC8kE,SAAS,CAAC,CAAC;MAC1F,IAAI59D,OAAO,CAAC2wB,MAAM,KAAK,OAAO,IAAI6rC,UAAU,CAACrjE,MAAM,EAAE;QACnDL,EAAE,CAACH,GAAG,GAAGG,EAAE,CAAC69B,QAAQ,IAAI6lC,UAAU,CAAC,CAAC,CAAC;QACrC1jE,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAAC49B,QAAQ,IAAI8lC,UAAU,CAACA,UAAU,CAACrjE,MAAM,GAAG,CAAC,CAAC;MAC3D;MACA,IAAMR,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAM6V,KAAK,GAAG/Z,cAAc,CAACylE,UAAU,EAAE7jE,GAAG,EAAEsC,GAAG,CAAC;MAClDnC,EAAE,CAACmkE,KAAK,GAAGU,QAAQ,CAACt7C,IAAI,KAAKiQ,QAAQ,CAACZ,QAAQ,GAC1CsqC,yBAAyB,CAAC2B,QAAQ,CAAC1B,OAAO,EAAEnjE,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACmC,GAAG,EAAEnC,EAAE,CAAC+kE,iBAAiB,CAACllE,GAAG,CAAC,CAAC,GACtFyjE,0BAA0B,CAACtjE,EAAE,EAAEgY,KAAK,CAAC3X,MAAM,EAAEwkE,QAAQ,CAAC1B,OAAO,EAAEnjE,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACmC,GAAG,CAAC,CAAC;MACnFnC,EAAE,CAACokE,UAAU,GAAG,CAAC5qC,QAAQ,CAACR,KAAK,CAACa,OAAO,IAAI75B,EAAE,CAACmkE,KAAK,KAAK,MAAM,GAAGxlE,SAAS,GACtE4kE,kBAAkB,CAACvjE,EAAE,CAACmkE,KAAK,CAAC;MAChCnkE,EAAE,CAACglE,WAAW,CAACtB,UAAU,CAAC;MAC1B,IAAIx8D,OAAO,CAACiB,OAAO,EAAE;QACnB6P,KAAK,CAAC7P,OAAO,CAAC,CAAC;MACjB;MACA,OAAO27D,mBAAmB,CAAC9jE,EAAE,EAAEgY,KAAK,EAAEhY,EAAE,CAACokE,UAAU,CAAC;IACtD;EAAC;IAAAvlE,GAAA;IAAAC,KAAA,EACD,SAAAkmE,YAAYtB,UAAU,EAAE;MACtB,IAAM1jE,EAAE,GAAG,IAAI;MACf,IAAIF,KAAK,GAAG,CAAC;MACb,IAAIsI,GAAG,GAAG,CAAC;MACX,IAAI4xB,KAAK,EAAE3d,IAAI;MACf,IAAIrc,EAAE,CAACkH,OAAO,CAAC0W,MAAM,IAAI8lD,UAAU,CAACrjE,MAAM,EAAE;QAC1C25B,KAAK,GAAGh6B,EAAE,CAACilE,kBAAkB,CAACvB,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAIA,UAAU,CAACrjE,MAAM,KAAK,CAAC,EAAE;UAC3BP,KAAK,GAAG,CAAC,GAAGk6B,KAAK;QACnB,CAAC,MAAM;UACLl6B,KAAK,GAAG,CAACE,EAAE,CAACilE,kBAAkB,CAACvB,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG1pC,KAAK,IAAI,CAAC;QAC5D;QACA3d,IAAI,GAAGrc,EAAE,CAACilE,kBAAkB,CAACvB,UAAU,CAACA,UAAU,CAACrjE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAIqjE,UAAU,CAACrjE,MAAM,KAAK,CAAC,EAAE;UAC3B+H,GAAG,GAAGiU,IAAI;QACZ,CAAC,MAAM;UACLjU,GAAG,GAAG,CAACiU,IAAI,GAAGrc,EAAE,CAACilE,kBAAkB,CAACvB,UAAU,CAACA,UAAU,CAACrjE,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7E;MACF;MACA,IAAMukC,KAAK,GAAG8+B,UAAU,CAACrjE,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;MAChDP,KAAK,GAAG3K,WAAW,CAAC2K,KAAK,EAAE,CAAC,EAAE8kC,KAAK,CAAC;MACpCx8B,GAAG,GAAGjT,WAAW,CAACiT,GAAG,EAAE,CAAC,EAAEw8B,KAAK,CAAC;MAChC5kC,EAAE,CAACqkE,QAAQ,GAAG;QAACvkE,KAAK,EAALA,KAAK;QAAEsI,GAAG,EAAHA,GAAG;QAAErF,MAAM,EAAE,CAAC,IAAIjD,KAAK,GAAG,CAAC,GAAGsI,GAAG;MAAC,CAAC;IAC3D;EAAC;IAAAvJ,GAAA;IAAAC,KAAA,EACD,SAAAgmE,UAAA,EAAY;MACV,IAAM9kE,EAAE,GAAG,IAAI;MACf,IAAM4iE,OAAO,GAAG5iE,EAAE,CAAC6iE,QAAQ;MAC3B,IAAMhjE,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAM+E,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM29D,QAAQ,GAAG39D,OAAO,CAACu8D,IAAI;MAC7B,IAAM1qC,KAAK,GAAG8rC,QAAQ,CAACt7C,IAAI,IAAI25C,yBAAyB,CAAC2B,QAAQ,CAAC1B,OAAO,EAAEtjE,GAAG,EAAEsC,GAAG,EAAEnC,EAAE,CAAC+kE,iBAAiB,CAACllE,GAAG,CAAC,CAAC;MAC/G,IAAM28D,QAAQ,GAAGzpE,cAAc,CAAC8xE,QAAQ,CAACrI,QAAQ,EAAE,CAAC,CAAC;MACrD,IAAM9yC,OAAO,GAAGqP,KAAK,KAAK,MAAM,GAAG8rC,QAAQ,CAAC5B,UAAU,GAAG,KAAK;MAC9D,IAAMiC,UAAU,GAAGjwE,QAAQ,CAACy0B,OAAO,CAAC,IAAIA,OAAO,KAAK,IAAI;MACxD,IAAM1R,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIgiB,KAAK,GAAGn6B,GAAG;MACf,IAAI4jE,IAAI,EAAEpyD,KAAK;MACf,IAAI6zD,UAAU,EAAE;QACdlrC,KAAK,GAAG,CAAC4oC,OAAO,CAACn5C,OAAO,CAACuQ,KAAK,EAAE,SAAS,EAAEtQ,OAAO,CAAC;MACrD;MACAsQ,KAAK,GAAG,CAAC4oC,OAAO,CAACn5C,OAAO,CAACuQ,KAAK,EAAEkrC,UAAU,GAAG,KAAK,GAAGnsC,KAAK,CAAC;MAC3D,IAAI6pC,OAAO,CAACp5C,IAAI,CAACrnB,GAAG,EAAEtC,GAAG,EAAEk5B,KAAK,CAAC,GAAG,MAAM,GAAGyjC,QAAQ,EAAE;QACrD,MAAM,IAAIvzC,KAAK,CAACppB,GAAG,GAAG,OAAO,GAAGsC,GAAG,GAAG,sCAAsC,GAAGq6D,QAAQ,GAAG,GAAG,GAAGzjC,KAAK,CAAC;MACxG;MACA,IAAM2qC,UAAU,GAAGx8D,OAAO,CAAC8Q,KAAK,CAAC4nB,MAAM,KAAK,MAAM,IAAI5/B,EAAE,CAACmlE,iBAAiB,CAAC,CAAC;MAC5E,KAAK1B,IAAI,GAAGzpC,KAAK,EAAE3oB,KAAK,GAAG,CAAC,EAAEoyD,IAAI,GAAGthE,GAAG,EAAEshE,IAAI,GAAG,CAACb,OAAO,CAACjhE,GAAG,CAAC8hE,IAAI,EAAEjH,QAAQ,EAAEzjC,KAAK,CAAC,EAAE1nB,KAAK,EAAE,EAAE;QAC7FmyD,OAAO,CAACxrD,KAAK,EAAEyrD,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,IAAID,IAAI,KAAKthE,GAAG,IAAI+E,OAAO,CAAC2wB,MAAM,KAAK,OAAO,IAAIxmB,KAAK,KAAK,CAAC,EAAE;QAC7DmyD,OAAO,CAACxrD,KAAK,EAAEyrD,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,OAAOn+D,MAAM,CAACC,IAAI,CAACwS,KAAK,CAAC,CAACP,IAAI,CAAC,UAACvlB,CAAC,EAAEU,CAAC;QAAA,OAAKV,CAAC,GAAGU,CAAC;MAAA,EAAC,CAAC4wB,GAAG,CAAC,UAAAluB,CAAC;QAAA,OAAI,CAACA,CAAC;MAAA,EAAC;IAC9D;EAAC;IAAAuJ,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM4iE,OAAO,GAAG5iE,EAAE,CAAC6iE,QAAQ;MAC3B,IAAMgC,QAAQ,GAAG7kE,EAAE,CAACkH,OAAO,CAACu8D,IAAI;MAChC,IAAIoB,QAAQ,CAACO,aAAa,EAAE;QAC1B,OAAOxC,OAAO,CAACx5C,MAAM,CAACtqB,KAAK,EAAE+lE,QAAQ,CAACO,aAAa,CAAC;MACtD;MACA,OAAOxC,OAAO,CAACx5C,MAAM,CAACtqB,KAAK,EAAE+lE,QAAQ,CAACN,cAAc,CAACc,QAAQ,CAAC;IAChE;EAAC;IAAAxmE,GAAA;IAAAC,KAAA,EACD,SAAAwmE,oBAAoB7B,IAAI,EAAEt6D,KAAK,EAAE6O,KAAK,EAAEoR,MAAM,EAAE;MAC9C,IAAMppB,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMiiB,OAAO,GAAGjiB,OAAO,CAACu8D,IAAI,CAACc,cAAc;MAC3C,IAAMh7C,IAAI,GAAGvpB,EAAE,CAACmkE,KAAK;MACrB,IAAMN,SAAS,GAAG7jE,EAAE,CAACokE,UAAU;MAC/B,IAAMmB,WAAW,GAAGh8C,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAAC;MACzC,IAAMi8C,WAAW,GAAG3B,SAAS,IAAI16C,OAAO,CAAC06C,SAAS,CAAC;MACnD,IAAM9iE,IAAI,GAAGiX,KAAK,CAAC7O,KAAK,CAAC;MACzB,IAAM6vB,KAAK,GAAG6qC,SAAS,IAAI2B,WAAW,IAAIzkE,IAAI,IAAIA,IAAI,CAACi4B,KAAK;MAC5D,IAAMzlB,KAAK,GAAGvT,EAAE,CAAC6iE,QAAQ,CAACz5C,MAAM,CAACq6C,IAAI,EAAEr6C,MAAM,KAAK4P,KAAK,GAAGwsC,WAAW,GAAGD,WAAW,CAAC,CAAC;MACrF,IAAME,SAAS,GAAGv+D,OAAO,CAAC8Q,KAAK,CAAC7gB,QAAQ;MACxC,OAAOsuE,SAAS,GAAGtuE,QAAQ,CAACsuE,SAAS,EAAE,CAAClyD,KAAK,EAAEpK,KAAK,EAAE6O,KAAK,CAAC,EAAEhY,EAAE,CAAC,GAAGuT,KAAK;IAC3E;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAA2hC,mBAAmBzoB,KAAK,EAAE;MACxB,IAAItlB,CAAC,EAAEwW,IAAI,EAAEnI,IAAI;MACjB,KAAKrO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG8O,KAAK,CAAC3X,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CqO,IAAI,GAAGiX,KAAK,CAACtlB,CAAC,CAAC;QACfqO,IAAI,CAACwS,KAAK,GAAG,IAAI,CAAC+xD,mBAAmB,CAACvkE,IAAI,CAACjC,KAAK,EAAEpM,CAAC,EAAEslB,KAAK,CAAC;MAC7D;IACF;EAAC;IAAAnZ,GAAA;IAAAC,KAAA,EACD,SAAAmmE,mBAAmBnmE,KAAK,EAAE;MACxB,IAAMkB,EAAE,GAAG,IAAI;MACf,OAAOlB,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG,CAAC9T,KAAK,GAAGkB,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;IACpE;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAiZ,iBAAiBjZ,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM0lE,OAAO,GAAG1lE,EAAE,CAACqkE,QAAQ;MAC3B,IAAMx3C,GAAG,GAAG7sB,EAAE,CAACilE,kBAAkB,CAACnmE,KAAK,CAAC;MACxC,OAAOkB,EAAE,CAAC2e,kBAAkB,CAAC,CAAC+mD,OAAO,CAAC5lE,KAAK,GAAG+sB,GAAG,IAAI64C,OAAO,CAAC3iE,MAAM,CAAC;IACtE;EAAC;IAAAlE,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE;MACtB,IAAMrjC,EAAE,GAAG,IAAI;MACf,IAAM0lE,OAAO,GAAG1lE,EAAE,CAACqkE,QAAQ;MAC3B,IAAMx3C,GAAG,GAAG7sB,EAAE,CAACujC,kBAAkB,CAACF,KAAK,CAAC,GAAGqiC,OAAO,CAAC3iE,MAAM,GAAG2iE,OAAO,CAACt9D,GAAG;MACvE,OAAOpI,EAAE,CAACH,GAAG,GAAGgtB,GAAG,IAAI7sB,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;IACzC;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAA6mE,cAAcpyD,KAAK,EAAE;MACnB,IAAMvT,EAAE,GAAG,IAAI;MACf,IAAM4lE,SAAS,GAAG5lE,EAAE,CAACkH,OAAO,CAAC8Q,KAAK;MAClC,IAAM6tD,cAAc,GAAG7lE,EAAE,CAAC8N,GAAG,CAAC++C,WAAW,CAACt5C,KAAK,CAAC,CAAC4I,KAAK;MACtD,IAAMgE,KAAK,GAAGlsB,SAAS,CAAC+L,EAAE,CAAC4Z,YAAY,CAAC,CAAC,GAAGgsD,SAAS,CAACptC,WAAW,GAAGotC,SAAS,CAACrtC,WAAW,CAAC;MAC1F,IAAMutC,WAAW,GAAGlmE,IAAI,CAACigB,GAAG,CAACM,KAAK,CAAC;MACnC,IAAM4lD,WAAW,GAAGnmE,IAAI,CAACmgB,GAAG,CAACI,KAAK,CAAC;MACnC,IAAM6lD,YAAY,GAAGhmE,EAAE,CAACgjC,uBAAuB,CAAC,CAAC,CAAC,CAACr7B,IAAI;MACvD,OAAO;QACLvS,CAAC,EAAGywE,cAAc,GAAGC,WAAW,GAAKE,YAAY,GAAGD,WAAY;QAChEvyE,CAAC,EAAGqyE,cAAc,GAAGE,WAAW,GAAKC,YAAY,GAAGF;MACtD,CAAC;IACH;EAAC;IAAAjnE,GAAA;IAAAC,KAAA,EACD,SAAAimE,kBAAkBkB,WAAW,EAAE;MAC7B,IAAMjmE,EAAE,GAAG,IAAI;MACf,IAAM6kE,QAAQ,GAAG7kE,EAAE,CAACkH,OAAO,CAACu8D,IAAI;MAChC,IAAMc,cAAc,GAAGM,QAAQ,CAACN,cAAc;MAC9C,IAAMn7C,MAAM,GAAGm7C,cAAc,CAACM,QAAQ,CAACt7C,IAAI,CAAC,IAAIg7C,cAAc,CAACzC,WAAW;MAC1E,IAAMoE,YAAY,GAAGlmE,EAAE,CAACslE,mBAAmB,CAACW,WAAW,EAAE,CAAC,EAAEnC,mBAAmB,CAAC9jE,EAAE,EAAE,CAACimE,WAAW,CAAC,EAAEjmE,EAAE,CAACokE,UAAU,CAAC,EAAEh7C,MAAM,CAAC;MAC1H,IAAMzhB,IAAI,GAAG3H,EAAE,CAAC2lE,aAAa,CAACO,YAAY,CAAC;MAC3C,IAAM9C,QAAQ,GAAGxjE,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAAC4Z,YAAY,CAAC,CAAC,GAAG5Z,EAAE,CAACmc,KAAK,GAAGxU,IAAI,CAACvS,CAAC,GAAG4K,EAAE,CAACkc,MAAM,GAAGvU,IAAI,CAACnU,CAAC,CAAC,GAAG,CAAC;MAC3F,OAAO4vE,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;IACpC;EAAC;IAAAvkE,GAAA;IAAAC,KAAA,EACD,SAAAqmE,kBAAA,EAAoB;MAClB,IAAMnlE,EAAE,GAAG,IAAI;MACf,IAAI0jE,UAAU,GAAG1jE,EAAE,CAACsX,MAAM,CAAC1N,IAAI,IAAI,EAAE;MACrC,IAAIlX,CAAC,EAAEwW,IAAI;MACX,IAAIw6D,UAAU,CAACrjE,MAAM,EAAE;QACrB,OAAOqjE,UAAU;MACnB;MACA,IAAMlsD,KAAK,GAAGxX,EAAE,CAACwL,uBAAuB,CAAC,CAAC;MAC1C,IAAIxL,EAAE,CAACskE,WAAW,IAAI9sD,KAAK,CAACnX,MAAM,EAAE;QAClC,OAAQL,EAAE,CAACsX,MAAM,CAAC1N,IAAI,GAAG4N,KAAK,CAAC,CAAC,CAAC,CAAC3L,UAAU,CAACuH,kBAAkB,CAACpT,EAAE,CAAC;MACrE;MACA,KAAKtN,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGsO,KAAK,CAACnX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CgxE,UAAU,GAAGA,UAAU,CAACr5D,MAAM,CAACmN,KAAK,CAAC9kB,CAAC,CAAC,CAACmZ,UAAU,CAACuH,kBAAkB,CAACpT,EAAE,CAAC,CAAC;MAC5E;MACA,OAAQA,EAAE,CAACsX,MAAM,CAAC1N,IAAI,GAAG5J,EAAE,CAACmmE,SAAS,CAACzC,UAAU,CAAC;IACnD;EAAC;IAAA7kE,GAAA;IAAAC,KAAA,EACD,SAAA8lE,mBAAA,EAAqB;MACnB,IAAM5kE,EAAE,GAAG,IAAI;MACf,IAAM0jE,UAAU,GAAG1jE,EAAE,CAACsX,MAAM,CAACzF,MAAM,IAAI,EAAE;MACzC,IAAInf,CAAC,EAAEwW,IAAI;MACX,IAAIw6D,UAAU,CAACrjE,MAAM,EAAE;QACrB,OAAOqjE,UAAU;MACnB;MACA,IAAM7xD,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,CAAC,CAAC;MAC7B,KAAKpf,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG2I,MAAM,CAACxR,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC/CgxE,UAAU,CAAChiE,IAAI,CAAC0P,MAAK,CAACpR,EAAE,EAAE6R,MAAM,CAACnf,CAAC,CAAC,CAAC,CAAC;MACvC;MACA,OAAQsN,EAAE,CAACsX,MAAM,CAACzF,MAAM,GAAG7R,EAAE,CAACskE,WAAW,GAAGZ,UAAU,GAAG1jE,EAAE,CAACmmE,SAAS,CAACzC,UAAU,CAAC;IACnF;EAAC;IAAA7kE,GAAA;IAAAC,KAAA,EACD,SAAAqnE,UAAUn/D,MAAM,EAAE;MAChB,OAAOjT,YAAY,CAACiT,MAAM,CAACyQ,IAAI,CAACirD,MAAM,CAAC,CAAC;IAC1C;EAAC;EAAA,OAAAqB,SAAA;AAAA,EA7PqBlnC,KAAK;AA+P7BknC,SAAS,CAACz5D,EAAE,GAAG,MAAM;AACrBy5D,SAAS,CAACtxE,QAAQ,GAAG;EACnBolC,MAAM,EAAE,MAAM;EACd/N,QAAQ,EAAE,CAAC,CAAC;EACZ25C,IAAI,EAAE;IACJT,MAAM,EAAE,KAAK;IACbz5C,IAAI,EAAE,KAAK;IACX8Q,KAAK,EAAE,KAAK;IACZ4oC,UAAU,EAAE,KAAK;IACjBE,OAAO,EAAE,aAAa;IACtBoB,cAAc,EAAE,CAAC;EACnB,CAAC;EACDvsD,KAAK,EAAE;IACL4nB,MAAM,EAAE,MAAM;IACd5G,KAAK,EAAE;MACLa,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAAS6lB,WAAWA,CAAC0mB,KAAK,EAAE7pD,GAAG,EAAEpU,OAAO,EAAE;EACxC,IAAI+d,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAGigD,KAAK,CAAC/lE,MAAM,GAAG,CAAC;EACzB,IAAIgmE,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU;EAClD,IAAIr+D,OAAO,EAAE;IACX,IAAIoU,GAAG,IAAI6pD,KAAK,CAAClgD,EAAE,CAAC,CAAC2G,GAAG,IAAItQ,GAAG,IAAI6pD,KAAK,CAACjgD,EAAE,CAAC,CAAC0G,GAAG,EAAE;MAAA,IAAA45C,aAAA,GACpCpxE,YAAY,CAAC+wE,KAAK,EAAE,KAAK,EAAE7pD,GAAG,CAAC;MAAzC2J,EAAE,GAAAugD,aAAA,CAAFvgD,EAAE;MAAEC,EAAE,GAAAsgD,aAAA,CAAFtgD,EAAE;IACV;IAAC,IAAAugD,SAAA,GACsCN,KAAK,CAAClgD,EAAE,CAAC;IAAzCmgD,UAAU,GAAAK,SAAA,CAAf75C,GAAG;IAAoB05C,UAAU,GAAAG,SAAA,CAAhBjD,IAAI;IAAA,IAAAkD,SAAA,GACgBP,KAAK,CAACjgD,EAAE,CAAC;IAAzCmgD,UAAU,GAAAK,SAAA,CAAf95C,GAAG;IAAoB25C,UAAU,GAAAG,SAAA,CAAhBlD,IAAI;EACzB,CAAC,MAAM;IACL,IAAIlnD,GAAG,IAAI6pD,KAAK,CAAClgD,EAAE,CAAC,CAACu9C,IAAI,IAAIlnD,GAAG,IAAI6pD,KAAK,CAACjgD,EAAE,CAAC,CAACs9C,IAAI,EAAE;MAAA,IAAAmD,aAAA,GACtCvxE,YAAY,CAAC+wE,KAAK,EAAE,MAAM,EAAE7pD,GAAG,CAAC;MAA1C2J,EAAE,GAAA0gD,aAAA,CAAF1gD,EAAE;MAAEC,EAAE,GAAAygD,aAAA,CAAFzgD,EAAE;IACV;IAAC,IAAA0gD,UAAA,GACsCT,KAAK,CAAClgD,EAAE,CAAC;IAAxCmgD,UAAU,GAAAQ,UAAA,CAAhBpD,IAAI;IAAmB8C,UAAU,GAAAM,UAAA,CAAfh6C,GAAG;IAAA,IAAAi6C,UAAA,GACgBV,KAAK,CAACjgD,EAAE,CAAC;IAAxCmgD,UAAU,GAAAQ,UAAA,CAAhBrD,IAAI;IAAmB+C,UAAU,GAAAM,UAAA,CAAfj6C,GAAG;EACzB;EACA,IAAMk6C,IAAI,GAAGT,UAAU,GAAGD,UAAU;EACpC,OAAOU,IAAI,GAAGR,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAU,KAAKhqD,GAAG,GAAG8pD,UAAU,CAAC,GAAGU,IAAI,GAAGR,UAAU;AAC/F;AAAC,IACKS,eAAe,0BAAAC,UAAA;EAAApsD,SAAA,CAAAmsD,eAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAnsD,YAAA,CAAAisD,eAAA;EACnB,SAAAA,gBAAYv/D,KAAK,EAAE;IAAA,IAAA0/D,OAAA;IAAA9oE,eAAA,OAAA2oE,eAAA;IACjBG,OAAA,GAAAD,QAAA,CAAAjnE,IAAA,OAAMwH,KAAK;IACX0/D,OAAA,CAAKC,MAAM,GAAG,EAAE;IAChBD,OAAA,CAAKE,OAAO,GAAG1oE,SAAS;IACxBwoE,OAAA,CAAKG,WAAW,GAAG3oE,SAAS;IAAC,OAAAwoE,OAAA;EAC/B;EAACvoE,YAAA,CAAAooE,eAAA;IAAAnoE,GAAA;IAAAC,KAAA,EACD,SAAAkmE,YAAA,EAAc;MACZ,IAAMhlE,EAAE,GAAG,IAAI;MACf,IAAM0jE,UAAU,GAAG1jE,EAAE,CAACunE,sBAAsB,CAAC,CAAC;MAC9C,IAAMnB,KAAK,GAAGpmE,EAAE,CAAConE,MAAM,GAAGpnE,EAAE,CAACwnE,gBAAgB,CAAC9D,UAAU,CAAC;MACzD1jE,EAAE,CAACqnE,OAAO,GAAG3nB,WAAW,CAAC0mB,KAAK,EAAEpmE,EAAE,CAACH,GAAG,CAAC;MACvCG,EAAE,CAACsnE,WAAW,GAAG5nB,WAAW,CAAC0mB,KAAK,EAAEpmE,EAAE,CAACmC,GAAG,CAAC,GAAGnC,EAAE,CAACqnE,OAAO;MACxD/rD,IAAA,CAAAC,eAAA,CAAAyrD,eAAA,CAAA5vD,SAAA,wBAAAnX,IAAA,OAAkByjE,UAAU;IAC9B;EAAC;IAAA7kE,GAAA;IAAAC,KAAA,EACD,SAAA0oE,iBAAiB9D,UAAU,EAAE;MAC3B,IAAO7jE,GAAG,GAAS,IAAI,CAAhBA,GAAG;QAAEsC,GAAG,GAAI,IAAI,CAAXA,GAAG;MACf,IAAMzB,KAAK,GAAG,EAAE;MAChB,IAAM0lE,KAAK,GAAG,EAAE;MAChB,IAAI1zE,CAAC,EAAEwW,IAAI,EAAEsI,IAAI,EAAEoG,IAAI,EAAEiB,IAAI;MAC7B,KAAKnmB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGw6D,UAAU,CAACrjE,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDklB,IAAI,GAAG8rD,UAAU,CAAChxE,CAAC,CAAC;QACpB,IAAIklB,IAAI,IAAI/X,GAAG,IAAI+X,IAAI,IAAIzV,GAAG,EAAE;UAC9BzB,KAAK,CAACgB,IAAI,CAACkW,IAAI,CAAC;QAClB;MACF;MACA,IAAIlX,KAAK,CAACL,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO,CACL;UAACojE,IAAI,EAAE5jE,GAAG;UAAEgtB,GAAG,EAAE;QAAC,CAAC,EACnB;UAAC42C,IAAI,EAAEthE,GAAG;UAAE0qB,GAAG,EAAE;QAAC,CAAC,CACpB;MACH;MACA,KAAKn6B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CmmB,IAAI,GAAGnY,KAAK,CAAChO,CAAC,GAAG,CAAC,CAAC;QACnB8e,IAAI,GAAG9Q,KAAK,CAAChO,CAAC,GAAG,CAAC,CAAC;QACnBklB,IAAI,GAAGlX,KAAK,CAAChO,CAAC,CAAC;QACf,IAAIkN,IAAI,CAACy6B,KAAK,CAAC,CAACxhB,IAAI,GAAGrH,IAAI,IAAI,CAAC,CAAC,KAAKoG,IAAI,EAAE;UAC1CwuD,KAAK,CAAC1kE,IAAI,CAAC;YAAC+hE,IAAI,EAAE7rD,IAAI;YAAEiV,GAAG,EAAEn6B,CAAC,IAAIwW,IAAI,GAAG,CAAC;UAAC,CAAC,CAAC;QAC/C;MACF;MACA,OAAOk9D,KAAK;IACd;EAAC;IAAAvnE,GAAA;IAAAC,KAAA,EACD,SAAAyoE,uBAAA,EAAyB;MACvB,IAAMvnE,EAAE,GAAG,IAAI;MACf,IAAI0jE,UAAU,GAAG1jE,EAAE,CAACsX,MAAM,CAACxP,GAAG,IAAI,EAAE;MACpC,IAAI47D,UAAU,CAACrjE,MAAM,EAAE;QACrB,OAAOqjE,UAAU;MACnB;MACA,IAAM95D,IAAI,GAAG5J,EAAE,CAACmlE,iBAAiB,CAAC,CAAC;MACnC,IAAM5xD,KAAK,GAAGvT,EAAE,CAAC4kE,kBAAkB,CAAC,CAAC;MACrC,IAAIh7D,IAAI,CAACvJ,MAAM,IAAIkT,KAAK,CAAClT,MAAM,EAAE;QAC/BqjE,UAAU,GAAG1jE,EAAE,CAACmmE,SAAS,CAACv8D,IAAI,CAACS,MAAM,CAACkJ,KAAK,CAAC,CAAC;MAC/C,CAAC,MAAM;QACLmwD,UAAU,GAAG95D,IAAI,CAACvJ,MAAM,GAAGuJ,IAAI,GAAG2J,KAAK;MACzC;MACAmwD,UAAU,GAAG1jE,EAAE,CAACsX,MAAM,CAACxP,GAAG,GAAG47D,UAAU;MACvC,OAAOA,UAAU;IACnB;EAAC;IAAA7kE,GAAA;IAAAC,KAAA,EACD,SAAAmmE,mBAAmBnmE,KAAK,EAAE;MACxB,OAAO,CAAC4gD,WAAW,CAAC,IAAI,CAAC0nB,MAAM,EAAEtoE,KAAK,CAAC,GAAG,IAAI,CAACuoE,OAAO,IAAI,IAAI,CAACC,WAAW;IAC5E;EAAC;IAAAzoE,GAAA;IAAAC,KAAA,EACD,SAAAskC,iBAAiBC,KAAK,EAAE;MACtB,IAAMrjC,EAAE,GAAG,IAAI;MACf,IAAM0lE,OAAO,GAAG1lE,EAAE,CAACqkE,QAAQ;MAC3B,IAAM/gC,OAAO,GAAGtjC,EAAE,CAACujC,kBAAkB,CAACF,KAAK,CAAC,GAAGqiC,OAAO,CAAC3iE,MAAM,GAAG2iE,OAAO,CAACt9D,GAAG;MAC3E,OAAOs3C,WAAW,CAAC1/C,EAAE,CAAConE,MAAM,EAAE9jC,OAAO,GAAGtjC,EAAE,CAACsnE,WAAW,GAAGtnE,EAAE,CAACqnE,OAAO,EAAE,IAAI,CAAC;IAC5E;EAAC;EAAA,OAAAL,eAAA;AAAA,EAlE2BjD,SAAS;AAoEvCiD,eAAe,CAAC18D,EAAE,GAAG,YAAY;AACjC08D,eAAe,CAACv0E,QAAQ,GAAGsxE,SAAS,CAACtxE,QAAQ;AAE7C,IAAIga,MAAM,GAAG,aAAalH,MAAM,CAACsP,MAAM,CAAC;EACxCkU,SAAS,EAAE,IAAI;EACf8wC,aAAa,EAAEA,aAAa;EAC5B8C,WAAW,EAAEA,WAAW;EACxBY,gBAAgB,EAAEA,gBAAgB;EAClCuC,iBAAiB,EAAEA,iBAAiB;EACpCiE,SAAS,EAAEA,SAAS;EACpBiD,eAAe,EAAEA;AACjB,CAAC,CAAC;AAEF,IAAMS,aAAa,GAAG,CACpB3+C,WAAW,EACXnV,QAAQ,EACRoL,OAAO,EACPtS,MAAM,CACP;AAED,SAASnJ,SAAS,EAAE+C,UAAU,EAAE80C,UAAU,EAAExgC,aAAa,EAAE8nC,UAAU,EAAElxB,YAAY,EAAES,aAAa,EAAEhU,gBAAgB,EAAE67C,aAAa,EAAE9nB,KAAK,EAAEnkC,iBAAiB,EAAEu3C,iBAAiB,IAAIoU,UAAU,EAAE5jC,WAAW,EAAElV,kBAAkB,EAAE+V,OAAO,EAAE+zB,aAAa,IAAIiP,MAAM,EAAEjtC,WAAW,EAAEojC,aAAa,IAAInE,MAAM,EAAEjnC,cAAc,EAAE46B,WAAW,EAAEwd,WAAW,EAAEY,gBAAgB,EAAEv1C,aAAa,EAAEo4B,YAAY,EAAEz5B,mBAAmB,EAAEwB,eAAe,EAAE23C,iBAAiB,EAAEjjC,KAAK,EAAEnU,iBAAiB,EAAEmoC,eAAe,IAAI4I,QAAQ,EAAE7hC,KAAK,EAAEmsC,SAAS,EAAEiD,eAAe,EAAErW,YAAY,IAAIX,KAAK,EAAEmJ,cAAc,IAAI3E,OAAO,EAAE1qC,QAAQ,IAAI49C,SAAS,EAAEpxC,eAAe,EAAE7zB,QAAQ,EAAEqmB,WAAW,EAAEnV,QAAQ,EAAE+Z,OAAO,EAAE3O,OAAO,EAAE0oD,aAAa,EAAE57B,QAAQ,EAAEp/B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
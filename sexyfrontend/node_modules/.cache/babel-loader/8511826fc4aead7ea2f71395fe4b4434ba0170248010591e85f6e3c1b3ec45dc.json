{"ast":null,"code":"var _jsxFileName = \"/Users/adhiraj/Desktop/PRICKLY NEW/frontend/src/component/Admin/EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport \"./ProductList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, getEmail } from \"../../actions/emailAction\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport SideBar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    emails\n  } = useSelector(state => state.emails);\n  // const { email } = emails\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(getEmail());\n  }, [dispatch, alert, error]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    minWidth: 200,\n    flex: 0.5\n  }, {\n    field: \"emails\",\n    headerName: \"Email\",\n    minWidth: 350,\n    flex: 1\n\n    // renderCell: (params) => {\n    //     return (\n    //         <div>\n    //             <Fragment>\n    //                 <Link to={`/admin/emails/${params.getValue(params.id, \"id\")}`} />\n    //             </Fragment>\n    //         </div>\n    //     )\n    // }\n  }];\n\n  const rows = emails.map((item, index) => ({\n    id: index + 1,\n    // You can use the index as the ID or use item.id if you have it\n    email: item.emails\n  }));\n  // const rows = [];\n\n  // emails &&\n  //     emails.forEach((item) => {\n\n  //         console.log(\"data :\", item.email);\n  //         rows.push({\n  //             id: item.id,\n  //             email: item.email,\n  //         });\n  //     });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL EMAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EmailList, \"9R/gqH3Te0b4YlJ/qanNeacRUuo=\", false, function () {\n  return [useDispatch, useAlert, useSelector];\n});\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","getEmail","Link","useAlert","SideBar","jsxDEV","_jsxDEV","_Fragment","EmailList","_s","dispatch","alert","error","emails","state","columns","field","headerName","minWidth","flex","rows","map","item","index","id","email","children","className","fileName","_jsxFileName","lineNumber","columnNumber","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["/Users/adhiraj/Desktop/PRICKLY NEW/frontend/src/component/Admin/EmailList.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport \"./ProductList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    clearErrors,\n    getEmail,\n} from \"../../actions/emailAction\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport SideBar from \"./Sidebar\";\n\n\n\nconst EmailList = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n    const { error, emails } = useSelector((state) => state.emails);\n    // const { email } = emails\n\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        dispatch(getEmail());\n    }, [dispatch, alert, error]);\n\n    const columns = [\n        { field: \"id\", headerName: \"ID\", minWidth: 200, flex: 0.5 },\n\n        {\n            field: \"emails\",\n            headerName: \"Email\",\n            minWidth: 350,\n            flex: 1,\n\n            // renderCell: (params) => {\n            //     return (\n            //         <div>\n            //             <Fragment>\n            //                 <Link to={`/admin/emails/${params.getValue(params.id, \"id\")}`} />\n            //             </Fragment>\n            //         </div>\n            //     )\n            // }\n        },\n\n    ]\n\n    const rows = emails.map((item, index) => ({\n        id: index + 1, // You can use the index as the ID or use item.id if you have it\n        email: item.emails,\n    }));\n    // const rows = [];\n\n    // emails &&\n    //     emails.forEach((item) => {\n\n    //         console.log(\"data :\", item.email);\n    //         rows.push({\n    //             id: item.id,\n    //             email: item.email,\n    //         });\n    //     });\n\n    return (<>\n        <div className=\"dashboard\">\n            <SideBar />\n            <div className=\"productListContainer\">\n                <h1 id=\"productListHeading\">ALL EMAILS</h1>\n\n                <DataGrid\n                    rows={rows}\n                    columns={columns}\n                    pageSize={5}\n                    disableSelectionOnClick\n                    className=\"productListTable\"\n                    autoHeight\n                />\n            </div>\n        </div>\n    </>)\n}\n\nexport default EmailList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}